<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FanXing28</title>
  
  
  <link href="https://fanxing28.github.io/atom.xml" rel="self"/>
  
  <link href="https://fanxing28.github.io/"/>
  <updated>2023-12-02T12:30:58.943Z</updated>
  <id>https://fanxing28.github.io/</id>
  
  <author>
    <name>繁星ツ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>功能代码块</title>
    <link href="https://fanxing28.github.io/2023/12/02/%E5%B7%A5%E5%85%B7/%E5%8A%9F%E8%83%BD%E4%BB%A3%E7%A0%81%E5%9D%97/"/>
    <id>https://fanxing28.github.io/2023/12/02/%E5%B7%A5%E5%85%B7/%E5%8A%9F%E8%83%BD%E4%BB%A3%E7%A0%81%E5%9D%97/</id>
    <published>2023-12-02T12:53:39.201Z</published>
    <updated>2023-12-02T12:30:58.943Z</updated>
    
    <content type="html"><![CDATA[<h1 id="uniapp"><a href="#uniapp" class="headerlink" title="uniapp"></a>uniapp</h1><h2 id="1-居中弹出-修改密码-对话框"><a href="#1-居中弹出-修改密码-对话框" class="headerlink" title="1. 居中弹出(修改密码)对话框"></a>1. 居中弹出(修改密码)对话框</h2><ol><li><strong>view层代码</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;tn-modal v-model=&quot;show&quot; :custom=&quot;true&quot; padding=&quot;0&quot;&gt;</span><br><span class="line">    &lt;view class=&quot;&quot;</span><br><span class="line">        style=&quot;border-bottom: 2rpx solid #000; text-align: center; color: #000; font-weight: bold; padding: 20rpx 0;&quot;&gt;</span><br><span class="line">        修改密码</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">    &lt;view style=&quot;padding: 40rpx;&quot;&gt;</span><br><span class="line">        &lt;uni-forms ref=&quot;form&quot; :rules=&quot;rules&quot; :modelValue=&quot;formData&quot;&gt;</span><br><span class="line">            &lt;uni-forms-item name=&quot;old_password&quot;&gt;</span><br><span class="line">                &lt;view style=&quot;margin-bottom: 12rpx;&quot;&gt;旧密码：&lt;/view&gt;</span><br><span class="line">                &lt;uni-easyinput v-model=&quot;formData.old_password&quot; placeholder=&quot;请输入旧密码&quot;&gt;&lt;/uni-easyinput&gt;</span><br><span class="line">            &lt;/uni-forms-item&gt;</span><br><span class="line">            &lt;uni-forms-item name=&quot;new_password&quot;&gt;</span><br><span class="line">                &lt;view style=&quot;margin-bottom: 12rpx;&quot;&gt;新密码：&lt;/view&gt;</span><br><span class="line">                &lt;uni-easyinput v-model=&quot;formData.new_password&quot; placeholder=&quot;请输入新密码&quot;&gt;&lt;/uni-easyinput&gt;</span><br><span class="line">            &lt;/uni-forms-item&gt;</span><br><span class="line">            &lt;uni-forms-item name=&quot;confirm_password&quot;&gt;</span><br><span class="line">                &lt;view style=&quot;margin-bottom: 12rpx;&quot;&gt;确认密码：&lt;/view&gt;</span><br><span class="line">                &lt;uni-easyinput v-model=&quot;formData.confirm_password&quot; placeholder=&quot;请再次输入密码&quot;&gt;&lt;/uni-easyinput&gt;</span><br><span class="line">            &lt;/uni-forms-item&gt;</span><br><span class="line">        &lt;/uni-forms&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">    &lt;view class=&quot;modalBtn&quot;&gt;</span><br><span class="line">        &lt;button @tap=&quot;modalCancel&quot;</span><br><span class="line">            style=&quot;border-radius: 0; background-color: #fff; color: #0e6eb8; position: absolute; left: 0; bottom: 0; width: 50%; border-top: 4rpx solid #0e6eb8;&quot;&gt;取消&lt;/button&gt;</span><br><span class="line">        &lt;button @tap=&quot;modalConfirm&quot;</span><br><span class="line">            style=&quot;border-radius: 0;background-color: #0e6eb8; color: #fff; position: absolute; right: 0; bottom: 0; width: 50%; border-top: 4rpx solid #0e6eb8;&quot;&gt;确认&lt;/button&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">&lt;/tn-modal&gt;</span><br></pre></td></tr></table></figure></li><li><strong>js层</strong></li></ol><ul><li>show: false &#x2F;&#x2F; 控制对话框显示与隐藏</li><li>formData: { old_password: ‘’, new_password: ‘’, confirm_password: ‘’ }, &#x2F;&#x2F; 修改密码表单数据</li><li>modalCancel：对话框取消按钮事件</li><li>modalConfirm：对话框确认按钮事件</li></ul><ol start="2"><li><strong>样式</strong><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.modalBtn</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">80</span>rpx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-uniapp修改密码-表单验证-自下而上弹框"><a href="#2-uniapp修改密码-表单验证-自下而上弹框" class="headerlink" title="2. uniapp修改密码(表单验证+自下而上弹框)"></a>2. uniapp修改密码(表单验证+自下而上弹框)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;tn-popup v-model=&quot;popupShow&quot; mode=&quot;<span class="attribute">bottom</span>&quot; borderRadius=&quot;<span class="number">24</span>&quot; class=&quot;changePassPopup&quot; <span class="attribute">height</span>=&quot;<span class="number">924</span>&quot;&gt;</span><br><span class="line">    &lt;view class=&quot;<span class="selector-tag">header</span>&quot;&gt;</span><br><span class="line">        &lt;view class=&quot;title&quot;&gt;修改密码&lt;/view&gt;</span><br><span class="line">        &lt;view class=&quot;closeBtn&quot; <span class="keyword">@click</span>=&quot;modalCancel&quot;&gt;关闭&lt;/view&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">    &lt;view class=<span class="string">&quot;formMain&quot;</span>&gt;</span><br><span class="line">        &lt;uni-forms ref=<span class="string">&quot;form&quot;</span> :modelValue=<span class="string">&quot;formData&quot;</span> border toast-position=<span class="string">&quot;bottom&quot;</span>&gt;</span><br><span class="line">            &lt;uni-forms-item name=<span class="string">&quot;old_password&quot;</span> key=<span class="string">&quot;old_password&quot;</span>&gt;</span><br><span class="line">                &lt;template #default&gt;</span><br><span class="line">                    &lt;view class=<span class="string">&quot;formItem&quot;</span>&gt;</span><br><span class="line">                        &lt;view class=<span class="string">&quot;labelStyle&quot;</span>&gt;旧密码&lt;text class=<span class="string">&quot;textRequired&quot;</span>&gt;*&lt;/text&gt;：&lt;/view&gt;</span><br><span class="line">                        &lt;input v-model=<span class="string">&quot;formData.old_password&quot;</span> type=<span class="string">&quot;password&quot;</span> placeholder=<span class="string">&quot;请输入旧密码&quot;</span> class=<span class="string">&quot;formInput&quot;</span>/&gt;</span><br><span class="line">                    &lt;/view&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/uni-forms-item&gt;</span><br><span class="line">            &lt;uni-forms-item name=<span class="string">&quot;new_password&quot;</span> key=<span class="string">&quot;new_password&quot;</span>&gt;</span><br><span class="line">                &lt;template #default&gt;</span><br><span class="line">                    &lt;view class=<span class="string">&quot;formItem&quot;</span>&gt;</span><br><span class="line">                        &lt;view class=<span class="string">&quot;labelStyle&quot;</span>&gt;新密码&lt;text class=<span class="string">&quot;textRequired&quot;</span>&gt;*&lt;/text&gt;：&lt;/view&gt;</span><br><span class="line">                        &lt;input v-model=<span class="string">&quot;formData.new_password&quot;</span> type=<span class="string">&quot;password&quot;</span> placeholder=<span class="string">&quot;请输入新密码&quot;</span> class=<span class="string">&quot;formInput&quot;</span>/&gt;</span><br><span class="line">                    &lt;/view&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/uni-forms-item&gt;</span><br><span class="line">            &lt;uni-forms-item name=<span class="string">&quot;confirm_password&quot;</span> key=<span class="string">&quot;confirm_password&quot;</span>&gt;</span><br><span class="line">                &lt;template #default&gt;</span><br><span class="line">                    &lt;view class=<span class="string">&quot;formItem&quot;</span>&gt;</span><br><span class="line">                        &lt;view class=<span class="string">&quot;labelStyle&quot;</span>&gt;确认密码&lt;text class=<span class="string">&quot;textRequired&quot;</span>&gt;*&lt;/text&gt;：&lt;/view&gt;</span><br><span class="line">                        &lt;input v-model=<span class="string">&quot;formData.confirm_password&quot;</span> type=<span class="string">&quot;password&quot;</span> placeholder=<span class="string">&quot;请再次输入新密码&quot;</span> class=<span class="string">&quot;formInput&quot;</span>/&gt;</span><br><span class="line">                    &lt;/view&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/uni-forms-item&gt;</span><br><span class="line">        &lt;/uni-forms&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">    &lt;button class=<span class="string">&quot;saveBtn&quot;</span> @click=<span class="string">&quot;modalConfirm&quot;</span>&gt;保存&lt;/button&gt;</span><br><span class="line">&lt;/tn-popup&gt;</span><br></pre></td></tr></table></figure><p>验证规则：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">rules: &#123;</span><br><span class="line">     old_password: &#123;</span><br><span class="line">         rules: [&#123;</span><br><span class="line">             required: true,</span><br><span class="line">             errorMessage: <span class="string">&#x27;旧密码不可为空！&#x27;</span>,</span><br><span class="line">         &#125;, ],</span><br><span class="line">     &#125;,  </span><br><span class="line">  new_password: &#123;</span><br><span class="line">         rules: [&#123;</span><br><span class="line">             required: true,</span><br><span class="line">             errorMessage: <span class="string">&#x27;新密码不可为空！&#x27;</span>,</span><br><span class="line">        &#125;],</span><br><span class="line">     &#125;,</span><br><span class="line">     confirm_password: &#123;</span><br><span class="line">         rules: [&#123;</span><br><span class="line">            required: true,</span><br><span class="line">            errorMessage: <span class="string">&#x27;新密码不可为空！&#x27;</span>,</span><br><span class="line">         &#125;, ],</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-自定义代码块（VsCode和HbuilderX）"><a href="#3-自定义代码块（VsCode和HbuilderX）" class="headerlink" title="3. 自定义代码块（VsCode和HbuilderX）"></a>3. 自定义代码块（VsCode和HbuilderX）</h2><h3 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;vue2起始代码&quot;: &#123;</span><br><span class="line">        &quot;prefix&quot;: <span class="string">&quot;v2&quot;</span>,</span><br><span class="line">        <span class="string">&quot;body&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;&lt;template&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t&lt;view class=\&quot;wrap\&quot;&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\t&lt;view&gt;$1&lt;/view&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t&lt;/view&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;/template&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;script&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\texport default &#123;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\tdata() &#123;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\t\treturn &#123;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\t\t\t&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\t\t&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\t&#125;,&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\tmethods: &#123;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\t\t&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\t&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;/script&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;style lang=\&quot;scss\&quot; scoped&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;/style&gt;&quot;</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;vue3起始代码&quot;: &#123;</span><br><span class="line">        &quot;prefix&quot;: <span class="string">&quot;v3&quot;</span>,</span><br><span class="line">        <span class="string">&quot;body&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;&lt;template&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t&lt;view class=\&quot;wrap\&quot;&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\t&lt;view&gt;$1&lt;/view&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t&lt;/view&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;/template&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;script setup&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\timport &#123; ref, reactive &#125; from \&quot;vue\&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;/script&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;style lang=\&quot;scss\&quot; scoped&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;/style&gt;&quot;</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SCSS"><a href="#SCSS" class="headerlink" title="SCSS"></a>SCSS</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&quot;uni小程序<span class="attribute">flex</span>片段&quot;: &#123;</span><br><span class="line">    &quot;prefix&quot;: <span class="string">&quot;unifx&quot;</span>,</span><br><span class="line">    <span class="string">&quot;body&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;display: flex;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;align-items: center;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;justify-content: center;$1&quot;</span>,</span><br><span class="line">    ]</span><br><span class="line">&#125;,    </span><br><span class="line">&quot;uni小程序<span class="attribute">flex</span>混入片段&quot;: &#123;</span><br><span class="line">    &quot;prefix&quot;: <span class="string">&quot;unifc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;body&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;@mixin center() &#123;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;\tdisplay: flex;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;\talign-items: center;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;&#125;$1&quot;</span>,</span><br><span class="line">    ]</span><br><span class="line">&#125;,</span><br><span class="line">&quot;uni小程序变量&quot;: &#123;</span><br><span class="line">    &quot;prefix&quot;: <span class="string">&quot;unifb&quot;</span>,</span><br><span class="line">    <span class="string">&quot;body&quot;</span>: [    </span><br><span class="line">        <span class="string">&quot;// 主题色&quot;</span>,</span><br><span class="line">        <span class="string">&quot;\\$themeColor: #0E6EB8;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;// 整个页面背景色&quot;</span>,</span><br><span class="line">        <span class="string">&quot;\\$pageBackColor: #FAFAFA;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;// 页面块背景色&quot;</span>,</span><br><span class="line">        <span class="string">&quot;\\$pageBlockBColor: #FFFFFF;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;// 分割线背景色&quot;</span>,</span><br><span class="line">        <span class="string">&quot;\\$divideLineBColor: #F2F2F2;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;// 粗体字体颜色&quot;</span>,</span><br><span class="line">        <span class="string">&quot;\\$blodFColor: #333333;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;// 细体字体颜色&quot;</span>,</span><br><span class="line">        <span class="string">&quot;\\$thinFColor: #999999;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;// 大号字体&quot;</span>,</span><br><span class="line">        <span class="string">&quot;\\$maxFSize: 28rpx;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;// 中号字体&quot;</span>,</span><br><span class="line">        <span class="string">&quot;\\$midFSize: 24rpx;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;// 小号字体&quot;</span>,</span><br><span class="line">        <span class="string">&quot;\\$minFSize: 20rpx;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;$1&quot;</span>,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码块是快速开发的利器。简单的敲几个字母，回车，就能生成大段代码。<br>比如我们经常会敲if…else结构，在HBuilderX中，只需敲<code>ife</code>回车，就能直接生成相应的代码结构。<br>4. 敲ife<br>    <img src="https://ask.dcloud.net.cn/uploads/article/20190524/f82e74a214312d74070437f81c518018.png" class="lazyload placeholder" data-srcset="https://ask.dcloud.net.cn/uploads/article/20190524/f82e74a214312d74070437f81c518018.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="https://ask.dcloud.net.cn/uploads/article/20190524/f82e74a214312d74070437f81c518018.png"><br>5. 回车后生成if结构体<br>    <img src="https://ask.dcloud.net.cn/uploads/article/20190524/c083adaa471be0824d84cba501bb8867.png" class="lazyload placeholder" data-srcset="https://ask.dcloud.net.cn/uploads/article/20190524/c083adaa471be0824d84cba501bb8867.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="https://ask.dcloud.net.cn/uploads/article/20190524/c083adaa471be0824d84cba501bb8867.png"></p><p>HBuilderX已经内置了大量常用的代码块，熟悉这些代码块，对于提高编程效率有重要帮助。<br>查看内建的代码块，点菜单-工具-代码块设置，选择你要查看的语言的代码块。<br><img src="https://ask.dcloud.net.cn/uploads/article/20190515/c94715b172275fdbaaf5fc337496bfbc.png" class="lazyload placeholder" data-srcset="https://ask.dcloud.net.cn/uploads/article/20190515/c94715b172275fdbaaf5fc337496bfbc.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="https://ask.dcloud.net.cn/uploads/article/20190515/c94715b172275fdbaaf5fc337496bfbc.png"><br>打开的界面中，左侧即是预置的代码块，右侧是开发者可以自己扩展代码块的地方。<br><img src="https://ask.dcloud.net.cn/uploads/article/20190524/c39f65705c18f534d6e55de28adc08c2.png" class="lazyload placeholder" data-srcset="https://ask.dcloud.net.cn/uploads/article/20190524/c39f65705c18f534d6e55de28adc08c2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="https://ask.dcloud.net.cn/uploads/article/20190524/c39f65705c18f534d6e55de28adc08c2.png"></p><h3 id="模板示例"><a href="#模板示例" class="headerlink" title="模板示例"></a>模板示例</h3><p>自定义代码块都是配置json文件中的，直接来个自己用的Vue2和Vue3起始代码的代码块的配置如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;vue2起始代码&quot;: &#123;</span><br><span class="line">        &quot;prefix&quot;: <span class="string">&quot;v2&quot;</span>,</span><br><span class="line">        <span class="string">&quot;body&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;&lt;template&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t&lt;view class=\&quot;wrap\&quot;&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\t&lt;view&gt;$1&lt;/view&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t&lt;/view&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;/template&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;script&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\texport default &#123;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\tdata() &#123;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\t\treturn &#123;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\t\t\t&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\t\t&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\t&#125;,&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\tmethods: &#123;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\t\t&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\t&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;/script&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;style lang=\&quot;scss\&quot; scoped&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;/style&gt;&quot;</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;vue3起始代码&quot;: &#123;</span><br><span class="line">        &quot;prefix&quot;: <span class="string">&quot;v3&quot;</span>,</span><br><span class="line">        <span class="string">&quot;body&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;&lt;template&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t&lt;view class=\&quot;wrap\&quot;&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t\t&lt;view&gt;$1&lt;/view&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t&lt;/view&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;/template&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;script setup&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\timport &#123; ref, reactive &#125; from \&quot;vue\&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;/script&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;style lang=\&quot;scss\&quot; scoped&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;\t&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;/style&gt;&quot;</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码块配置格式说明"><a href="#代码块配置格式说明" class="headerlink" title="代码块配置格式说明"></a>代码块配置格式说明</h3><p>HBuilderX使用json定义代码块的格式，兼容vscode的代码块格式，也就是你可以把vscode里已经配置的自定义代码块方便的挪到HBuilderX中使用。<br>每个配置项的说明如下：</p><ul><li><strong>key</strong><br>  “key” ：代码块显示名称，显示在代码助手列表中的名字。key是不能重复的。 上面例子中<code>&quot;vue2起始代码&quot;</code>就是一个<code>key</code>。</li><li><strong>prefix</strong><br>  “prefix” ：代码块的触发字符，就是敲什么字母可以激活这个代码块。就像上述的”v2”和”v3”</li><li><strong>body</strong><br>  “body” ：代码块的内容。内容中有如下特殊格式<br>  <code>$1</code> 表示代码块输入后光标的所在位置。如需要多光标，就在多个地方配置<code>$1</code>；如该位置有预置数据且需要选中，则写法是<code>$&#123;1:selectedtext&#125;</code>；这里还支持下拉候选菜单，多选项即下拉候选列表使用<code>$&#123;1:foo1/foo2/foo3&#125; $2</code> 表示代码块输入后再次按tab后光标的切换位置<code>tabstops</code>（代码块展开后按tab可以跳到下一个<code>tabstop</code>，在HBuilderX中看到类似绿色光标的不闪的竖线，就可以按tab或回车跳转光标过去） <code>$0</code>代表代码块输入后最终光标的所在位置（也可以按回车直接跳过去）。</li><li><strong>triggerAssist</strong><br>  “triggerAssist” ：为<code>true</code>表示该代码块输入到文档后立即在第一个<code>tabstop</code>上触发代码提示，拉出代码助手，默认为<code>false</code>。</li><li><strong>project</strong><br>  project: 将代码块控制在指定项目类型下生效。可取值有：<code>uni-app</code>、<code>Web</code>、<code>App</code>、<code>Wap2App</code><br>  比如：<code>&quot;project&quot;: &quot;uni-app&quot;</code>，代表这个代码块仅在uni-app项目下生效<br>  如果不设置，则该代码块在所有项目类型下均生效。<br>  <code>Web</code>指普通项目，<code>App</code>指5+App项目。<br>  如需设置多种项目类型，用逗号分隔。比如：<code>&quot;project&quot;: &quot;uni-app,App&quot;</code></li></ul><p><strong>配合符号：</strong></p><ul><li><strong>双引号使用<code>\&quot;</code>转义</strong></li><li><strong>换行使用多个数组表示，每个行一个数组，用<code>双引号</code>包围，并用<code>逗号</code>分隔</strong></li><li><strong>缩进需要用<code>\t</code>表示，不能直接输入缩进或空格！</strong><br><strong>总结：如果只是简单写一个代码块只写key、prefix和body就能使用了</strong><br><strong>注：选定什么类型下的编写的代码只会在相应的类型后缀文件里才能使用（例如：选择的是vue代码块写的代码块只会在”.vue”后缀文件里面才会生效）</strong></li></ul><h2 id="4-自定义顶部导航栏"><a href="#4-自定义顶部导航栏" class="headerlink" title="4. 自定义顶部导航栏"></a>4. 自定义顶部导航栏</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;view class=&quot;nav-box&quot; @click=&quot;getHeadHeight&quot; :style=&quot;&#123;&#x27;height&#x27;: height + &#x27;px&#x27;, &#x27;background&#x27; : bgColor&#125;&quot;&gt;</span><br><span class="line">        &lt;!-- 状态栏占位 --&gt;</span><br><span class="line">        &lt;view class=&quot;status_bar&quot; :style=&quot;&#123;&#x27;height&#x27;: statusBarHeight + &#x27;px&#x27;&#125;&quot;&gt;&lt;/view&gt;</span><br><span class="line">        &lt;!-- 导航内容 --&gt;</span><br><span class="line">        &lt;view class=&quot;nav-main&quot; :style=&quot;&#123;&#x27;height&#x27;: navBarHeight + &#x27;px&#x27;&#125;&quot;&gt;</span><br><span class="line">            &lt;!-- 回退图标 --&gt;</span><br><span class="line">            &lt;image src=&quot;../static/images/back.png&quot; mode=&quot;&quot; class=&quot;back&quot; @click=&quot;back(path)&quot; v-if=&quot;backIcon == true&quot;&gt;&lt;/image&gt;</span><br><span class="line">&lt;!--             &lt;image src=&quot;../static/images/back.png&quot; mode=&quot;&quot; class=&quot;back&quot; @click=&quot;backInfo()&quot;</span><br><span class="line">                v-if=&quot;loginbackIcon == true&quot;&gt;</span><br><span class="line">            &lt;/image&gt; --&gt;</span><br><span class="line">            &lt;!-- 标题 --&gt;</span><br><span class="line">            &lt;text class=&quot;nav-main-title&quot;</span><br><span class="line">                :style=&quot;backIcon == true ? &#x27;display: block;&#x27; : &#x27;&#x27;&quot;&gt;&#123;&#123;title&#125;&#125;&lt;/text&gt;</span><br><span class="line">            &lt;view v-if=&quot;backIcon&quot; style=&quot;width: 50rpx;&quot;&gt;&lt;/view&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        props: &#123;</span><br><span class="line">            bgColor: &#123;</span><br><span class="line">                type: String,</span><br><span class="line">                default: &quot;#fff&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            backIcon: &#123;</span><br><span class="line">                type: Boolean,</span><br><span class="line">                default: false</span><br><span class="line">            &#125;,</span><br><span class="line">            loginbackIcon: &#123;</span><br><span class="line">                type: Boolean,</span><br><span class="line">                default: false</span><br><span class="line">            &#125;,</span><br><span class="line">            title: &#123;</span><br><span class="line">                type: String,</span><br><span class="line">                default: &quot;&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            path: &#123;</span><br><span class="line">                type: String,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                height: 0,</span><br><span class="line">                menuButtonRect: &#123;&#125;,</span><br><span class="line">                statusBarHeight: 0,</span><br><span class="line">                navBarHeight: 0</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        created() &#123;</span><br><span class="line">            this.getHeight();</span><br><span class="line">            this.getHeadHeight()</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            getHeadHeight() &#123;</span><br><span class="line">                this.$emit(&#x27;getHeadHeight&#x27;, this.height)</span><br><span class="line">            &#125;,</span><br><span class="line">            //计算导航栏总高度</span><br><span class="line">            getHeight() &#123;</span><br><span class="line">                // 判断获取微信小程序胶囊API是否可用</span><br><span class="line">                if (uni.canIUse(&#x27;getMenuButtonBoundingClientRect&#x27;)) &#123;</span><br><span class="line">                    let sysInfo = uni.getSystemInfoSync();</span><br><span class="line">                    this.statusBarHeight = sysInfo.statusBarHeight;</span><br><span class="line">                    let rect = uni.getMenuButtonBoundingClientRect();</span><br><span class="line">                    this.menuButtonRect = JSON.parse(JSON.stringify(rect));</span><br><span class="line">                    let navBarHeight = (rect.top - sysInfo.statusBarHeight) * 2 + rect.height;</span><br><span class="line">                    this.navBarHeight = navBarHeight;</span><br><span class="line">                    this.height = sysInfo.statusBarHeight + navBarHeight;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    uni.showToast(&#123;</span><br><span class="line">                        title: &#x27;您的微信版本过低，界面可能会显示不正常&#x27;,</span><br><span class="line">                        icon: &#x27;none&#x27;,</span><br><span class="line">                        duration: 4000</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            // 返回上一级</span><br><span class="line">            back(path) &#123;</span><br><span class="line">                uni.navigateBack()</span><br><span class="line">            &#125;,</span><br><span class="line">            // 返回首页</span><br><span class="line">            backInfo() &#123;</span><br><span class="line">                uni.switchTab(&#123;</span><br><span class="line">                    url: &#x27;/pages/information/information&#x27;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">    .nav-box &#123;</span><br><span class="line">        width: 100vw;</span><br><span class="line"></span><br><span class="line">        .status_bar &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .nav-main &#123;</span><br><span class="line">            display: flex;</span><br><span class="line">            align-items: center;</span><br><span class="line">            padding: 0 20rpx;</span><br><span class="line">            border-bottom: 2rpx solid #F2F2F2;</span><br><span class="line"></span><br><span class="line">            .back &#123;</span><br><span class="line">                width: 50rpx;</span><br><span class="line">                height: 50rpx;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .nav-main-title &#123;</span><br><span class="line">                color: #000;</span><br><span class="line">                font-weight: bold;</span><br><span class="line">                font-size: 36rpx;</span><br><span class="line">                width: 100%;</span><br><span class="line">                text-align: center;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="5-自定义底部导航栏"><a href="#5-自定义底部导航栏" class="headerlink" title="5. 自定义底部导航栏"></a>5. 自定义底部导航栏</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;view class=&quot;tabBar&quot;&gt;</span><br><span class="line">        &lt;view v-for=&quot;(item,index) in tabBar&quot; :key=&quot;item.url&quot; class=&quot;tabbar_item&quot;</span><br><span class="line">            :class=&quot;&#123;&#x27;active&#x27;:item.url == currentPage&#125;&quot; @click=&quot;navTo(item)&quot;&gt;</span><br><span class="line">            &lt;image v-if=&quot;item.url == currentPage&quot; :src=&quot;item.imgClick&quot; mode=&quot;&quot;&gt;&lt;/image&gt;</span><br><span class="line">            &lt;image v-else :src=&quot;item.imgNormal&quot; mode=&quot;&quot;&gt;&lt;/image&gt;</span><br><span class="line">            &lt;view class=&quot;text&quot;&gt;&#123;&#123;item.text&#125;&#125;&lt;/view&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        props: &#123;</span><br><span class="line">            currentPage: &#123;</span><br><span class="line">                type: String,</span><br><span class="line">                default: &#x27;index&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                tabBar: [&#123;</span><br><span class="line">                        url: &#x27;information&#x27;,</span><br><span class="line">                        text: &#x27;资料&#x27;,</span><br><span class="line">                        imgNormal: &#x27;static/images/tabBar/info&#x27;,</span><br><span class="line">                        imgClick: &#x27;static/images/tabBar/info_act&#x27;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        url: &#x27;project&#x27;,</span><br><span class="line">                        text: &#x27;项目&#x27;,</span><br><span class="line">                        imgNormal: &#x27;static/images/tabBar/project&#x27;,</span><br><span class="line">                        imgClick: &#x27;static/images/tabBar/project_act&#x27;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        url: &#x27;mine&#x27;,</span><br><span class="line">                        text: &#x27;我的&#x27;,</span><br><span class="line">                        imgNormal: &#x27;static/images/tabBar/my&#x27;,</span><br><span class="line">                        imgClick: &#x27;static/images/tabBar/my_act&#x27;</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">        created() &#123;</span><br><span class="line">            uni.hideTabBar(&#123;&#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            navTo(item) &#123;</span><br><span class="line">                if (item.url !== this.currentPage) &#123;</span><br><span class="line">                    var isUrl = `/pages/$&#123;item.url&#125;/$&#123;item.url&#125;`</span><br><span class="line">                    const that = this</span><br><span class="line">                    uni.switchTab(&#123;</span><br><span class="line">                        url: isUrl</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    console.log(&#x27;重复点击&#x27;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">    // 导航栏设置</span><br><span class="line">    $isRadius: 20upx;</span><br><span class="line">    $isWidth: 100vw;</span><br><span class="line">    $isBorder: 0px solid white;</span><br><span class="line">    $isBg: white;</span><br><span class="line">    $chooseTextColor: #000;</span><br><span class="line">    $chooseBgColor: transparent;</span><br><span class="line">    $normalTextColor: #999;</span><br><span class="line"></span><br><span class="line">    .tabBar &#123;</span><br><span class="line">        width: $isWidth;</span><br><span class="line">        height: 60px;</span><br><span class="line">        position: fixed;</span><br><span class="line">        bottom: 0;</span><br><span class="line">        left: 0;</span><br><span class="line">        right: 0;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        z-index: 998;</span><br><span class="line">        background-color: $isBg;</span><br><span class="line">        color: $normalTextColor;</span><br><span class="line">        border-left: $isBorder;</span><br><span class="line">        border-top: $isBorder;</span><br><span class="line">        border-right: $isBorder;</span><br><span class="line">        display: flex;</span><br><span class="line">        justify-content: space-around;</span><br><span class="line">        box-sizing: border-box;</span><br><span class="line">        overflow: hidden;</span><br><span class="line"></span><br><span class="line">        .tabbar_item &#123;</span><br><span class="line">            width: 25%;</span><br><span class="line">            font-size: 12px;</span><br><span class="line">            display: flex;</span><br><span class="line">            flex-direction: column;</span><br><span class="line">            justify-content: center;</span><br><span class="line">            align-items: center;</span><br><span class="line"></span><br><span class="line">            &amp;.active &#123;</span><br><span class="line">                border-left: $isBorder;</span><br><span class="line">                border-top: $isBorder;</span><br><span class="line">                background: $chooseBgColor;</span><br><span class="line">                color: $chooseTextColor;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        image &#123;</span><br><span class="line">            width: 20px;</span><br><span class="line">            height: 31px;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="6-获取手机底部的安全距离"><a href="#6-获取手机底部的安全距离" class="headerlink" title="6. 获取手机底部的安全距离"></a>6. 获取手机底部的安全距离</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 获取底部安全距离的高度</span></span><br><span class="line">    <span class="keyword">const</span> systemInfo = uni.<span class="title function_">getSystemInfoSync</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">safeArea</span> = systemInfo.<span class="property">screenHeight</span> - systemInfo.<span class="property">safeArea</span>.<span class="property">bottom</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>uni.getSystemInfoSync()</code>：<strong>获取系统信息</strong>的同步接口</p><h2 id="7-预览PDF文件"><a href="#7-预览PDF文件" class="headerlink" title="7. 预览PDF文件"></a>7. 预览PDF文件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fileName = name + <span class="string">&#x27;.pdf&#x27;</span>;</span><br><span class="line">uni.<span class="title function_">downloadFile</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: file,</span><br><span class="line">    <span class="attr">filePath</span>: wx.<span class="property">env</span>.<span class="property">USER_DATA_PATH</span> + <span class="string">&#x27;/&#x27;</span> + fileName,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">res</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> filePath = res.<span class="property">tempFilePath</span>;</span><br><span class="line">        uni.<span class="title function_">openDocument</span>(&#123;</span><br><span class="line">            <span class="attr">filePath</span>: wx.<span class="property">env</span>.<span class="property">USER_DATA_PATH</span> + <span class="string">&#x27;/&#x27;</span> + fileName,</span><br><span class="line">            fileName,</span><br><span class="line">            <span class="attr">showMenu</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">res</span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;打开文档成功&#x27;</span>, res);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>注意点：</strong></p><ul><li>先用<code>uni.downloadFile()</code>下载url路径下的文件生成临时文件，在通过<code>uni.openDocument()</code>打开临时文件进行预览</li><li>在uni.downloadFile时<strong>修改filePath文件路径</strong>可以对临时文件进行<strong>重新命名</strong></li><li><strong>开发过程遇到的问题：</strong>修改的文件名称在安卓和开发工具调试时可以看到修改后的文件名，但<strong>ios端</strong>只能看到文件预览4个字，不过将预览的<strong>文件分享出去的时候是修改后的文件名</strong></li></ul><h2 id="8-组件按需引入"><a href="#8-组件按需引入" class="headerlink" title="8. 组件按需引入"></a>8. 组件按需引入</h2><ol><li>在开启「按需注入」特性的前提下，「用时注入」可以指定一部分自定义组件不在小程序启动时注入，而是在真正渲染的时候才进行注入。</li><li>在已经指定 lazyCodeLoading为 requiredComponents的情况下，为自定义组件配置 占位组件，组件就会自动被视为用时注入组件：</li><li>每个页面内，第一次渲染该组件前，该组件都不会被注入；</li><li>每个页面内，第一次渲染该组件时，该组件会被渲染为其对应的占位组件，渲染流程结束后开始注入；</li><li>注入结束后，占位组件被替换回对应组件。<br><strong>具体做法：</strong><br>在<code>manifest.json</code>配置找到 最下方的源码视图 也可以用编辑器打开 找到<code>mp-weixin</code>添加<code>&quot;lazyCodeLoading&quot;: &quot;requiredComponents&quot;</code></li></ol><h2 id="9-input的type为number"><a href="#9-input的type为number" class="headerlink" title="9. input的type为number"></a>9. input的type为number</h2><p><strong>注意点：</strong>uniapp提供的uni-easyinput组件、H5原生html的input标签、图鸟UI的tn-input组件中的type为number都指的是在小程序运行在移动端的时候<strong>唤起数字手机键盘</strong>来限制输入框中输入的值只能为数字，而不是直接限制，所以在电脑端测试的时候是无效的</p><h2 id="10-SCSS-全局变量和全局样式的使用"><a href="#10-SCSS-全局变量和全局样式的使用" class="headerlink" title="10. SCSS 全局变量和全局样式的使用"></a>10. SCSS 全局变量和全局样式的使用</h2><p>具体步骤：</p><ol><li>在项目的<code>static/css</code>目录下创建一个variable.scss文件存放全局变量</li><li>在创建一个common.scss文件存放全局样式</li><li>使用<code>@import &#39;./variable.scss&#39;;</code>引入全局变量文件</li><li>在在uni.scss文件中引入全局样式文件<code>@import &#39;./static/css/common.scss&#39;;</code></li><li>最后在要使用的页面style标签中使用lang&#x3D;”scss”就可以使用全局变量和全局样式了。</li></ol>]]></content>
    
    
    <summary type="html">Uniapp微信小程序开发功能总结</summary>
    
    
    
    <category term="工具" scheme="https://fanxing28.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="https://fanxing28.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="功能" scheme="https://fanxing28.github.io/tags/%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>Git 命令及使用</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E5%85%B6%E4%BB%96/Git/%E3%80%90Git%E3%80%91%E5%91%BD%E4%BB%A4%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E5%85%B6%E4%BB%96/Git/%E3%80%90Git%E3%80%91%E5%91%BD%E4%BB%A4%E5%8F%8A%E4%BD%BF%E7%94%A8/</id>
    <published>2023-11-28T14:32:59.000Z</published>
    <updated>2023-12-02T12:29:00.479Z</updated>
    
    <content type="html"><![CDATA[<p>git是目前世界上最先进<strong>分布式的版本控制系统</strong> github是一个仓库速度快、免费和开源、分支方便</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li>git config –global user.name ‘pudge-w’（pudge-w：自己的git..用户名）</li><li>git config –global user.email ‘<a href="mailto:&#x70;&#117;&#x64;&#103;&#x65;&#95;&#119;&#x6a;&#64;&#x31;&#x36;&#51;&#x2e;&#99;&#x6f;&#x6d;">&#x70;&#117;&#x64;&#103;&#x65;&#95;&#119;&#x6a;&#64;&#x31;&#x36;&#51;&#x2e;&#99;&#x6f;&#x6d;</a>‘（<a href="mailto:&#x70;&#x75;&#100;&#x67;&#101;&#x5f;&#119;&#106;&#64;&#49;&#54;&#51;&#x2e;&#99;&#111;&#109;">&#x70;&#x75;&#100;&#x67;&#101;&#x5f;&#119;&#106;&#64;&#49;&#54;&#51;&#x2e;&#99;&#111;&#109;</a>：自己的git…邮箱）</li></ul><h2 id="上传本地文件"><a href="#上传本地文件" class="headerlink" title="上传本地文件"></a>上传本地文件</h2><ul><li>git init 初始化</li><li>git add index.html 或者 git add . 提交到暂存区</li><li>git commit -m ‘init index.html’ 提交到本地仓库 （init index.html：提交描述）</li><li>git status 查看git的状态</li><li>git diff 查看版本的差别</li><li>git log 或者 git log –pretty&#x3D;oneline 查看版本信息</li><li>git reset HEAD^ 回退一个版本</li><li>git reset –hard cc56901 回退到指定版本</li><li>git reflog 查看所有的历史版本</li></ul><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><ul><li>git branch 查看分支</li><li>git branch dev 创建分支</li><li>git checkout dev 或者 git switch dev 切换分支</li><li>git checkout -b dev2 创建并切换</li><li>git merge dev2 合并分支内容</li><li>git branch -d dev2 删除分支</li><li>git log –graph –pretty&#x3D;oneline 查看分支记录</li></ul><h2 id="关联远程仓库"><a href="#关联远程仓库" class="headerlink" title="关联远程仓库"></a>关联远程仓库</h2><p>生成密钥对 ssh-keygen -t rsa -C ‘<a href="mailto:&#119;&#97;&#x6e;&#x67;&#106;&#105;&#x65;&#64;&#49;&#48;&#x30;&#x30;&#x70;&#x68;&#111;&#x6e;&#101;&#46;&#x63;&#x6f;&#109;">&#119;&#97;&#x6e;&#x67;&#106;&#105;&#x65;&#64;&#49;&#48;&#x30;&#x30;&#x70;&#x68;&#111;&#x6e;&#101;&#46;&#x63;&#x6f;&#109;</a>‘<br><strong>创建项目</strong></p><ul><li>git init</li><li>git add .</li><li>git commit -m ‘init’</li><li>git remote add origin</li><li><a href="mailto:&#x67;&#105;&#116;&#x40;&#x67;&#x69;&#x74;&#104;&#x75;&#x62;&#x2e;&#99;&#x6f;&#109;">&#x67;&#105;&#116;&#x40;&#x67;&#x69;&#x74;&#104;&#x75;&#x62;&#x2e;&#99;&#x6f;&#109;</a>:pudge-w&#x2F;taobao.git</li><li>git push -u origin master<br>邀请组员 setting -&gt; manage access<br><strong>组员开发 不要在master做开发!!!!</strong><br><strong>组员首次</strong></li><li>git clone xxxxxxxx（拉取一份仓库代码）</li><li>git checkout -b self（创建自己的分支）</li><li>git add .（提交到暂存区）</li><li>git commit -m “xxx”（提交到本地仓库）</li><li>git push –set-upstream origin self（提交到仓库自己的分支名中）<br><strong>组员非首次</strong><br>git checkout master（切换到自己的主分支master）<br>git pull origin master （将远程的master拉到自己的master<br>git checkout self（切换到自己的子分支）<br>git merge master （将自己的master合并的自己的分支（让分支是最新的））<br>写代码<br>git add .（添加到暂存区）<br>git commit -m “xxx2”（提交到本地仓库）<br>git pull origin master （将远程的最新的代码拉到自己的分支）<br>可能需要解决冲突(如果解决了冲突，需要重新add和commit)<br>git push<br><strong>组长首次</strong><br>git fetch –all（拉取仓库中所有分支）<br>git checkout self（组员分支）<br>启动项目并检查<br>git checkout master（切换到主分支）<br>git merge self（合并分支）<br>git push (将本地的master推送到远程的master)<br><strong>组长非首次</strong><br>git checkout self（切换到组员的分支）<br>git pull (将远程的self拉到本地的self)<br>启动项目并检查<br>git checkout master（切换到主分支）<br>git merge self（将子分支合并到主分支中）<br>git push (将本地的master推送到远程的master)</li></ul><h2 id="实际开发使用"><a href="#实际开发使用" class="headerlink" title="实际开发使用"></a>实际开发使用</h2><p><strong>当只有一个仓库分支时：</strong><br><strong>拉取代码</strong></p><ol><li>第一次拉取代码：<blockquote><p>git clone 仓库地址</p></blockquote></li><li>第二次拉取代码：<blockquote><p>git pull</p></blockquote></li></ol><p><strong>上传代码</strong><br>3. 添加到暂存区</p><blockquote><p>git add .<br>4. 提交到本地仓库<br>git commit -m “提交描述文字”<br>5. 将远程的最新的代码拉到自己的分支<br>git pull<br>6. 将本地的master推送到远程的master<br>git push</p></blockquote><p><strong>当仓库中有两个分支时：</strong><br><strong>拉取代码</strong></p><ol><li>第一次拉取代码：<blockquote><p>git clone 仓库地址</p></blockquote></li><li>第二次拉取代码：<blockquote><p>git pull</p></blockquote></li></ol><p><strong>上传代码</strong><br>3. 创建自己的分支</p><blockquote><p>git checkout -b “需要提交到的仓库分支名”<br>4. 添加到暂存区<br>git add .<br>5. 提交到本地仓库<br>git commit -m “提交描述文字”<br>6. 将远程的最新的代码拉到自己的分支<br>git pull<br>7. 将需要提交的分支进行代码的提交<br>git push origin “需要提交到的仓库分支名”</p></blockquote><h2 id="可视化软件推荐"><a href="#可视化软件推荐" class="headerlink" title="可视化软件推荐"></a>可视化软件推荐</h2><p><strong>Fork</strong> 是一款面向 GitHub 开发者的 Git 客户端，它提供了直观的用户界面和实用的工具，支持多个仓库的管理，可以轻松地切换分支、合并代码和解决冲突。它还提供了实时的代码差异对比、代码提交历史记录、分支可视化等功能，让开发者可以更加直观地了解代码的变化和演进。此外，Fork还支持任务列表、代码注释、代码搜索等实用功能，方便开发者进行项目管理和协作。<br>总的来说，Fork是一款易于上手（尤其对于非开发人员）且功能强大的版本管理软件<br><strong>软件图标：</strong><br>![[Pasted image 20231119161122.png]]<br><strong>内部界面图：</strong><br>![[Pasted image 20231119161202.png]]<br><strong>fork 软件的官网：</strong> <a href="https://git-fork.com/">Fork - a fast and friendly git client for Mac and Windows (git-fork.com)</a></p>]]></content>
    
    
    <summary type="html">git是目前世界上最先进分布式的版本控制系统 github是一个仓库速度快、免费和开源、分支方便</summary>
    
    
    
    <category term="其他" scheme="https://fanxing28.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    <category term="Git" scheme="https://fanxing28.github.io/categories/%E5%85%B6%E4%BB%96/Git/"/>
    
    
    <category term="Git" scheme="https://fanxing28.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>SVG 使用</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E5%85%B6%E4%BB%96/SVG/%E3%80%90SVG%E3%80%91%E4%BD%BF%E7%94%A8/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E5%85%B6%E4%BB%96/SVG/%E3%80%90SVG%E3%80%91%E4%BD%BF%E7%94%A8/</id>
    <published>2023-11-28T14:32:48.000Z</published>
    <updated>2023-12-02T12:29:15.564Z</updated>
    
    <content type="html"><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>SVG 意为<strong>可缩放矢量图形</strong>（Scalable Vector Graphics）。 SVG 使用 XML 格式定义图像。</p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>SVG 图像在放大或改变尺寸的情况下其<strong>图形质量不会有所损失</strong> SVG 图像可在任何的分辨率下被高质量地打印<br><strong>文件后缀名</strong>（.svg）</p><h2 id="svg的常见属性"><a href="#svg的常见属性" class="headerlink" title="svg的常见属性"></a>svg的常见属性</h2><ul><li><code>width</code> 和 <code>height</code>:定义 SVG 画布的宽度和高度</li><li><code>viewBox</code>:定义 SVG 画布中的可见区域</li><li><code>preserveAspectRatio</code>:定义如何根据 viewBox 和 width&#x2F;height 比例缩放图形</li><li><code>fill</code>:定义填充颜色</li><li><code>stroke</code>:定义笔触颜色</li><li><code>stroke-width</code>:定义笔触宽度</li><li><code>fill-rule</code>:定义填充规则,evenodd 或 nonzero</li><li><code>transform</code>: 定义变换规则,如旋转、缩放、移动等除此之外,SVG 还有:- <code>&lt;svg&gt;</code> 根元素</li><li><code>&lt;g&gt;</code> 组合元素,用于组合多个形状</li><li><code>&lt;defs&gt;</code> 定义元素,用于定义可复用的元素</li><li><code>&lt;use&gt;</code> 使用 <code>&lt;defs&gt;</code> 中定义的元素</li><li><code>&lt;image&gt;</code> 定义图像</li><li><code>&lt;text&gt;</code> 定义文本</li><li><code>&lt;tspan&gt;</code> 定义文本的段落</li><li><code>&lt;pattern&gt;</code> 定义可重复的图案</li><li><code>&lt;linearGradient&gt;</code> 定义线性渐变</li><li><code>&lt;radialGradient&gt;</code> 定义放射性渐变<br><strong>定义不同的形状属性</strong></li><li><code>circle</code>:定义圆形, cx 和 cy 定义圆心,r 定义半径</li><li><code>rect</code>:定义矩形,x、y、width 和 height 定义矩形</li><li><code>line</code>:定义直线,x1、y1 和 x2、y2 定义直线的起点和终点</li><li><code>polyline</code>:定义折线,points 定义折线的点</li><li><code>polygon</code>:定义多边形,points 定义多边形的点</li><li><code>path</code>:定义复杂的形状,d 属性定义路径的数据</li></ul><h2 id="项目中使用到的属性"><a href="#项目中使用到的属性" class="headerlink" title="项目中使用到的属性"></a>项目中使用到的属性</h2><ol><li><strong>aria-hidden</strong><br> aria-hidden 是 SVG 中的一个无障碍访问属性，它用于定义 SVG 元素及其子元素是否可见给辅助功能。<br> 当 aria-hidden&#x3D;”true” 时：</li></ol><ul><li>SVG 元素及其子元素将不会被辅助功能(如屏幕阅读器)读取</li><li>但对普通用户依然可见<br>  当 aria-hidden&#x3D;”false” 或属性不存在时：</li><li>SVG 元素及其子元素可以被辅助功能读取</li><li>对普通用户也可见<br>  aria-hidden 的<strong>主要作用</strong>是在 SVG 中选择性地隐藏一些decorative(装饰性)元素，以便为残障用户提供更清晰简洁的页面。</li></ul><ol><li><strong>xmls</strong><br> xmlns 是 XML 文档中的一个属性，它定义了默认的 XML 命名空间。<br> 在 SVG 中，xmlns 的值通常是:<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlns=&quot;http://www.w3.org/2000/svg&quot;</span><br></pre></td></tr></table></figure></li><li><strong>xmlns:xlink</strong><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;</span><br></pre></td></tr></table></figure>定义了 XLink 命名空间的前缀 xlink，允许在 SVG 中使用 XLink 相关的属性和元素。</li><li><strong>width和height</strong><br> <code>width</code> 和 <code>height</code>:定义 SVG 画布的宽度和高度</li><li><strong>path</strong><br> path:定义复杂的形状，d 属性定义路径的数据</li><li><strong>fill</strong><br> 颜色填充<br><strong>svg封装</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;svg aria-hidden=&quot;true&quot;&gt;</span><br><span class="line">        &lt;use :class=&quot;fillClass&quot; :xlink:href=&quot;symbolId&quot; :fill=&quot;color&quot; /&gt;</span><br><span class="line">    &lt;/svg&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; computed &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">const props = defineProps(&#123;</span><br><span class="line">    // 显示的 svg 图标名称（剔除 icon-）</span><br><span class="line">    name: &#123;</span><br><span class="line">        type: String,</span><br><span class="line">        required: true</span><br><span class="line">    &#125;,</span><br><span class="line">    // 直接指定 svg 图标的颜色</span><br><span class="line">    color: &#123;</span><br><span class="line">        type: String</span><br><span class="line">    &#125;,</span><br><span class="line">    // 通过 tailwind 指定 svg 颜色的类名</span><br><span class="line">    fillClass: &#123;</span><br><span class="line">        type: String</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">// 真实显示的 svg 图标名（拼接 #icon-）</span><br><span class="line">const symbolId = computed(() =&gt; `#icon-$&#123;props.name&#125;`)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="插件使用（vite-plugin-svg-icons）"><a href="#插件使用（vite-plugin-svg-icons）" class="headerlink" title="插件使用（vite-plugin-svg-icons）"></a>插件使用（vite-plugin-svg-icons）</h2><p>vite-plugin-svg-icons 是一个 Vite 插件，用于导入 SVG 图标。它可以将 SVG 文件变为 Vue 组件，方便在 Vue 项目中使用 SVG 图标。</p><ol><li><strong>安装</strong><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vite-plugin-svg-icons</span><br></pre></td></tr></table></figure></li><li><strong>在 vite.config.js 中配置插件</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins</span>: [</span><br><span class="line">  <span class="title function_">vue</span>(),</span><br><span class="line">  <span class="title function_">createSvgIconsPlugin</span>(&#123;</span><br><span class="line">    <span class="comment">// 指定需要缓存的图标文件夹</span></span><br><span class="line">    <span class="attr">iconDirs</span>: [path.<span class="title function_">resolve</span>(process.<span class="title function_">cwd</span>(), <span class="string">&#x27;src/assets/svg&#x27;</span>)],</span><br><span class="line">    <span class="comment">// 指定 symbolId 的格式</span></span><br><span class="line">    <span class="attr">symbolId</span>: <span class="string">&#x27;icon-[name]&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">],</span><br></pre></td></tr></table></figure></li><li><strong>放置 SVG 文件在 src&#x2F;assets&#x2F;svg 目录(默认目录,可以配置)</strong></li><li><strong>在mian.js中引入并注册封装文件</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> svgIcon <span class="keyword">from</span> <span class="string">&#x27;./components/SvgIcon/index.vue&#x27;</span></span><br><span class="line">app.<span class="title function_">component</span>(<span class="string">&#x27;svg-icon&#x27;</span>, svgIcon)</span><br></pre></td></tr></table></figure></li><li><strong>在组件中导入 SVG</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;IconCalendar /&gt;  </span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import IconCalendar from &#x27;@/assets/svg/calendar.svg&#x27;  </span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    IconCalendar</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>vite-plugin-svg-icons 的<strong>主要特性</strong>：</li></ol><ul><li>支持underscore-naming和camelCase命名 SVG 图标</li><li>支持多色图标</li><li>支持 SVG Sprite(可配置)</li><li>TS 类型声明</li><li>Tree Shaking<br>支持自定义 SVG 目录和扩展名使用该插件可以极大简化在 Vue 项目中使用 SVG 图标的难度。不需要手动导入、配置每一个 SVG 文件,插件可以自动化地完成这些繁琐的工作。</li></ul>]]></content>
    
    
    <summary type="html">SVG 意为 可缩放矢量图形（Scalable Vector Graphics）。 SVG 使用 XML 格式定义图像。</summary>
    
    
    
    <category term="其他" scheme="https://fanxing28.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    <category term="SVG" scheme="https://fanxing28.github.io/categories/%E5%85%B6%E4%BB%96/SVG/"/>
    
    
    <category term="SVG" scheme="https://fanxing28.github.io/tags/SVG/"/>
    
  </entry>
  
  <entry>
    <title>CSS的相关知识</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/CSS/%E3%80%90CSS%E3%80%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/CSS/%E3%80%90CSS%E3%80%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</id>
    <published>2023-11-28T14:32:48.000Z</published>
    <updated>2023-12-02T12:30:09.562Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-CSS-选择器"><a href="#一-CSS-选择器" class="headerlink" title="一. CSS 选择器"></a>一. CSS 选择器</h2><p>选择器CSS选择器是CSS规则的第一部分<br>它是元素和其他部分组合起来告诉浏览器哪个HTML元素应当是被选为应用规则中的CSS属性值的方式 选择器所选择的元素，叫做“选择器的对象”<br>我们从一个Html结构开始</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;one_1&quot;</span>&gt;</span>&lt;/p &gt;     </span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;one_1&quot;</span>&gt;</span>&lt;/p &gt;   </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>关于css属性选择器常用的有：</p><ul><li>id选择器（#box），选择id为box的元素</li><li>类选择器（.one），选择类名为one的所有元素</li><li>标签选择器（div），选择标签为div的所有元素</li><li>后代选择器（#box div），选择id为box元素内部所有的div元素</li><li>子选择器（.one&gt;one_1），选择父元素为.one的所有.one_1的元素</li><li>相邻同胞选择器（.one+.two），选择紧接在.one之后的所有.two元素</li><li>群组选择器（div,p），选择div、p的所有元素<br>还有一些使用频率相对没那么多的选择器：</li></ul><h3 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h3><table><thead><tr><th align="left">选择器</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">:link</td><td align="left">选择未被访问的链接</td></tr><tr><td align="left">:visited</td><td align="left">选取已被访问的链接</td></tr><tr><td align="left">:active</td><td align="left">选择活动链接</td></tr><tr><td align="left">:hover</td><td align="left">鼠标指针浮动在上面的元素</td></tr><tr><td align="left">:focus</td><td align="left">选择具有焦点的</td></tr><tr><td align="left">:first-child</td><td align="left">父元素的首个子元素</td></tr></tbody></table><h3 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h3><table><thead><tr><th align="left">选择器</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">:first-letter</td><td align="left">用于选取指定选择器的首字母</td></tr><tr><td align="left">:first-line</td><td align="left">选取指定选择器的首行</td></tr><tr><td align="left">:before</td><td align="left">选择器在被选元素的内容前面插入内容</td></tr><tr><td align="left">:after</td><td align="left">选择器在被选元素的内容后面插入内容</td></tr></tbody></table><h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><table><thead><tr><th>选择器</th><th>描述</th></tr></thead><tbody><tr><td><code>[attribute]</code></td><td>选择带有attribute属性的元素</td></tr><tr><td><code>[attribute=value]</code></td><td>选择所有使用attribute&#x3D;value的元素</td></tr><tr><td><code>[attribute~=value]</code></td><td>选择attribute属性包含value的元素</td></tr><tr><td>[attribute&#x3D; value]</td><td>选择attribute属性以value开头的元素</td></tr><tr><td><strong>在CSS3中新增的选择器有如下：</strong></td><td></td></tr></tbody></table><h3 id="层次选择器（p-ul）"><a href="#层次选择器（p-ul）" class="headerlink" title="层次选择器（p~ul）"></a>层次选择器（p~ul）</h3><p>选择前面有p元素的每个ul元素</p><h3 id="伪类选择器-1"><a href="#伪类选择器-1" class="headerlink" title="伪类选择器"></a>伪类选择器</h3><table><thead><tr><th>选择器</th><th>描述</th></tr></thead><tbody><tr><td>:first-of-type</td><td>父元素的首个元素</td></tr><tr><td>:last-of-type</td><td>父元素的最后一个元素</td></tr><tr><td>:only-of-type</td><td>父元素的特定类型的唯一子元素</td></tr><tr><td>:only-child</td><td>父元素中唯一子元素</td></tr><tr><td>:nth-child(n)</td><td>选择父元素中第N个子元素</td></tr><tr><td>:nth-last-of-type(n)</td><td>选择父元素中第N个子元素，从后往前</td></tr><tr><td>:last-child</td><td>父元素的最后一个元素</td></tr><tr><td>:empty</td><td>指定空的元素</td></tr><tr><td>:enabled</td><td>选择被禁用元素</td></tr><tr><td>:disabled</td><td>选择被禁用元素</td></tr><tr><td>:checked</td><td>选择选中的元素</td></tr><tr><td>:not(selector)</td><td>选择非 <code>&lt;selector&gt;</code> 元素的所有元素</td></tr></tbody></table><h3 id="属性选择器-1"><a href="#属性选择器-1" class="headerlink" title="属性选择器"></a>属性选择器</h3><ul><li>[attribute*&#x3D;value]：选择attribute属性值包含value的所有元素</li><li>[attribute^&#x3D;value]：选择attribute属性开头为value的所有元素</li><li>[attribute$&#x3D;value]：选择attribute属性结尾为value的所有元素</li></ul><h2 id="二-CSS选择器优先级"><a href="#二-CSS选择器优先级" class="headerlink" title="二. CSS选择器优先级"></a>二. CSS选择器优先级</h2><p>相信大家对CSS选择器的优先级都不陌生：</p><blockquote><p>内联 &gt; ID选择器 &gt; 类选择器 &gt; 标签选择器</p></blockquote><p>到具体的计算层⾯，优先级是由 A 、B、C、D 的值来决定的，其中它们的值计算规则如下：</p><ul><li>如果存在内联样式，那么 A &#x3D; 1, 否则 A &#x3D; 0</li><li>B的值等于 ID选择器出现的次数</li><li>C的值等于 类选择器 和 属性选择器 和 伪类 出现的总次数</li><li>D 的值等于 标签选择器 和 伪元素 出现的总次数<br>这里举个例子：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#nav-global</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">a</span><span class="selector-class">.nav-link</span></span><br></pre></td></tr></table></figure>套用上面的算法，依次求出 A B C D 的值：</li><li>因为没有内联样式 ，所以 A &#x3D; 0I</li><li>D选择器总共出现了1次， B &#x3D; 1</li><li>类选择器出现了1次， 属性选择器出现了0次，伪类选择器出现0次，所以 C &#x3D; (1 + 0 + 0) &#x3D; 1</li><li>标签选择器出现了3次， 伪元素出现了0次，所以 D &#x3D; (3 + 0) &#x3D; 3<br>上面算出的A 、 B、C、D 可以简记作：(0, 1, 1, 3) 知道了优先级是如何计算之后，就来看看比较规则：</li><li>从左往右依次进行比较 ，较大者优先级更高</li><li>如果相等，则继续往右移动一位进行比较</li><li>如果4位全部相等，则后面的会覆盖前面的<br>经过上面的优先级计算规则，我们知道内联样式的优先级最高，如果外部样式需要覆盖内联样式，就需要使用!important</li></ul><h2 id="三-继承属性"><a href="#三-继承属性" class="headerlink" title="三. 继承属性"></a>三. 继承属性</h2><p>在css中，继承是指的是给父元素设置一些属性，后代元素会自动拥有这些属性<br><strong>继承属性</strong><br>关于继承属性，可以分成：<br><strong>字体系列属性</strong></p><ul><li>font:组合字体</li><li>font-family:规定元素的字体系列</li><li>font-weight:设置字体的粗细</li><li>font-size:设置字体的尺寸</li><li>font-style:定义字体的风格</li><li>font-variant:偏大或偏小的字体<br><strong>文本系列属性</strong></li><li>text-indent：文本缩进  </li><li>text-align：文本水平对刘</li><li>line-height：行高</li><li>word-spacing：增加或减少单词间的空白</li><li>letter-spacing：增加或减少字符间的空白</li><li>text-transform：控制文本大小写</li><li>direction：规定文本的书写方向</li><li>color：文本颜色<br><strong>元素可见性</strong></li><li>visibility<br><strong>表格布局属性</strong></li><li>caption-side：定位表格标题位置</li><li>border-collapse：合并表格边框</li><li>border-spacing：设置相邻单元格的边框间的距离</li><li>empty-cells：单元格的边框的出现与消失</li><li>table-layout：表格的宽度由什么决定<br><strong>列表属性</strong></li><li>list-style-type：文字前面的小点点样式</li><li>list-style-position：小点点位置</li><li>list-style：以上的属性可通过这属性集合<br><strong>引用</strong></li><li>quotes：设置嵌套引用的引号类型<br><strong>光标属性</strong></li><li>cursor：箭头可以变成需要的形状<br>继承中比较特殊的几点：</li><li>a 标签的字体颜色不能被继承</li><li>h1-h6标签字体的大下也是不能被继承的<br><strong>无继承的属性</strong></li><li>display</li><li>文本属性：vertical-align、text-decoration</li><li>盒子模型的属性：宽度、高度、内外边距、边框等</li><li>背景属性：背景图片、颜色、位置等</li><li>定位属性：浮动、清除浮动、定位position等</li><li>生成内容属性：content、counter-reset、counter-increment</li><li>轮廓样式属性：outline-style、outline-width、outline-color、outline</li><li>页面样式属性：size、page-break-before、page-break-after<br>参考文献：<a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/Selectors">https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks&#x2F;Selectors</a></li></ul><h2 id="四-rem-em-px-vw-vh-百分比的区别"><a href="#四-rem-em-px-vw-vh-百分比的区别" class="headerlink" title="四. rem em px vw vh 百分比的区别"></a>四. rem em px vw vh 百分比的区别</h2><h3 id="一-介绍"><a href="#一-介绍" class="headerlink" title="(一) 介绍"></a>(一) 介绍</h3><p>传统的项目开发中，我们只会用到<code>px</code>、<code>%</code>、<code>em</code>这几个单位，它可以适用于大部分的项目开发，且拥有比较良好的兼容性。而在<strong>CSS3 中又新增了</strong><code>rem</code>、<code>vh</code>、<code>vw</code>、<code>vm</code>等一些新的计量单位。利用这些新的单位可以开发出比较良好的响应式页面以及适应多种不同分辨率的终端，包括移动设备等</p><h3 id="二-单位"><a href="#二-单位" class="headerlink" title="(二) 单位"></a>(二) 单位</h3><p>在<code>css</code>单位中，可以分为<strong>相对长度单位、绝对长度单位</strong>，如下表所示：</p><table><thead><tr><th>CSS单位</th><th>描述</th></tr></thead><tbody><tr><td>相对长度单位</td><td>em、ex、ch、rem、vw、vh、vmin、vmax、%</td></tr><tr><td>绝对长度单位</td><td>cm、mm、in、px、pt、pc</td></tr><tr><td>目前实际开发中最常用的5个单位分别是：px、em、rem、vh、vw</td><td></td></tr></tbody></table><h4 id="1-px"><a href="#1-px" class="headerlink" title="(1) px"></a>(1) px</h4><p><strong>px 表示像素：</strong> 它就是呈现在显示器上的一个个小点，每个像素点都是大小等同的，所以px被分在了绝对长度单位中</p><h4 id="2-em"><a href="#2-em" class="headerlink" title="(2) em"></a>(2) em</h4><p><strong>em 是相对长度单位：</strong> 相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于<strong>浏览器的默认字体尺寸</strong>（<code>1em = 16px</code>）<br><strong>为了简化 <code>font-size</code> 的换算：</strong> 可以在<code>css</code>中的 <code>body</code> 选择器中声明<code>font-size</code>&#x3D; <code>62.5%</code>，这就使 em 值变为 <code>16px*62.5% = 10px</code>，这样 <code>12px = 1.2em</code>, <code>10px = 1em</code>, 也就是说只需要将你的原来的<code>px</code> 数值除以 10，然后换上 <code>em</code>作为单位就行了<br><strong>特点：</strong></p><ul><li>em 的值并不固定</li><li>em 会继承父级元素的字体大小</li><li>em 是相对长度单位。<strong>相对于<code>当前对象内文本</code>的字体尺寸</strong>。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸</li><li>任意浏览器的默认字体尺寸都是 16px<br><strong>实例：</strong></li><li><strong>HTML</strong><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;big&quot;</span>&gt;</span></span><br><span class="line">    我是14px=1.4rem<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;small&quot;</span>&gt;</span>我是12px=1.2rem<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><strong>样式：</strong><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">html</span> &#123;<span class="attribute">font-size</span>: <span class="number">10px</span>; &#125; <span class="comment">/*  公式16px*62.5%=10px  */</span> </span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.big</span> &#123;<span class="attribute">font-size</span>: <span class="number">1.4rem</span>; &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.small</span> &#123;<span class="attribute">font-size</span>: <span class="number">1.2rem</span>; &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>以上代码中<code>.big</code>元素的<code>font-size</code>为14px，而<code>.small</code>元素的<code>font-size</code>为12px</li></ul><h4 id="3-rem"><a href="#3-rem" class="headerlink" title="(3) rem"></a>(3) rem</h4><p><strong>rem 相对单位：</strong> 相对的只是HTML根元素<code>font-size</code>的值<br>同理，如果想要简化<code>font-size</code>的转化，我们可以在<strong>根元素</strong><code>html</code>中加入<code>font-size: 62.5%</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;<span class="attribute">font-size</span>: <span class="number">62.5%</span>;  &#125; <span class="comment">/*  公式16px*62.5%=10px  */</span> </span><br></pre></td></tr></table></figure><p>这样页面中1rem&#x3D;10px、1.2rem&#x3D;12px、1.4rem&#x3D;14px、1.6rem&#x3D;16px;使得视觉、使用、书写都得到了极大的帮助<br><strong>特点：</strong></p><ul><li>rem单位可谓集相对大小和绝对大小的优点于一身</li><li>和em不同的是rem总是相对于根元素，而不像em一样使用级联的方式来计算尺寸</li></ul><h4 id="4-vh、vw"><a href="#4-vh、vw" class="headerlink" title="(4) vh、vw"></a>(4) vh、vw</h4><p>vw ，就是根据窗口的宽度，分成100等份，100vw就表示满宽，50vw就表示一半宽。（vw 始终是针对窗口的宽），<strong>同理：</strong><code>vh</code>则为窗口的高度<br><strong>这里的窗口分成几种情况：</strong></p><ul><li>在桌面端，指的是浏览器的可视区域</li><li>移动端指的就是布局视口<br>像<code>vw</code>、<code>vh</code>，比较容易混淆的一个单位是<code>%</code>，不过<strong>百分比</strong>宽泛的讲是<strong>相对于父元素</strong>：</li><li>对于普通定位元素就是我们理解的父元素</li><li>对于position: absolute; 的元素是相对于已定位的父元素</li><li>对于position: fixed; 的元素是相对于 ViewPort（可视窗口）</li></ul><h3 id="三-总结"><a href="#三-总结" class="headerlink" title="(三) 总结"></a>(三) 总结</h3><ol><li><strong>px</strong>：<strong>绝对单位</strong>，页面按精确像素展示</li><li><strong>em</strong>：<strong>相对单位</strong>，基准点为父节点字体的大小，如果自身定义了<code>font-size</code>按自身来计算，整个页面内<code>1em</code>不是一个固定的值</li><li><strong>rem</strong>：<strong>相对单位</strong>，可理解为<code>root em</code>, 相对根节点<code>html</code>的字体大小来计算</li><li><strong>vh、vw</strong>：主要用于页面视口大小布局，在页面布局上更加方便简单<br>**更详细(网页内容参考)**：<a href="https://zhuanlan.zhihu.com/p/477926721#:~:text=rem%EF%BC%9A%E7%9B%B8%E5%AF%B9%E5%8D%95%E4%BD%8D">zhuanlan.zhihu.com</a></li></ol><h3 id="四-视口"><a href="#四-视口" class="headerlink" title="(四) 视口"></a>(四) 视口</h3><ol><li><strong>布局视口（网页的宽度）</strong></li><li><strong>视觉视口（设备的宽度）</strong></li><li><strong>理想视口（布局视口&#x3D;视觉视口）</strong><br><strong>设置视口的大小为设备的宽度：</strong><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="五-应用场景-适配方案"><a href="#五-应用场景-适配方案" class="headerlink" title="(五) 应用场景(适配方案)"></a>(五) 应用场景(适配方案)</h3><ol><li><strong>rem+媒体查询</strong><blockquote><p><strong>目的：</strong>根据不同的机型设置不同的html的font-size</p></blockquote></li><li><strong>rem+vw适配</strong><blockquote><p><strong>目的：</strong>让html的font-size与屏幕成正比例</p></blockquote></li></ol>]]></content>
    
    
    <summary type="html">CSS基础知识点（选择器及优先级、继承属性、rem、em等单位区别）</summary>
    
    
    
    <category term="前端" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CSS" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/CSS/"/>
    
    
    <category term="前端" scheme="https://fanxing28.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CSS" scheme="https://fanxing28.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>SQL语言概述</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E6%95%B0%E6%8D%AE%E5%BA%93/%E3%80%90SQL%E3%80%91%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E6%95%B0%E6%8D%AE%E5%BA%93/%E3%80%90SQL%E3%80%91%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/</id>
    <published>2023-11-28T14:32:25.000Z</published>
    <updated>2023-12-02T12:26:26.142Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SQL发展"><a href="#SQL发展" class="headerlink" title="SQL发展"></a>SQL发展</h2><p>1972年，IBM在System R中实现SQUARE语言。 1974年，Boyce和Chamberlin改进SQUARE为SEQUEL。 1981年，IBM推出SQL&#x2F;DS，用SQL代替SEQUEL。 1986年ANSI公布第一个SQL标准。 1987年ISO将SQL采纳为国际标准。 ​</p><h2 id="SQL语言功能"><a href="#SQL语言功能" class="headerlink" title="SQL语言功能"></a><strong>SQL语言功能</strong></h2><p><strong>定义</strong></p><ul><li>创建CREATE</li><li>修改ALTER</li><li>删除DROP<br><strong>查询</strong></li><li>选择SELECT<br><strong>更新</strong></li><li>插入INSERT</li><li>更新UPDATE</li><li>删除DELETE<br><strong>控制</strong></li><li>授权GRANT</li><li>收权REVOKE</li></ul><h2 id="SQL的数据定义"><a href="#SQL的数据定义" class="headerlink" title="SQL的数据定义"></a>SQL的数据定义</h2><h3 id="创建和使用数据库"><a href="#创建和使用数据库" class="headerlink" title="创建和使用数据库"></a>创建和使用数据库</h3><p><strong>CREATE DATABASE&lt;数据库名&gt;</strong></p><blockquote><p>创建“学生选课”数据库 例：CREATE DATABASE 学生选课；</p></blockquote><p><strong>USE&lt;数据库名&gt;</strong></p><blockquote><p>打开“学生选课”数据库 例：USE 学生选课；</p></blockquote><p><strong>基本表创建的一般格式：</strong></p><blockquote><p>CREATE TABLE&lt;表名&gt; （ &lt;属性列名&gt;&lt;数据类型&gt;[列名完整性约束条件] [,&lt;属性列名&gt;&lt;数据类型&gt;[列名完整性约束条件],…] [,&lt;表级完整性约束条件&gt;] ​） 例：CREATE TABLE S ​( SNO CHAR(6), SN CHAR(10), SD CHAR(16), SB DATA ​);</p></blockquote><p><strong>注意点</strong></p><ul><li>在一个数据库中，不允许有两个基本表同名。</li><li>一个表中不能有两列同名。<br><strong>数据类型及其含义</strong></li><li>CHAR (n) 长度为n的定长字符串</li><li>VARCHAR (n) 最大长度为n的变长字符串</li><li>INT 长整数</li><li>SMALLINT 短整数</li><li>REAL 取决于机器精度的浮点数</li><li>FLOAT(n) 浮点数，精度至少为n位</li><li>定点数，由p位数字(符号、小数点除外)组成，小数后面有d位数字</li><li>NUMERIC(p,d)</li><li>DECIMAL(p,d)</li><li>DATE 日期，包含年、月、日，格式为YYYY-MM-DD</li><li>TIME 时间，包含一日的时、分、秒，格式为HH:MM:SS<br><strong>定义主键</strong><br>保证属性值的唯一性和非空型。<blockquote><p>PRIMARY KEY[(&lt;属性列（组）&gt;)]</p></blockquote></li></ul><p>例：CREATE TABLE S ( SNO CHAR(6) <em>PRIMARY KEY</em>, SN CHAR(10), SD CHAR(16), SB DATA ); 或者 CREATE TABLE S ( SNO CHAR(6), CHAR(10), SD CHAR(16), SB DATA, PRIMARY KEY(SNO) ​);<br><strong>定义外键</strong></p><blockquote><p>FOREIGN KEY (&lt;外键&gt;) REFERENCES&lt;被参照表名&gt;(&lt;与外键对应的主键名&gt;)</p></blockquote><p>CREATE TABLE SC ( SNO CHAR(6), CNO CHAR(6), GRADE DEC(4,1), PRIMARY KEY (SNO, CNO), FOREIGN KEY (SNO) REFERENCES S(SNO), FOREIGN KEY (CNO) REFERENCES C(CNO) );<br><strong>增加列或表约束规则</strong></p><blockquote><p>ALTER TABLE &lt;表名&gt; ADD &lt;属性列名&gt; &lt;数据类型&gt; [完整性约束| &lt;完整性约束&gt;;</p></blockquote><p>例：在学生表S中加入一属性列SH表示学生的籍贯ALTER TABLE S ADD SH CHAR(30);在学生关系表S补充定义SNO为主键ALTER TABLE S ADD PRIMARY KEY (SNO);<br><strong>注意点</strong>：新增加的属性不能定义为NOT NULL。<br><strong>修改原有列的类型</strong></p><blockquote><p>ALTER TABLE &lt;表名&gt; ALTER COLUMN &lt;属性列名&gt; &lt;数据类型&gt; ;</p></blockquote><p>例：将基本表S中的学生姓名SN长度修改为12 ALTER TABLE S ALTER COLUMN SN CHAR(12);<br><strong>删除原有的列或约束规则</strong></p><blockquote><p>ALTER TABLE &lt;表名&gt; DROP {[CONSTRAINT] &lt;完整性约束&gt;| COLUMN &lt;列名&gt; [CASCADE|RESTRICT]}:</p></blockquote><p>RESTRICT:在没有视图或约束引用该属性列时，该属性列才能被删除 CASCADE:表示删除某列时，所有引|用该列的视图和约束也被自动删除 例：删除基本表S中学生的性别SEX属性列 ALTER TABLE S DROP COLUMN SEX; 例：删除基本表S ALTER TABLE S<br><strong>INSERT INTO向表中追加元组的值</strong><br>例：将一个新学生记录，插入学生关系表S中。 (‘S31’,’王浩’,’计算机’,’1999-10-15’,’男’) INSERT INTO S （SNO，SN，SD，SB，SEX） VALUES (‘S31’, ‘王浩’, ‘计算机’, ‘1999-10-15’, ‘男’) ； 例：向表SC中插入一条选课元组(‘S31’，‘C01’） ​INSERT INTO S （SNO，CNO） ​VALUES (‘S31’,’C01’)<br><strong>查询结果的显示</strong><br><strong>一个完整的数据查询语句的格式</strong><br>SELECT [ ALL|DISTINCT ]&lt;目标列表达式1&gt;[&lt;目标列表达2&gt;, …] FROM &lt;表名或视图名1&gt; [, &lt;表名或视图名2&gt;, …] [ WHERE &lt;元组选择条件表达式&gt;] [ GROUP BY &lt;属性列名1&gt;[ ,&lt;属性列名2&gt;, …] [ HAVING &lt;组选择条件表达式&gt;]] [ORDER BY &lt;目标列名1&gt; [ASC|DESC] [,&lt;目标列名2&gt; [ASC|DESC], …]]<br><strong>投影属性列</strong><br>SELECT [ ALL|DISTINCT ]&lt;目标列表达式1&gt;[&lt;目标列表达2&gt;, …] FROM &lt;表名&gt;<br>查询显示所有学生的信息<br>SELECT * ​FROM S;<br>表示所有属性信息<br><strong>去掉重复元组</strong><br>SELECT [ ALL|DISTINCT ]&lt;目标列表达式1&gt;[&lt;目标列表达2&gt;, …] FROM &lt;表名&gt;<br>查询选修了课程的学生的学号<br>SELECT DISTINCT SNO ​FROM SC;<br>DISTINCT：去掉结果中重复行<br><strong>查询结果的计算</strong><br>SELECT [ ALL|DISTINCT ]&lt;目标列表达式1&gt;[&lt;目标列表达2&gt;, …] FROM &lt;表名&gt;<br>统计学生的总人数<br>​SELECT COUNT( * ) ​FROM S<br>查询所有学生的学号和年龄<br>SELECT SNO, datediff(Year, SB, Getdate()) + 1 ​FROM S;<br>Getdata():获取系统当前的日期<br>datediff(datepart, startdate, enddate)<br><strong>聚集函数</strong></p><ul><li>COUNT( * ) 统计元组个数</li><li>COUNT([DISTINCT|ALL] &lt;列名&gt;) 统计一列中值的个数</li><li>SUM([DISTINCT|ALL] &lt;列名&gt;) 计算一列值的总和(此列必须是数值型)</li><li>AVG([DISTINCT|ALL] &lt;列名&gt;) 计算一-列值的平均值(此列必须是数值型)</li><li>MAX([DISTINCT|ALL] &lt;列名&gt;) 求一列值中的最大值</li><li>MIN([DISTINCT|ALL] &lt;列名&gt;) 求一列值中的最小值<br><strong>目标列命名</strong><br>查询所有学生的学号和年龄<blockquote><p>SELECT SNO (AS) ‘学号’, ‘年龄’ &#x3D; datediff(Year, SB, Getdate()) + 1 ​FROM S;</p></blockquote></li></ul><p><strong>查询结果的排序</strong></p><blockquote><p>SELECT [ ALL|DISTINCT ]&lt;目标列表达式1&gt;[ ,&lt;目标列表达式2&gt;, …] FROM &lt;表名&gt; ORDER BY &lt;目标列1&gt; [ASC|DESC][，&lt;目标列2 &gt; [ASCIDESC]，…]</p></blockquote><p>查询所有选修信息，按课程号升序排列，同一课程内的学生成绩降序排列</p><blockquote><p>SELECT * ​FROM SC ​ORDER BY CNO ,GRADE DESC 或用CNO和GRADE对应的第几列数字表示</p></blockquote><ul><li>&lt;目标列1&gt;：先按第一列排序 </li><li>ASC:升序（默认值）</li><li>DESC:降序</li><li>&lt;目标列2&gt;：第一列相同，再按第二列排序</li><li>关键字：ORDER BY<br><strong>查询满足条件的元组</strong><blockquote><p>SELECT [ ALL|DISTINCT ]&lt;目标列表达式1&gt;[ ,&lt;目标列表达式2&gt;, …] FROM &lt;表名或视图名1&gt; [,&lt;表名或视图名2&gt;, …] [ WHERE &lt;元组选择条件表达式&gt;]</p></blockquote></li></ul><p><strong>运算符</strong></p><ul><li><p>算术运算 +, -, *, &#x2F;, % (取余)</p></li><li><p>比较运算 &#x3D;, &lt;&gt;, &gt;&#x3D;, &gt;, &lt;&#x3D;, &lt;</p></li><li><p>逻辑运算 AND，OR，NOT</p></li><li><p>谓词运算</p></li><li><p>[NOT] BETWEEN…AND</p></li><li><p>[NOT] LIKE</p></li><li><p>[NOT] IN</p></li><li><p>IS [NOT] NULL<br><strong>运算符的优先顺序（由高到低）</strong></p></li><li><p>算术运算 +, -, *, &#x2F;, % (取余)</p></li><li><p>比较运算 &#x3D;, &lt;&gt;, &gt;&#x3D;, &gt;, &lt;&#x3D;, &lt;</p></li><li><p>谓词运算</p></li><li><p>[NOT] BETWEEN…AND</p></li><li><p>[NOT] LIKE</p></li><li><p>[NOT] IN</p></li><li><p>IS [NOT] NULL</p></li><li><p>逻辑运算 AND，OR，NOT<br><strong>BETWEEN谓词</strong><br>BETWEEN谓词用于判断某个值是否属于一个指定的区间<br>一般形式为:<br>E [NOT] BETWEEN E1 AND E2<br>其语义为:<br>[NOT] (E&gt;&#x3D;E1 AND E&lt;&#x3D;E2) E、E1和E2都是表达式，且E1&lt;E2。<br>查询出生时间在1998-01-01到1999-12-31之间的学生的姓名和出生时间<br>SELECT SN,SB FROM S WHERE SB BETWEEN ‘1998-01-01’ AND ‘1999-12-31’; 或 WHERE SB&gt;&#x3D; ‘1998-01-01’ AND SB&lt;&#x3D;’1999-12-31’;<br><strong>LIKE谓词</strong><br>LIKE谓词用于部分匹配查询（模糊查询）<br>一般形式为:</p></li><li><p>“字符串表达式”中通配符:</p></li><li><p>字符”_”:代表任意一个单字符</p></li><li><p>字符“%”:代表长度可为零的任意长字符串<br>&lt;属性列名&gt; [NOT] LIKE字符串表达式<br>查询姓“王”的所有学生的学号和姓名。<br>SELECT SNO,SN FROM S WHERE SN LIKE ‘ % _ 王（ % ）’；<br>“ \ ” 转义字符:用于去掉一些特殊字符的特定含义，使其被作为普通字符看待, 如用“%”去匹配字符%，用_ 去匹配字符_<br><strong>IN谓词</strong><br>IN谓词适用于判断一一个值是否属于一个集合<br>与比较运算符中“&#x3D;”含义相同。<br>一般形式为:<br>E [NOT] IN (V1, V2,…, Vn)<br>其语义为:<br>[NOT] (E&#x3D; V1 OR E&#x3D; V2 OR… OR E&#x3D; Vn)<br>查询非数学系和非计算机系的学生的学号、姓名和所在系<br>SELECT SNO,SN,SD FROM S WHERE SD NOT IN(‘数学’，‘计算机’)；<br><strong>NULL谓词</strong><br>NULL谓词适用于判断属性值是否为空<br>一般形式为：<br>&lt;属性列名&gt;IS [NOT] NULL<br>查询所有缺少选课成绩的学生的学号和相应的课程号<br>SELECT SNO,CNO FROM SC WHERE GRADE IS NULL;<br><strong><del>ANY或ALL谓词</del></strong><br>常与比较运算符连用<br>查询其他专业中比软件工程专业所有老师年龄大的教师姓名年龄<br>SELECT TN,AGE FROM T WHERE AGE&gt;ALL(SELECT AGE FROM T WHERE DEPT&#x3D;’软件工程’) and DEPT&lt;&gt;’软件工程’ order by age desc<br>ANY、ALL谓词与集函数及IN谓词的等价关系</p></li><li><p>ANY ALL</p></li><li><p>&#x3D; IN -</p></li><li><p>&lt; &lt;MAX &lt;MIN</p></li><li><p>&lt;&#x3D; &lt;&#x3D;MAX &lt;&#x3D;MIN</p></li><li><blockquote><blockquote><p>MAX &gt;MIN</p></blockquote></blockquote></li><li><blockquote><p>&#x3D; &gt;&#x3D;MAX &gt;&#x3D;MIN</p></blockquote></li><li><p>&lt;&gt;或!&#x3D; - NOT IN<br><strong>EXISTS谓词</strong><br>不返回任何实际数据，只产生逻辑值真、假<br>查询担任C2课程的教师性名&#96;&#96;&#96;&#96;<br>SELECT TN FROM T WHERE EXISTS (SELECT * FROM TC WHERE TNO &#x3D; T.TNO AND CNO&#x3D;’C2’)</p></li></ul><p>分组聚集查询<br>完整的数据查询语句的格式<br>SELECT [ ALL|DISTINCT ]&lt;目标列表达式1&gt;[,&lt;目标列表达式2&gt;, … ] FROM &lt;表名或视图名1&gt; [, &lt;表名或视图名2&gt; , …] [ WHERE &lt;元组选择条件表达式&gt; ] [ GROUP BY &lt;属性列名1&gt;[, &lt;属性列名2&gt;, …][ HAVING &lt;组选择条件表达式&gt;]] [ ORDER BY &lt;目标列名1&gt; [ASC|DESC] [, &lt;目标列名2&gt; [ASC|DESC], …]]<br>语句格式<br>GROUP BY &lt;属性列名1&gt;[ ,&lt;属性列名2&gt; , …] [HAVING条件] 依次按属性列名1,属性列名2…的值进行分组 HAVING子句对分组进行筛选 聚集函数将以每一分组中的元组为计算对象<br>查询选修了课程的学生学号和平均成绩。<br>SELECT SNO,AVG(GRADE) FROM SC GROUP BY SNO;<br>注意：聚集函数是不允许用于Where子句中的：Where子句是对每一元组进行条件过滤，而不是对集合进行条件过滤。<br>分组过滤：若要对集合(即分组)进行条件过滤，即满足条件的集合&#x2F;分组留下，不满足条件的集合&#x2F;分组剔除。<br>Having子句，又称分组过滤子句。需要有Group by子句支持，换句话说，没有Group by子句，便不能有Having子句。<br>Select 列名| expr | agfunc(列名) [[, 列名| expr | agfunc(列名) ] … ] ​From 表名1 [, 表名2 … ] ​[ Where 检索条件] ​[ Group by 分组条件[ Having 分组过滤条件] ] ;<br>查找男生人数超过2名的系的名称。<br>SELECT SD FROM S WHERE SEX&#x3D;’男’ GROUP BY SD HAVING COUNT(*)&gt;2;<br>总括：</p><ul><li>WHERE 子句从由FROM指定的数据对象中选择满足条件的元组</li><li>GROUP BY 子句对WHERE 子句选择出来的元组进行分组</li><li>HAVING对GROUP BY的分组进行选择</li><li>SELECT 子句对选择出来的分组产生查询结果<br><strong>连接查询</strong><br><strong>一个完整的数据查询语句的格式</strong><br>SELECT [ ALL|DISTINCT ]&lt;目标列表达式1&gt;[,&lt;目标列表达式2&gt;, … ] FROM&lt;表名或视图名1&gt;[&lt;表名或视图名2&gt;，…] [ WHERE &lt;元组选择条件表达式&gt; ] [ GROUP BY &lt;属性列名1&gt;[ &lt;属性列名2&gt;00] [ HAVING &lt;组选择条件表达式&gt;]] [ ORDER BY &lt;目标列名1&gt; [ASC|DESC] [, &lt;目标列名2&gt; [ASC|DESC]，…]1<br><strong>多表连接查询</strong><br>查询选修课程号为”C01”的学生学号和成绩。<br>SELECT SNO,GRADE FROM SC WHERE CNO&#x3D;’C01’;<br>查询选修课程号为”C01”的学生姓名和成绩。<br>SELECT SN,GRADE FROM SC,S(SC和S进行广义笛卡尔积运算) WHERE CNO&#x3D;’C01’ AND SC.CNO&#x3D;S.SNO;<br>多表连接时，如两个表的属性名相同，则需采用表名. 属性名方式来限定该属性是属于哪一个表。<br><strong>外连接查询</strong><br>在SQL语句中，外连接在FROM子包中指定，其语法规则如下:<br>FROM &lt;左关系&gt; LEFT| RIGHT|FULL [OUTER] JOIN &lt;右关系&gt; ON &lt;连接条件&gt;</li><li>左连接：LEFT [OUTER] JION</li><li>右连接：RIGHT [OUTER] JION</li><li>全外连接：FULL [OUTER] JION<br>连接条件可包含对参与连接的关系进行元组选择的条件</li><li>如“表1 Left Outer Join 表2”，则连接后，表1的任何元组t都会出现在结果表中，如表2中有满足连接条件的元组s, 则t与s连接；否则t与空值元组连接；</li><li>如“表1 Right Outer Join 表2”，则连接后，表2的任何元组s都会出现在结果表中，如表1中有满足连接条件的元组t, 则t与s连接；否则s与空值元组连接；</li><li>如“表1 Full Outer Join 表2”，是前两者的并。<br>查询所有学生姓名及选修课程号为“C01”的成绩，没有选修该课程的学生，成绩显示为空。<br>SELECT SN,GRADE FROM S LEFT OUTER JOIN SC ON SC.SNO&#x3D;S.SNO AND CNO&#x3D;’C01’;<br><strong>内连接查询</strong><br>常规连接查询也称为内连接查询，在FROM子句中指定，其语法规则如下: FROM &lt;左关系&gt; [ INNER] JOIN &lt;右关系&gt; ON &lt;连接条件&gt;<br>inner join(等值连接) 只返回两个表中联结字段相等的行<br>求所有教师的任课情况并按教师号排序(没有任课的教师也需列在表中)。<br>Select Teacher.T#, Tname, Cname ​From Teacher Inner Join Course ​ ON Teacher.T# &#x3D; Course.T# ​Order by Teacher.T# ASC;<br>重名之处理<br>连接运算涉及到重名的问题，如两个表中的属性重名，连接的两个表重名(同一表的连接)等，因此需要使用别名以便区分<br>select中采用别名的方式<br>Select 列名as 列别名[ [, 列名as 列别名] … ] ​From 表名1 as 表别名1, 表名2 as 表别名2, … ​Where 检索条件;<br>上述定义中的as 可以省略当定义了别名后，在检索条件中可以使用别名来限定属性<br>求有薪水差额的任意两位教师<br>Select T1.Tname as Teacher1, T2.Tname as Teacher2 ​From Teacher T1, Teacher T2 ​Where T1.Salary &gt; T2.Salary ;<br><strong>合并查询</strong><br>使用UNION操作符将来自不同查询的数据组合起来形成一个综合信息的查询结果。<br>UNION操作会自动将重复的数据行剔除。<br>注意：参加合并查询结果的各子查询的数据数目相同，对应的数据类型要相容。<br>从TC表中查询出教师编号为S4和S5教师编号和总教龄<br>SELECT TNO AS 教师编号，SUM(YEAR) AS 总教龄 FROM TC WHERE (TNO&#x3D;’S4’) GROUP BY TNO UNION SELECT TNO AS 教师编号，SUM(YEAR) AS 总教龄 ​ FROM TC ​WHERE (TNO&#x3D;’S5’) ​GROUP BY TNO<br><strong>θ-连接之不等值连接</strong><br>查询课程编号’C01’有成绩差的任意两位同学学号<br>SELECT SC1.SNO AS SNO1 , SC2.SNO AS SNO2 ​FROM SC SC1, SC SC2 ​WHERE SC1.GRADE &gt; SC2.GRADE AND ​SC1.CNO &#x3D; SC2.CNO AND SC1.CNO &#x3D; ‘C01’ AND ​ SC2.CNO &#x3D; ‘C01’<br>外连接：FROM &lt;左关系&gt; LEFT | RIGHT |FULL [OUTER] JION &lt;右关系&gt; ON &lt;连接条件&gt;<br><strong>自身连接：</strong><blockquote><p>对一个表进行多次扫描时使用</p></blockquote></li></ul><p>查询比周老师年龄大的老师的姓名、年龄、和周的年龄<br>SELECT X.TN AS 姓名，X.AGE AS 年龄，Y.AGE AS 周年龄 ​ FROM T AS X,T AS Y WHERE X.AGE&gt;Y.AGE AND Y.TN&#x3D;’周’<br><strong>视图</strong></p><ul><li><strong>创建视图</strong><br>  一般格式：CREATE VIEW &lt;视图名&gt;[（&lt;列名&gt;，&lt;列名&gt;）…] AS &lt;子查询&gt;</li><li><strong>删除视图</strong><br>  格式：DROP VIEW &lt;视图名&gt;</li><li><strong>删除视图名</strong><br>  格式：DROP VIEW 视图名</li><li><strong>更新视图</strong><br>  插入、删除、修改<br>  将视图STO2中的教师编号S1的教师改名为“王明”<br>  UPDATE STO2 SET TN&#x3D;’王明’ WHERE TNO&#x3D;’S1’</li><li><strong>限制条件</strong><br>  如果一个视图是从多个基本表使用联接操作导出的，则此视图不允许更新。<br>  如果在导出视图的过程中，使用了分组和聚合操作，也不允许该视图更新。<br>  若视图的字段来自字段表达式或常量、操作，则不允许对此视图执行INSERT和UPDATE操作，但可以进行DELETE操作。<br>  若视图定义中含有GROUP BY、DISTINCT短语或或嵌套查询，且内层查询的FROM子句中涉及的表也是导出该视图的基本表，则此视图不允许更新。</li></ul>]]></content>
    
    
    <summary type="html">SQL语句基础概述</summary>
    
    
    
    <category term="数据库" scheme="https://fanxing28.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="后端" scheme="https://fanxing28.github.io/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SQL" scheme="https://fanxing28.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Obsidian插件</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E5%85%B6%E4%BB%96/Obsidian/Obsidian%E6%8F%92%E4%BB%B6/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E5%85%B6%E4%BB%96/Obsidian/Obsidian%E6%8F%92%E4%BB%B6/</id>
    <published>2023-11-28T14:32:25.000Z</published>
    <updated>2023-12-02T14:45:32.488Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p><strong>主题：</strong> Blue Topaz<br><strong>主题色：</strong> rgb: (47,147,228)</p><h1 id="Chat-Gpt-API-Keys"><a href="#Chat-Gpt-API-Keys" class="headerlink" title="Chat Gpt(API Keys)"></a>Chat Gpt(API Keys)</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">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</span><br></pre></td></tr></table></figure><h1 id="实用技巧"><a href="#实用技巧" class="headerlink" title="实用技巧"></a>实用技巧</h1><ol><li>内部链接</li></ol><ul><li>方法一：选中文章-右键-复制Obsidian链接-<code>[name](url)</code></li><li>方法二：<code>[[ #</code> 输入<code>#</code>时候会出现链接的文章标题，假如要选到该文章的子标题的话，可以继续<code>#</code>，如<code>[[Picgo-Core#1 简介 | 重命名]]</code></li></ul><ol start="2"><li>链接文章内段落</li></ol><ul><li>输入 <code>[[</code> 后可以选择文章内段落，<code>[[#^755b10|配置文件]]</code>，其中<code>|</code>后面是该链接名称</li></ul><ol start="3"><li>链接指定文章的指定文字</li></ol><ul><li><code>[[Picgo-Core#^fc8276 | xxxx]]</code></li></ul><ol start="4"><li>tags</li></ol><ul><li>打标签（方便搜索）</li></ul><ol start="5"><li><code>shift+ctrl+i</code></li></ol><ul><li>可以打开开发者模式，方便在上面看css文件有没有什么问题</li></ul><ol start="6"><li><code>win+.</code> 可以插入emoji表情</li></ol><h1 id="多端同步"><a href="#多端同步" class="headerlink" title="多端同步"></a>多端同步</h1><h3 id="涉及工具及下载地址："><a href="#涉及工具及下载地址：" class="headerlink" title="涉及工具及下载地址："></a>涉及工具及下载地址：</h3><ul><li><a href="https://link.juejin.cn/?target=http://img.icuppz.work/image2022/08/03-f285a86c1f228b92ca6abef3d438e920-MGit_v1.6.2.apk">MGit</a></li><li><a href="https://link.juejin.cn/?target=http://img.icuppz.work/image2022/08/03-bdcffedbf827f2a973b2175007037d71-Obsidian_v1.apk">Obsidian App</a></li></ul><h2 id="安装教程："><a href="#安装教程：" class="headerlink" title="安装教程："></a>安装教程：</h2><h3 id="1-MGit"><a href="#1-MGit" class="headerlink" title="1. MGit"></a>1. MGit</h3><ul><li><strong>图：</strong><br>  <img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidain%E6%8F%92%E4%BB%B6MGit.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidain%E6%8F%92%E4%BB%B6MGit.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Obsidain插件MGit.png"></li></ul><h3 id="2-Git功能"><a href="#2-Git功能" class="headerlink" title="2.Git功能"></a>2.Git功能</h3><ul><li><strong>图：</strong><br>  <img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidain%E6%8F%92%E4%BB%B6Git%E5%8A%9F%E8%83%BD.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidain%E6%8F%92%E4%BB%B6Git%E5%8A%9F%E8%83%BD.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Obsidain插件Git功能.png"><br><strong>注意点：存储位置必须为Document下的目录，否则会报没权限</strong></li></ul><h1 id="第三方插件"><a href="#第三方插件" class="headerlink" title="第三方插件"></a>第三方插件</h1><p><strong>左下方设置-第三方插件-关闭安全模式-进入插件市场</strong>（网络问题无法下载插件，可以去<strong>PKMer网站的插件集市</strong>进行搜索下载）</p><table><thead><tr><th><strong>插件名</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>Obsidian Git</td><td>git代码提交</td></tr><tr><td>Calendar</td><td>日历</td></tr><tr><td>增强编辑</td><td>文本编辑能力增强（智能）</td></tr><tr><td>Advanced Tables</td><td>表格快捷操作</td></tr><tr><td>Awesome Brain Manger</td><td>脑图、鼠标跟随效果、番茄时钟、选中快速搜索</td></tr><tr><td>Buttons</td><td>设置按钮</td></tr><tr><td>Better Word Count</td><td>统计文章字数</td></tr><tr><td>Copy Block Link</td><td>快捷复制一段内容</td></tr><tr><td>Home Tab</td><td>首页tab搜索</td></tr><tr><td>Dialogue</td><td>设置左右文字显示效果</td></tr><tr><td>Editing toolbar</td><td>富文本编辑器工具</td></tr><tr><td>Iconize</td><td>文件图标</td></tr><tr><td>Latex Suit</td><td>编写数学公式（Latex）</td></tr><tr><td>Markdown Formatting Assistant</td><td>Markdown编辑器面板</td></tr><tr><td>Word Splitting for Simplified Chinese in Edit Mode and Vim Mode</td><td>单击快速选中词组</td></tr><tr><td>Table Enhancer</td><td>快速生成表格</td></tr><tr><td>Image auto upload Plugin</td><td>PicGo图床连接（图片自动上传）</td></tr></tbody></table><h2 id="Obsidian-Git"><a href="#Obsidian-Git" class="headerlink" title="Obsidian Git"></a>Obsidian Git</h2><p><strong>快捷代码提交（可以定时提交代码）</strong><br><strong>个人笔记本，就直接同步到 github 或者 gitee</strong><br><strong>在首次提交之前，记得补充一个 .gitignore 文件，其中内容：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.obsidian/workspace # 忽略本地个人喜好的配置</span><br></pre></td></tr></table></figure><ul><li><strong>接着可以在右上角找到这个工具，这里就像 vscode 的面板了，不详细介绍</strong><br><img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/front/wexx/uniapp/Obsidian%E6%8F%92%E4%BB%B6Git%E9%9D%A2%E6%9D%BF.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/front/wexx/uniapp/Obsidian%E6%8F%92%E4%BB%B6Git%E9%9D%A2%E6%9D%BF.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Obsidian插件Git面板.png"></li><li><strong>装Obsidian前先装git，不然会提示“git is not ready“</strong><br><strong>打开Git面板：</strong><br>如果想要查看当前的工作区、暂存区，可以使用快捷键 <code>command + p</code> 打开命令面板，输入 <code>open source control view</code> 就可以打开 Git 面板了，这里的面板跟 VSCode 的面板操作类似，并且我它会自动帮你生成 commit 信息（你可以自行在 Obsidian Git 设置面板里配置默认的 commit 信息）</li></ul><h2 id="Calendar"><a href="#Calendar" class="headerlink" title="Calendar"></a>Calendar</h2><p><strong>日历（可以快捷写日记）</strong></p><ul><li><strong>效果图：</strong><br>  <img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidian%E6%8F%92%E4%BB%B6Calendar.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidian%E6%8F%92%E4%BB%B6Calendar.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Obsidian插件Calendar.png"></li></ul><h2 id="Advanced-Tables"><a href="#Advanced-Tables" class="headerlink" title="Advanced Tables"></a>Advanced Tables</h2><p><strong>表格快捷操作</strong></p><ul><li><strong>效果图（可以配合快捷键使用）：</strong><br>  <img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidian%E6%8F%92%E4%BB%B6AdvancedTables.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidian%E6%8F%92%E4%BB%B6AdvancedTables.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Obsidian插件AdvancedTables.png"></li></ul><h2 id="Awesome-Brain-Manger"><a href="#Awesome-Brain-Manger" class="headerlink" title="Awesome Brain Manger"></a>Awesome Brain Manger</h2><p><strong>脑图、鼠标跟随效果、番茄时钟、选中快速搜索</strong></p><ul><li><strong>效果图：</strong><br>  <img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidian%E6%8F%92%E4%BB%B6AwesomeBrainManger.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidian%E6%8F%92%E4%BB%B6AwesomeBrainManger.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Obsidian插件AwesomeBrainManger.png"></li></ul><h2 id="Buttons"><a href="#Buttons" class="headerlink" title="Buttons"></a>Buttons</h2><p><strong>设置按钮</strong></p><ul><li><strong>效果图：</strong><br>  <img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidain%E6%8F%92%E4%BB%B6Buttons.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidain%E6%8F%92%E4%BB%B6Buttons.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Obsidain插件Buttons.png"></li></ul><h2 id="Copy-Block-Link"><a href="#Copy-Block-Link" class="headerlink" title="Copy Block Link"></a>Copy Block Link</h2><p><strong>快捷复制一段内容</strong><br><strong>效果描述：在想要的笔记页相关文字选中，点击鼠标右键点击<code>Copy link to block</code>后再想要跳转过来的笔记下粘贴，然后<code>Ctrl+鼠标左键</code>点击显示的文本链接，就可以跳转到相关的笔记文本</strong></p><ul><li><strong>效果图：</strong><br>  <img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidain%E6%8F%92%E4%BB%B6CopyBlockLink.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidain%E6%8F%92%E4%BB%B6CopyBlockLink.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Obsidain插件CopyBlockLink.png"></li></ul><h2 id="Home-Tab"><a href="#Home-Tab" class="headerlink" title="Home Tab"></a>Home Tab</h2><p><strong>首页tab搜索</strong></p><ul><li><strong>效果图：</strong><br>  <img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidian%E6%8F%92%E4%BB%B6HomeTab.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidian%E6%8F%92%E4%BB%B6HomeTab.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Obsidian插件HomeTab.png"></li></ul><h2 id="Dialogue"><a href="#Dialogue" class="headerlink" title="Dialogue"></a>Dialogue</h2><p><strong>设置左右文字显示效果</strong></p><ul><li><strong>效果图：</strong><br>  <img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidain%E6%8F%92%E4%BB%B6Dialogue.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidain%E6%8F%92%E4%BB%B6Dialogue.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Obsidain插件Dialogue.png"></li></ul><h2 id="Editing-toolbar"><a href="#Editing-toolbar" class="headerlink" title="Editing toolbar"></a>Editing toolbar</h2><p><strong>富文本编辑器工具</strong></p><ul><li><strong>效果图：</strong><br>  <img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidian%E6%8F%92%E4%BB%B6Eiditingtoolbar.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidian%E6%8F%92%E4%BB%B6Eiditingtoolbar.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Obsidian插件Eiditingtoolbar.png"></li></ul><h2 id="Latex-Suit"><a href="#Latex-Suit" class="headerlink" title="Latex Suit"></a>Latex Suit</h2><p><strong>编写数学公式（Latex）</strong></p><ul><li><strong>效果图：</strong><br>  <img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidain%E6%8F%92%E4%BB%B6LatexSuit.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidain%E6%8F%92%E4%BB%B6LatexSuit.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Obsidain插件LatexSuit.png"></li></ul><h2 id="Markdown-Formatting-Assistant"><a href="#Markdown-Formatting-Assistant" class="headerlink" title="Markdown Formatting Assistant"></a>Markdown Formatting Assistant</h2><p><strong>Markdown编辑器面板</strong></p><ul><li><strong>面板图：</strong><br>  <img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidian%E6%8F%92%E4%BB%B6MarkdownFormattingAssistant.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidian%E6%8F%92%E4%BB%B6MarkdownFormattingAssistant.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Obsidian插件MarkdownFormattingAssistant.png"></li></ul><h2 id="Markdown-Table-Editor"><a href="#Markdown-Table-Editor" class="headerlink" title="Markdown Table Editor"></a>Markdown Table Editor</h2><p><strong>表格可视化面板</strong></p><ul><li><strong>面板图：</strong><br>  <img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidain%E6%8F%92%E4%BB%B6MarkdownTableEditor.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/Obsidain%E6%8F%92%E4%BB%B6MarkdownTableEditor.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Obsidain插件MarkdownTableEditor.png"></li></ul><h2 id="Image-auto-upload-Plugin"><a href="#Image-auto-upload-Plugin" class="headerlink" title="Image auto upload Plugin"></a>Image auto upload Plugin</h2><p><strong>PicGo图床连接（图片自动上传）</strong><br><strong>效果：</strong><br>[[PicGo+阿里云OSS+Obsidian图片上传]]</p>]]></content>
    
    
    <summary type="html">Obsidain笔记软件使用到的第三方插件</summary>
    
    
    
    <category term="其他" scheme="https://fanxing28.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    <category term="Obsidian" scheme="https://fanxing28.github.io/categories/%E5%85%B6%E4%BB%96/Obsidian/"/>
    
    
    <category term="Obsidian" scheme="https://fanxing28.github.io/tags/Obsidian/"/>
    
  </entry>
  
  <entry>
    <title>PicGo+阿里云OSS+Obsidian图片上传</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E5%85%B6%E4%BB%96/Obsidian/PicGo+%E9%98%BF%E9%87%8C%E4%BA%91OSS+Obsidian%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E5%85%B6%E4%BB%96/Obsidian/PicGo+%E9%98%BF%E9%87%8C%E4%BA%91OSS+Obsidian%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/</id>
    <published>2023-11-28T14:32:25.000Z</published>
    <updated>2023-12-02T12:18:29.911Z</updated>
    
    <content type="html"><![CDATA[<h2 id="阿里云OSS配置"><a href="#阿里云OSS配置" class="headerlink" title="阿里云OSS配置"></a>阿里云OSS配置</h2><p>[[阿里云OSS操作]]</p><h2 id="PicGo软件下载"><a href="#PicGo软件下载" class="headerlink" title="PicGo软件下载"></a>PicGo软件下载</h2><p><a href="https://molunerfinn.com/PicGo/"><strong>下载地址</strong></a><br><strong>软件界面图：</strong><br><img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/PicGo%E8%BD%AF%E4%BB%B6%E7%95%8C%E9%9D%A2.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/PicGo%E8%BD%AF%E4%BB%B6%E7%95%8C%E9%9D%A2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="PicGo软件界面.png"></p><h2 id="PicGo图床设置"><a href="#PicGo图床设置" class="headerlink" title="PicGo图床设置"></a>PicGo图床设置</h2><p><a href="https://developer.aliyun.com/article/787128">参看教程</a><br><img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/PicGooss%E9%85%8D%E7%BD%AE.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/PicGooss%E9%85%8D%E7%BD%AE.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="PicGooss配置.png"><br><strong>填写项：</strong></p><ul><li><strong>图床配置名：</strong> 自定义</li><li><strong>设定KeyId、设定KeySecret：</strong> 创建新的AccessKey，会生成AccessKeyID和AccessKeySecret，AccessKeySecret是无法找回的，所以一定要保存好。<br><strong>自己的key:</strong> [[阿里云OSS操作#^hqpng4]]</li><li><strong>设置Bucket、设定存储区域、设定存储路径：</strong><img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/PicGo%E8%AE%BE%E7%BD%AE%E4%B8%89%E9%A1%B9.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/PicGo%E8%AE%BE%E7%BD%AE%E4%B8%89%E9%A1%B9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="PicGo设置三项.png"></li><li><strong>设定自定义域名和设定网址后缀：</strong> 有自定义的域名就写没有就不写<br>至此PicGo就配置好了，直接将要上传的图片拖到上传区就可以，上传了。（上传信息电脑右下角回显示）</li></ul><h2 id="在Obsidian中使用PicGo图床"><a href="#在Obsidian中使用PicGo图床" class="headerlink" title="在Obsidian中使用PicGo图床"></a>在Obsidian中使用PicGo图床</h2><p>直接在Obsidian中安装<code>Image auto upload Plugin</code>的第三方插件就可以直接将图片拖到文章中就会自动上传阿里云OSS（<strong>注：</strong> <font color="#ff0000">在Obsidian中放图片前要打开PicGo软件</font>）</p>]]></content>
    
    
    <summary type="html">PicGo配置、阿里云OSS配置、Obsidian图片上传</summary>
    
    
    
    <category term="其他" scheme="https://fanxing28.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    <category term="Obsidian" scheme="https://fanxing28.github.io/categories/%E5%85%B6%E4%BB%96/Obsidian/"/>
    
    
    <category term="Obsidian" scheme="https://fanxing28.github.io/tags/Obsidian/"/>
    
  </entry>
  
  <entry>
    <title>CSS3 新特性</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/CSS/%E3%80%90CSS3%E3%80%91%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/CSS/%E3%80%90CSS3%E3%80%91%E6%96%B0%E7%89%B9%E6%80%A7/</id>
    <published>2023-11-28T14:32:25.000Z</published>
    <updated>2023-12-02T12:22:44.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-CSS基础知识"><a href="#一-CSS基础知识" class="headerlink" title="一. CSS基础知识"></a>一. CSS基础知识</h2><p><strong>渐进增强 progressive enhancement：</strong> 针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行效果、交互等改进和追加功能达到更好的用户体验。<br><strong>优雅降级 graceful degradation：</strong> 一开始就构建完整的功能，然后再针对低版本浏览器进行兼容。</p><h3 id="主流的五大浏览器"><a href="#主流的五大浏览器" class="headerlink" title="主流的五大浏览器"></a>主流的五大浏览器</h3><table><thead><tr><th>浏览器</th><th>内核</th><th>兼容性前缀</th></tr></thead><tbody><tr><td>chrome</td><td>webkit（旧）&#x2F;blink（新）</td><td>-webkit</td></tr><tr><td>safari</td><td>webkit</td><td>-webkit</td></tr><tr><td>欧朋</td><td>presto</td><td>-o</td></tr><tr><td>IE</td><td>trident</td><td>-ms</td></tr><tr><td>火狐</td><td>gecko</td><td>-moz</td></tr><tr><td>在不同浏览器中同一属性</td><td></td><td></td></tr><tr><td>如：border-radius</td><td></td><td></td></tr></tbody></table><ul><li>webkit-border-radius</li><li>o-border-radius</li><li>ms-border-radius</li><li>moz-border-radius<br>检查HTML5&#x2F;CSS3属性兼容网站（<a href="%5Bhttps://caniuse.com/"><a href="https://caniuse.com/">Can I use… Support tables for HTML5, CSS3, etc</a></a>）](<a href="https://caniuse.com/)%EF%BC%89">https://caniuse.com/)）</a>)</li></ul><h3 id="元素隐藏的方式"><a href="#元素隐藏的方式" class="headerlink" title="元素隐藏的方式"></a>元素隐藏的方式</h3><ul><li>display: none; 是极端值</li><li>visibility: hidden; 是极端值</li><li>opacity: 0; 有中间值<br>有极端值属性的元素：只有消失和出现两个状态，不能过渡<br>有中间值属性的元素：是在消失和出现之间缓慢过渡的</li></ul><h2 id="二-2D-变换"><a href="#二-2D-变换" class="headerlink" title="二. 2D 变换"></a>二. 2D 变换</h2><p>CSS3 2D转换可以对元素进行移动、缩放、转动、拉长或拉伸。</p><h3 id="2D-平移"><a href="#2D-平移" class="headerlink" title="2D 平移"></a>2D 平移</h3><blockquote><p>属性：transform</p></blockquote><p><strong>属性值</strong><br><strong>translate(x，y)</strong></p><blockquote><p>控制元素在x和y轴平移</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">100px</span>, <span class="number">100px</span>);<span class="comment">/* 沿着x轴和y轴平移100px */</span> </span><br><span class="line"><span class="comment">/* 或者 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100px</span>) <span class="built_in">translateY</span>(<span class="number">100px</span>);<span class="comment">/* 和上面一样的效果 */</span></span><br></pre></td></tr></table></figure><p><strong>注</strong>：如果括号内只写一个数值（默认另一个为0），只在x轴平移<br><strong>translateX()</strong></p><blockquote><p>控制元素在x轴平移</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100px</span>);<span class="comment">/* 沿着x轴向右平移100px */</span> </span><br></pre></td></tr></table></figure><p><strong>translateY()</strong></p><blockquote><p>控制元素在y轴平移</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">100px</span>);<span class="comment">/* 沿着y轴向上平移100px */</span> </span><br></pre></td></tr></table></figure><p>百分比写法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">100%</span>，<span class="number">100%</span>);<span class="comment">/* 参考元素自身的宽高  */</span></span><br></pre></td></tr></table></figure><p>注：以上三种属性值支持：</p><ul><li>数值</li><li>百分比（参考元素自身的宽高，不脱离文档流）</li><li>支持负值</li><li>translate(100px)只写一个值，另外一个值为0</li></ul><h3 id="元素水平垂直居中"><a href="#元素水平垂直居中" class="headerlink" title="元素水平垂直居中"></a>元素水平垂直居中</h3><blockquote><p>优点：不需要知道父子元素的宽高</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.子绝父相</span><br><span class="line"><span class="number">2</span>.子&#123;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2D-旋转"><a href="#2D-旋转" class="headerlink" title="2D 旋转"></a>2D 旋转</h3><blockquote><p>属性：transfrom</p></blockquote><p>属性值：rotate(度数)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">50deg</span>);</span><br></pre></td></tr></table></figure><p>度数为正：顺时针转动；度数为负：逆时针转动。<br><strong>2d 旋转加平移</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 先旋转后平移 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">30deg</span>) <span class="built_in">translate</span>(<span class="number">200px</span>);</span><br><span class="line"><span class="comment">/* 先平移后旋转 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">200px</span>) <span class="built_in">rotate</span>(<span class="number">30deg</span>);</span><br></pre></td></tr></table></figure><p>注：以上两种的参考轴不同，调换顺序，效果不同。</p><h3 id="变换圆点"><a href="#变换圆点" class="headerlink" title="变换圆点"></a>变换圆点</h3><blockquote><p>属性：transform-origin</p></blockquote><p>圆点默认：中心点<br><strong>属性值</strong><br>支持：</p><ul><li>数值<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform-origin</span>:  <span class="number">0</span>;<span class="comment">/* 左上 */</span></span><br></pre></td></tr></table></figure></li><li>百分比<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform-origin</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br></pre></td></tr></table></figure></li><li>方位词<blockquote><p>left right center top bottom center</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform-origin</span>: top right;</span><br><span class="line"><span class="attribute">transform-origin</span>: right top;<span class="comment">/* 两者效果相同 */</span></span><br></pre></td></tr></table></figure><blockquote><p>只有方位词的时候顺序可以换</p></blockquote></li></ul><p>参考元素的宽高<br><strong>混搭</strong></p><blockquote><p>混搭的时候顺序不可以换</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform-origin</span>: top <span class="number">100%</span>;</span><br></pre></td></tr></table></figure><blockquote><p>如果只写一个方位词,另外一个默认为center</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform-origin</span>: bottom;</span><br></pre></td></tr></table></figure><p><strong>实例</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transition</span>: <span class="number">1s</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform-origin</span>: bottom;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">30deg</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">20deg</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">10deg</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child</span>(<span class="number">5</span>) &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">10deg</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child</span>(<span class="number">6</span>) &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">20deg</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child</span>(<span class="number">7</span>) &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">30deg</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./变形原点练习/1print.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./变形原点练习/2print.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./变形原点练习/3print.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./变形原点练习/4print.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./变形原点练习/5print.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./变形原点练习/6print.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./变形原点练习/7print.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果动图</strong>：</p><h3 id="2D-缩放"><a href="#2D-缩放" class="headerlink" title="2D 缩放"></a>2D 缩放</h3><blockquote><p>属性：transform</p></blockquote><p>倾斜的默认原点为：中心点<br><strong>属性值</strong></p><blockquote><p>scale(倍数);</p></blockquote><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>scaleX()</td><td>只在水平方向的缩放倍数</td></tr><tr><td>scaleY()</td><td>只在垂直方向的缩放倍数</td></tr><tr><td>scale(x,y)</td><td>x,y代表水平方向和垂直方向的缩放倍数</td></tr><tr><td>注：x,y是数值不用写单位</td><td></td></tr><tr><td>scale(x,y)：如果只写一个值，另外一个值默认是相同的数值。</td><td></td></tr><tr><td><strong>属性值分类</strong></td><td></td></tr><tr><td>数值为正数时：</td><td></td></tr></tbody></table><ul><li>数值小于1：缩小</li><li>数值等于1：不变</li><li>数值大于1：放大<br>数值为0时：消失<br>数值为负数时：先翻转再缩放<br>实例：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">img</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transition</span>: <span class="number">2s</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">2</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./day13_img/1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><strong>效果动态图</strong> ：</li></ul><p><img src="/../_resources/2D%E7%BC%A9%E6%94%BE.gif" class="lazyload placeholder" data-srcset="/../_resources/2D%E7%BC%A9%E6%94%BE.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/2D缩放.gif"></p><h3 id="2D-倾斜"><a href="#2D-倾斜" class="headerlink" title="2D 倾斜"></a>2D 倾斜</h3><blockquote><p>属性：transform</p></blockquote><p>倾斜的默认原点为：中心点<br><strong>属性值</strong></p><blockquote><p>skew(度数);</p></blockquote><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>scaleX()</td><td>只在水平方向的倾斜度数</td></tr><tr><td>scaleY()</td><td>只在垂直方向的倾斜度数</td></tr><tr><td>scale(x,y)</td><td>x,y代表水平方向和垂直方向的倾斜度数</td></tr><tr><td><strong>注</strong>：如果skew(x,y)只写一个值，代表的是skewX()</td><td></td></tr><tr><td>实例：</td><td></td></tr></tbody></table><blockquote><p>倾斜为平行四边形，且里面的内容不倾斜。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>:</span></span><br><span class="line"><span class="language-css">        transition-duration: <span class="number">2s</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transition-duration</span>: <span class="number">2s</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.son</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 默认原点中心点 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>: <span class="built_in">skew</span>(-<span class="number">30deg</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.son</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>: <span class="built_in">skew</span>(<span class="number">30deg</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>2d倾斜<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果动态图</strong> ：<br><img src="/../_resources/%E5%80%BE%E6%96%9C%E7%BB%83%E4%B9%A0.gif" class="lazyload placeholder" data-srcset="/../_resources/%E5%80%BE%E6%96%9C%E7%BB%83%E4%B9%A0.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/倾斜练习.gif"></p><h2 id="三-3D-变换"><a href="#三-3D-变换" class="headerlink" title="三. 3D 变换"></a>三. 3D 变换</h2><p><strong>坐标</strong></p><ul><li>2d:x y</li><li>3d:x y z<br>x轴称为左右<blockquote><p>+向右 -向左</p></blockquote></li></ul><p>y轴称为上下</p><blockquote><p>+向下 -向上</p></blockquote><p>z轴称为前后</p><blockquote><p>+向前 -向后</p></blockquote><h3 id="3D-平移"><a href="#3D-平移" class="headerlink" title="3D 平移"></a>3D 平移</h3><p><strong>transform</strong></p><ul><li>translateZ() ：数值为正向前平移；数值为负向后平移</li><li>translate3d(x,y,z)<br><strong>3D环境</strong><blockquote><p>创建3D环境，必须写</p></blockquote></li></ul><p><strong>加给父元素以及以上的元素</strong> 默认值是2d环境（属性值：flat）</p><blockquote><p>transform-style: preserve-3d;</p></blockquote><p><strong>3D眼镜</strong><br><strong>加给父元素以及以上的元素</strong> 默认值是none<br><strong>景深</strong></p><blockquote><p>perspective: 100px;</p></blockquote><p>设置元素近大远小<br><strong>设置元素的透视效果</strong></p><blockquote><p>transform:perspective()</p></blockquote><ul><li>设置给当前元素</li><li>里面只能写数值（数值越小效果越明显且必须大于0）</li></ul><h3 id="3D-旋转"><a href="#3D-旋转" class="headerlink" title="3D 旋转"></a>3D 旋转</h3><p>transform<br><code>rotate()</code>效果等同于<code>rotatez()</code>：在Z轴上旋转</p><blockquote><p>X：为正值（向里旋转）；为负值（向外旋转）</p></blockquote><p>rotateX()：在X轴上旋转</p><blockquote><p>Y：为正值（向右旋转）；为负值（向左旋转）</p></blockquote><p>rotateY()：在Y轴上旋转</p><blockquote><p>Z：为正值（顺时针旋转）；为负值（逆时针旋转）</p></blockquote><p>rotate3d(x,y,z,旋转度数)</p><blockquote><p>例：rotate3d(1,1,1,30deg)</p></blockquote><p><strong>x,y,z</strong></p><ul><li>0-1之间</li><li>0表示不旋转</li><li>1表示旋转也可以写小数,不推荐</li></ul><h3 id="3D-缩放"><a href="#3D-缩放" class="headerlink" title="3D 缩放"></a>3D 缩放</h3><ul><li>scalex()<blockquote><p>X轴缩放</p></blockquote></li><li>scaley()<blockquote><p>Y轴缩放</p></blockquote></li><li>scalez()<blockquote><p>Z轴缩放</p></blockquote></li><li>scale3d(x,y,z)必须结合其他的变形函数<strong>一起使用</strong>并且必须放在其他变形函数的<strong>后面</strong><br>数值：</li><li>大于1：放大</li><li>小于1：缩小</li></ul><h2 id="四-动画"><a href="#四-动画" class="headerlink" title="四. 动画"></a>四. 动画</h2><p>在 CSS3 出现之前，动画都是通过 JavaScript 动态的改变元素的样式属性来完成了，这种方式虽然能够实现动画，但是在性能上存在一些问题。CSS3 的出现，让动画变得更加容易，性能也更加好。</p><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><p><strong>定义关键帧</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> 动画名字&#123;</span><br><span class="line">    <span class="selector-tag">from</span>&#123;&#125;</span><br><span class="line">    <span class="selector-tag">to</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>执行关键帧</strong></p><blockquote><p>在需要加动画的元素选择器中添加动画属性</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">animation-name</span>: move;</span><br><span class="line"><span class="attribute">animation-duration</span>: <span class="number">3s</span>(持续时间);</span><br></pre></td></tr></table></figure><p>以上两者必写。</p><h3 id="动画属性"><a href="#动画属性" class="headerlink" title="动画属性"></a>动画属性</h3><h4 id="animation"><a href="#animation" class="headerlink" title="animation"></a>animation</h4><ul><li>绑定动画名字 <code>animation-name: move（动画名字）;</code></li><li>动画的持续时间 <code>animation-duration: 1s（持续时间）;</code> （必写）</li><li>动画的延迟时间 <code>animation-delay: 2s（延迟时间 ）;</code> 注：手动写动画最小时间间隔是16.7ms<blockquote><p>多数显示器的默认频率是60hz,即每秒刷新60次。所以理论上的最小间隔是1&#x2F;60*1000ms&#x3D;16.7ms</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.father</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="number">#ff0000</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation</span>: move;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation-duration</span>: <span class="number">5s</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation-delay</span>: <span class="number">2s</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="keyword">@keyframes</span> move&#123;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">from</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">100px</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">to</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">300px</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><strong>效果动画</strong> ：</li></ul><p><img src="/../_resources/%E5%8A%A8%E7%94%BB.gif" class="lazyload placeholder" data-srcset="/../_resources/%E5%8A%A8%E7%94%BB.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/动画.gif"></p><p>定义更多帧：<strong>使用百分比</strong></p><blockquote><p>百分比是时间的百分比</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> 动画名字&#123;   </span><br><span class="line">    <span class="number">0%</span>&#123;&#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="number">50%</span>&#123;&#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="number">100%</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.father</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="number">#ff0000</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation</span>: move;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation-duration</span>: <span class="number">5s</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation-delay</span>: <span class="number">2s</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="keyword">@keyframes</span> move&#123;</span></span><br><span class="line"><span class="language-css">        <span class="number">0%</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">100px</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="number">40%</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>,<span class="number">100px</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="number">70%</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">30deg</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="number">100%</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">skew</span>(<span class="number">30deg</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果动画</strong>：</p><p><img src="/../_resources/%E5%8A%A8%E7%94%BB2.gif" class="lazyload placeholder" data-srcset="/../_resources/%E5%8A%A8%E7%94%BB2.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/动画2.gif"></p><h4 id="animation-timing-function"><a href="#animation-timing-function" class="headerlink" title="animation-timing-function"></a>animation-timing-function</h4><blockquote><p>动画的运动状态</p></blockquote><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>ease</td><td>先快后慢</td></tr><tr><td>linear</td><td>匀速</td></tr><tr><td>ease-in</td><td>加速</td></tr><tr><td>ease-out</td><td>减速</td></tr><tr><td>ease-in-out</td><td>先加速后减速</td></tr></tbody></table><h4 id="animation-iteration-count"><a href="#animation-iteration-count" class="headerlink" title="animation-iteration-count"></a>animation-iteration-count</h4><blockquote><p>动画的执行次数</p></blockquote><p>支持：</p><ul><li>1(默认) 2 3 4… </li><li>infinite 无数次</li></ul><h4 id="animation-direction"><a href="#animation-direction" class="headerlink" title="animation-direction"></a>animation-direction</h4><blockquote><p>动画的方向</p></blockquote><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>normal</td><td>正向（默认）</td></tr><tr><td>reverse</td><td>反向</td></tr><tr><td>alternate</td><td>先正后反(执行次数必须大于等于2)</td></tr><tr><td>alternate-reverse</td><td>先反后正(执行次数必须大于等于2)</td></tr></tbody></table><h4 id="animation-fill-mode"><a href="#animation-fill-mode" class="headerlink" title="animation-fill-mode"></a>animation-fill-mode</h4><blockquote><p>动画时间之外的状态</p></blockquote><p><strong>属性值</strong></p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>backwards</td><td>开始的时候停在第一帧</td></tr><tr><td>forwards</td><td>结束的时候停在最后一帧</td></tr><tr><td>both</td><td>动画延迟停在第一帧，动画结束停在最后一帧</td></tr><tr><td><strong>动画属性</strong></td><td></td></tr></tbody></table><h4 id="animation-play-state"><a href="#animation-play-state" class="headerlink" title="animation-play-state&#96;"></a>animation-play-state&#96;</h4><blockquote><p>动画的执行状态</p></blockquote><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>paused</td><td>暂停</td></tr><tr><td>running</td><td>运动（默认）</td></tr></tbody></table><blockquote><p>不能放在简写里面的，一般配合hover使用</p></blockquote><h4 id="动画的简写"><a href="#动画的简写" class="headerlink" title="动画的简写"></a>动画的简写</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">animation</span>:名字 持续时间 延迟时间 运动状态 次数 方向时间之外的状态;</span><br></pre></td></tr></table></figure><p>注：</p><ul><li>名字和持续时间必须写</li><li>没有先后顺序的</li><li>持续时间和延迟时间有先后顺序，持续时间在前</li><li>时间必须写单位 s</li><li>动画名字严格<strong>区分大小写</strong>的，避免写关键词</li><li>不写的属性值取默认值</li></ul><h4 id="过渡与动画的区别"><a href="#过渡与动画的区别" class="headerlink" title="过渡与动画的区别"></a>过渡与动画的区别</h4><p>相同点：都是对时间进行改变<br>不同点：</p><ol><li>过渡是主动触发，动画自动触发</li><li>过渡只有一次，动画可以多次或者无数次</li><li>过渡不能对属性进行精准的控制，动画可以</li></ol><h4 id="案例：小球跳动"><a href="#案例：小球跳动" class="headerlink" title="案例：小球跳动"></a>案例：小球跳动</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-timing-function</span>: linear;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-direction</span>: alternate;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-iteration-count</span>: infinite;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-play-state</span>: paused;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.div1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-duration</span>: <span class="number">2.5s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-name</span>: jump1;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.div2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-duration</span>: <span class="number">1.5s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-name</span>: jump2;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.div3</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-duration</span>: <span class="number">2s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-name</span>: jump3;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> jump1 &#123;</span></span><br><span class="line"><span class="language-css">            <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">20%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">80px</span>, <span class="number">80px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">40%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">160px</span>, <span class="number">160px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">60%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">240px</span>, <span class="number">240px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">80%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">320px</span>, <span class="number">160px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">400px</span>, <span class="number">20px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> jump2 &#123;</span></span><br><span class="line"><span class="language-css">            <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">20%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">100px</span>, <span class="number">80px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">40%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">200px</span>, <span class="number">160px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">60%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">300px</span>, <span class="number">260px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">80%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">400px</span>, <span class="number">160px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">500px</span>, <span class="number">20px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> jump3 &#123;</span></span><br><span class="line"><span class="language-css">            <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">20%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">90px</span>, <span class="number">80px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">40%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">170px</span>, <span class="number">160px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">60%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">230px</span>, <span class="number">250px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">80%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">350px</span>, <span class="number">160px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">410px</span>, <span class="number">20px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>动画效果</strong>：</p><p><img src="/../_resources/%E5%8A%A8%E7%94%BB%E5%BC%B9%E7%90%83.gif" class="lazyload placeholder" data-srcset="/../_resources/%E5%8A%A8%E7%94%BB%E5%BC%B9%E7%90%83.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/动画弹球.gif"></p><h2 id="五-过渡"><a href="#五-过渡" class="headerlink" title="五. 过渡"></a>五. 过渡</h2><blockquote><p>transition</p></blockquote><p>过渡是主动触发的，一般过渡只有鼠标移入才有效，所以过渡属性要写在元素的默认状态中。</p><h3 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h3><h4 id="transition-property"><a href="#transition-property" class="headerlink" title="transition-property"></a>transition-property</h4><blockquote><p>要发生过渡的css属性（不写，默认值 all）</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transition-property</span>: width,height;</span><br></pre></td></tr></table></figure><h4 id="transition-duration"><a href="#transition-duration" class="headerlink" title="transition-duration"></a>transition-duration</h4><blockquote><p>过渡的持续时间（必须写，不写无过渡效果，默认值为0）</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transition-duration</span>: <span class="number">4s</span>;</span><br></pre></td></tr></table></figure><h4 id="transition-delay"><a href="#transition-delay" class="headerlink" title="transition-delay"></a>transition-delay</h4><blockquote><p>过渡的延迟时间（可以不写，默认为0）</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transition-delay</span>: <span class="number">2s</span>;</span><br></pre></td></tr></table></figure><h3 id="过渡的运动状态"><a href="#过渡的运动状态" class="headerlink" title="过渡的运动状态"></a>过渡的运动状态</h3><blockquote><p>transition-timing-function</p></blockquote><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>ease</td><td>先快后慢</td></tr><tr><td>linear</td><td>匀速</td></tr><tr><td>ease-in</td><td>加速</td></tr><tr><td>ease-out</td><td>减速</td></tr><tr><td>ease-in-out</td><td>先加速后减速</td></tr><tr><td>注：ease和linear常用，其余三个属性值不太用。</td><td></td></tr><tr><td>实例：</td><td></td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.father</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">30px</span> auto;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.father</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">transition-duration</span>: <span class="number">4s</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.father</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.ease</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* 默认  先快后慢*/</span></span></span><br><span class="line"><span class="language-css">      <span class="attribute">transition-timing-function</span>: ease;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.linear</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* 匀速 */</span></span></span><br><span class="line"><span class="language-css">      <span class="attribute">transition-timing-function</span>: linear;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ease&quot;</span>&gt;</span>先快后慢<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;linear&quot;</span>&gt;</span>匀速<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果动画</strong>：</p><p><img src="/../_resources/%E8%BF%87%E6%B8%A1%E7%9A%84%E8%BF%90%E5%8A%A8%E7%8A%B6%E6%80%81.gif" class="lazyload placeholder" data-srcset="/../_resources/%E8%BF%87%E6%B8%A1%E7%9A%84%E8%BF%90%E5%8A%A8%E7%8A%B6%E6%80%81.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/过渡的运动状态.gif"></p><h3 id="贝塞尔曲线（不常用）"><a href="#贝塞尔曲线（不常用）" class="headerlink" title="贝塞尔曲线（不常用）"></a>贝塞尔曲线（不常用）</h3><p>属性值：cubic-bezier()<br>贝塞尔曲线网址：<a href="http://cubic-bezier.com/">http://cubic-bezier.com/</a><br>逐帧动画：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transition-timing-function</span>:<span class="built_in">steps</span>(动画执行的步数);</span><br></pre></td></tr></table></figure><h3 id="过渡的简写"><a href="#过渡的简写" class="headerlink" title="过渡的简写"></a>过渡的简写</h3><blockquote><p>transition:要发生过渡的属性 持续时间 延迟时间 运动状态</p></blockquote><ul><li>属性顺序不强调</li><li><strong>持续时间和延迟时间有先后顺序</strong>（持续时间在前）</li><li>持续时间必须写<br>最简单的过渡<blockquote><p>transition: 2s</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.father</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transition</span>: <span class="number">1s</span> <span class="number">2s</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.father</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>效果动画：<br><img src="/import/3872daff-038c-45e4-ae5a-c7cb3c62d763/D:/blog_hexo/images/CSS/video/%E8%BF%87%E6%B8%A1%E7%9A%84%E7%AE%80%E5%86%99.gif" class="lazyload placeholder" data-srcset="/import/3872daff-038c-45e4-ae5a-c7cb3c62d763/D:/blog_hexo/images/CSS/video/%E8%BF%87%E6%B8%A1%E7%9A%84%E7%AE%80%E5%86%99.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="import/3872daff-038c-45e4-ae5a-c7cb3c62d763/D:/blog_hexo/images/CSS/video/过渡的简写.gif"></li></ul><h2 id="六-渐变"><a href="#六-渐变" class="headerlink" title="六. 渐变"></a>六. 渐变</h2><p>CSS渐变是CSS3图像模块中添加的新类型的图像。CSS渐变允许您在两个或多个指定颜色之间显示平滑过渡。</p><h3 id="线性渐变"><a href="#线性渐变" class="headerlink" title="线性渐变"></a>线性渐变</h3><blockquote><p>background-image: linear-gradient()</p></blockquote><h4 id="方向默认从上到下"><a href="#方向默认从上到下" class="headerlink" title="方向默认从上到下"></a>方向<strong>默认</strong>从上到下</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(red,blue); </span><br></pre></td></tr></table></figure><h4 id="支持多种颜色"><a href="#支持多种颜色" class="headerlink" title="支持多种颜色"></a>支持多种颜色</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(red,green,blue);</span><br></pre></td></tr></table></figure><h4 id="改变渐变方向"><a href="#改变渐变方向" class="headerlink" title="改变渐变方向"></a>改变渐变方向</h4><p>方向：从右到左</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to left,red,blue); </span><br></pre></td></tr></table></figure><p>方向：从左到右</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to right,red,blue); </span><br></pre></td></tr></table></figure><p>方向：从下到上</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top,red,blue); </span><br></pre></td></tr></table></figure><p>方向：从上到下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to bottom,red,blue); </span><br></pre></td></tr></table></figure><p><strong>注</strong>：to 和方向单词之间是有空格的（to left）</p><h4 id="对角线渐变"><a href="#对角线渐变" class="headerlink" title="对角线渐变"></a>对角线渐变</h4><p>方向：从上左到下右</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to bottom right, red, blue);</span><br></pre></td></tr></table></figure><p>方向：从上右到下左</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to bottom left, red, blue);</span><br></pre></td></tr></table></figure><p>方向：从下右到上左</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top left, red, blue);</span><br></pre></td></tr></table></figure><p>方向：从下左到上右</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top right, red, blue);</span><br></pre></td></tr></table></figure><p><strong>注</strong>：两个方向位置可以互换（to top left 等同于 to left top）</p><h3 id="角度渐变"><a href="#角度渐变" class="headerlink" title="角度渐变"></a>角度渐变</h3><p>正值增加是顺时针动，负值增加是逆时针转动。<br><code>180deg</code>是默认值（从上到下）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">180deg</span>, red, blue);</span><br></pre></td></tr></table></figure><p><code>0deg</code>(从下到上)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">0deg</span>, red, blue);</span><br></pre></td></tr></table></figure><p>其余以此类推</p><h3 id="渐变突变"><a href="#渐变突变" class="headerlink" title="渐变突变"></a>渐变突变</h3><p>要在渐变中包含一个实心的非过渡颜色区域，请包含颜色起止点的两个位置。颜色起止点可以有两个位置，这相当于两个连续颜色在不同位置具有相同的颜色起止点。颜色将在第一个颜色起止点时达到完全饱和，保持该饱和度到第二个颜色起止点，并通过相邻颜色起止点的第一个位置过渡到相邻颜色起止点的颜色。<br>结构：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>大体理解：下一个颜色值承接上一个颜色值时：</p><ul><li>若承接位置提前则还是前者设置的位置承接，并且颜色分明<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div1</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(red <span class="number">40%</span>, blue <span class="number">20%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>若是在同一位置承接则颜色分明<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div2</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(red <span class="number">40%</span>, blue <span class="number">40%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>若承接位置滞后则之间有渐变过渡<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div3</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(red <span class="number">40%</span>, blue <span class="number">70%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>效果图</strong>：</li></ul><p><img src="/import/9842cfdd-523d-49c1-a00e-024c6a9d55e0/D:/blog_hexo/images/CSS/%E6%B8%90%E5%8F%98%E7%AA%81%E5%8F%98.png" class="lazyload placeholder" data-srcset="/import/9842cfdd-523d-49c1-a00e-024c6a9d55e0/D:/blog_hexo/images/CSS/%E6%B8%90%E5%8F%98%E7%AA%81%E5%8F%98.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="import/9842cfdd-523d-49c1-a00e-024c6a9d55e0/D:/blog_hexo/images/CSS/渐变突变.png"></p><h3 id="多颜色渐变"><a href="#多颜色渐变" class="headerlink" title="多颜色渐变"></a>多颜色渐变</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(red <span class="number">33.3%</span>,yellow <span class="number">33.3%</span>,yellow <span class="number">66.6%</span>,blue <span class="number">66.6%</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：<br><img src="/import/9842cfdd-523d-49c1-a00e-024c6a9d55e0/D:/blog_hexo/images/CSS/%E5%A4%9A%E9%A2%9C%E8%89%B2%E6%B8%90%E5%8F%98.png" class="lazyload placeholder" data-srcset="/import/9842cfdd-523d-49c1-a00e-024c6a9d55e0/D:/blog_hexo/images/CSS/%E5%A4%9A%E9%A2%9C%E8%89%B2%E6%B8%90%E5%8F%98.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="import/9842cfdd-523d-49c1-a00e-024c6a9d55e0/D:/blog_hexo/images/CSS/多颜色渐变.png"></p><h3 id="径向渐变"><a href="#径向渐变" class="headerlink" title="径向渐变"></a>径向渐变</h3><blockquote><p>background-image: radial-gradient(方向, 颜色…)</p></blockquote><p><strong>椭圆形（默认）</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(red, blue);</span><br></pre></td></tr></table></figure><p><strong>渐变的形状–可以设置为圆形</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(circle, red, blue);</span><br></pre></td></tr></table></figure><h3 id="改变径向渐变方向"><a href="#改变径向渐变方向" class="headerlink" title="改变径向渐变方向"></a>改变径向渐变方向</h3><p><strong>数值</strong></p><blockquote><p>数值的坐标系:元素左上角为原点，向右是正值，向左是负值，向上是负值，向下是正值</p></blockquote><p>方向 at position（渐变中心点的位置）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(circle at <span class="number">400px</span> <span class="number">200px</span>, red, blue);</span><br></pre></td></tr></table></figure><blockquote><p>渐变中心点的位置：水平（向右400px） 垂直（向下200px）方向默认从左上到右下</p></blockquote><p><strong>百分比</strong></p><blockquote><p>参考元素的宽高</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(circle at <span class="number">100%</span> <span class="number">100%</span>, red, blue);</span><br></pre></td></tr></table></figure><p><strong>方位词</strong></p><ul><li>水平：left right center</li><li>垂直：top bottom center<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(circle at right top, red, blue);</span><br></pre></td></tr></table></figure><blockquote><p>如果位置只有方位词 顺序可以换</p></blockquote></li></ul><p><strong>三者可以混搭</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(circle at <span class="number">10px</span> bottom, red, blue);</span><br></pre></td></tr></table></figure><blockquote><p>如果只写一个值，默认另外一个方向是center</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(circle at bottom, red, blue);</span><br></pre></td></tr></table></figure><h3 id="重复渐变"><a href="#重复渐变" class="headerlink" title="重复渐变"></a>重复渐变</h3><h4 id="重复线性渐变"><a href="#重复线性渐变" class="headerlink" title="重复线性渐变"></a>重复线性渐变</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">repeating-linear-gradient</span>(red <span class="number">5%</span>，blue <span class="number">20%</span>);</span><br></pre></td></tr></table></figure><p>颜色必须加数值或者百分比</p><h4 id="重复径向渐变"><a href="#重复径向渐变" class="headerlink" title="重复径向渐变"></a>重复径向渐变</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">repeating-radial-gradient</span>(red <span class="number">5%</span> blue <span class="number">20%</span>);</span><br></pre></td></tr></table></figure><p>颜色必须加数值或者百分比</p><h3 id="渐变案例"><a href="#渐变案例" class="headerlink" title="渐变案例"></a>渐变案例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">1000px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to right,<span class="number">#4cc9f4</span>,<span class="number">#5362b4</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="number">#00fcff</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>新闻中心<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>荣誉资质<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果动画</strong>：</p><p><img src="/import/9842cfdd-523d-49c1-a00e-024c6a9d55e0/D:/blog_hexo/images/CSS/video/%E6%B8%90%E5%8F%98%E6%A1%88%E4%BE%8B.gif" class="lazyload placeholder" data-srcset="/import/9842cfdd-523d-49c1-a00e-024c6a9d55e0/D:/blog_hexo/images/CSS/video/%E6%B8%90%E5%8F%98%E6%A1%88%E4%BE%8B.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="import/9842cfdd-523d-49c1-a00e-024c6a9d55e0/D:/blog_hexo/images/CSS/video/渐变案例.gif"></p><h2 id="七-文字阴影"><a href="#七-文字阴影" class="headerlink" title="七. 文字阴影"></a>七. 文字阴影</h2><p>text-shadow: 水平偏移 垂直偏移 模糊程度 颜色<br>注意点：</p><ol><li>水平偏移和垂直偏移必须写（不写对应方向没有阴影效果，并且<strong>允许负值</strong>）</li><li>属性值是有一定顺序的</li><li>模糊程度不能写<strong>负值</strong>（写负值无模糊效果）</li><li>颜色默认为文本颜色<br>多重阴影：<strong>用逗号隔开</strong><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-shadow</span>: <span class="number">0px</span> -<span class="number">10px</span> <span class="number">8px</span> yellow,<span class="number">0px</span> -<span class="number">20px</span> <span class="number">8px</span> orange,<span class="number">0px</span> -<span class="number">30px</span> <span class="number">8px</span> red;</span><br></pre></td></tr></table></figure>实例：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">h1</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-shadow</span>: <span class="number">0px</span> -<span class="number">10px</span> <span class="number">8px</span> yellow,<span class="number">0px</span> -<span class="number">20px</span> <span class="number">8px</span> orange,<span class="number">0px</span> -<span class="number">30px</span> <span class="number">8px</span> red;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;   </span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>火<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><strong>效果图</strong>：</li></ol><p><img src="/../_resources/%E6%96%87%E5%AD%97%E9%98%B4%E5%BD%B1.png" class="lazyload placeholder" data-srcset="/../_resources/%E6%96%87%E5%AD%97%E9%98%B4%E5%BD%B1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/文字阴影.png"></p><h2 id="八-盒子阴影"><a href="#八-盒子阴影" class="headerlink" title="八. 盒子阴影"></a>八. 盒子阴影</h2><p>box-shadow: 水平偏移 垂直偏移 模糊程度 阴影大小 颜色 (内阴影 inset)<br>注意点：</p><ol><li>水平偏移和垂直偏移必须写(<strong>允许负值</strong>)</li><li>属性值是有一定顺序的</li><li>模糊程度<strong>不能写负值</strong>（写负值无模糊效果）</li><li>阴影大小默认为盒子大小</li><li>颜色默认为文本颜色<br>多重阴影：用逗号隔开<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">1px</span> <span class="number">10px</span> <span class="number">20px</span>  red，<span class="number">1px</span> <span class="number">1px</span>10px <span class="number">30px</span> blue;</span><br></pre></td></tr></table></figure><strong>内阴影</strong>：加inset 属性<br>实例：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: yellow;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">1px</span> <span class="number">10px</span> <span class="number">20px</span>  red,<span class="number">5px</span> <span class="number">1px</span> <span class="number">10px</span> <span class="number">30px</span> blue;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><strong>效果图</strong>：</li></ol><p><img src="/../_resources/%E7%9B%92%E5%AD%90%E9%98%B4%E5%BD%B1.png" class="lazyload placeholder" data-srcset="/../_resources/%E7%9B%92%E5%AD%90%E9%98%B4%E5%BD%B1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/盒子阴影.png"></p><h2 id="九-圆角"><a href="#九-圆角" class="headerlink" title="九. 圆角"></a>九. 圆角</h2><p>border-radius:</p><ul><li>数值</li><li>百分比，宽度和高度的百分比</li></ul><h3 id="圆角的简写"><a href="#圆角的简写" class="headerlink" title="圆角的简写"></a>圆角的简写</h3><p>一个值：四边</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>: <span class="number">20px</span>; </span><br></pre></td></tr></table></figure><p>两个值：第一个值：<strong>左上、右下</strong>；第二个值：<strong>右上、左下</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>: <span class="number">20px</span> <span class="number">40px</span>; </span><br></pre></td></tr></table></figure><p>三个值：第一个值：<strong>左上</strong>；第二个值：<strong>右上、左下</strong>；第三个值：<strong>右下</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>: <span class="number">20px</span> <span class="number">40px</span> <span class="number">60px</span>; </span><br></pre></td></tr></table></figure><p>四个值(顺时针)：第一个值：<strong>左上</strong>；第二个值：<strong>右上</strong>；第三个值：<strong>右下</strong>；第四个值：<strong>左下</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>: <span class="number">20px</span> <span class="number">40px</span> <span class="number">60px</span> <span class="number">80px</span>; </span><br></pre></td></tr></table></figure><h3 id="取消圆角"><a href="#取消圆角" class="headerlink" title="取消圆角"></a>取消圆角</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>: <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="单边圆角"><a href="#单边圆角" class="headerlink" title="单边圆角"></a>单边圆角</h3><p>左上角</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-top-left-radius</span>: <span class="number">20px</span>;</span><br></pre></td></tr></table></figure><p>右上角</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-top-right-radius</span>: <span class="number">40px</span>;</span><br></pre></td></tr></table></figure><p>右下角</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-bottom-right-radius</span>: <span class="number">60px</span>;</span><br></pre></td></tr></table></figure><p>左下角</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-bottom-left-radius</span>: <span class="number">80px</span>;</span><br></pre></td></tr></table></figure><p><strong>方位词前后顺序不能改变</strong>（例：border-bottom-left-radius中的bottom和left顺序不能改变）</p><h3 id="常规圆角"><a href="#常规圆角" class="headerlink" title="常规圆角"></a>常规圆角</h3><h4 id="圆形"><a href="#圆形" class="headerlink" title="圆形"></a>圆形</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.div2</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 01.元素的宽高一致 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 02.圆角设为为宽高的一半或者设置为50% */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* border-radius: 50%; */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-radius</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="椭圆形"><a href="#椭圆形" class="headerlink" title="椭圆形"></a>椭圆形</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.div3</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 01.元素的宽高不一致 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 02.圆角设置为50% */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="胶囊形"><a href="#胶囊形" class="headerlink" title="胶囊形"></a>胶囊形</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.div3</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 01.元素的宽高不一致 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 02.圆角设置为高度的一半 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-radius</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><h2 id="十-flex-布局"><a href="#十-flex-布局" class="headerlink" title="十. flex 布局"></a>十. flex 布局</h2><h3 id="认识flex布局"><a href="#认识flex布局" class="headerlink" title="认识flex布局"></a>认识flex布局</h3><p>Flexible Box 简称 flex，意为”弹性布局”，可以简便、完整、响应式地实现各种页面布局。 采用Flex布局的元素，称为flex容器container。 它的所有子元素自动成为容器成员，称为flex项目item。</p><blockquote><p>当我们为盒子设为flex布局以后，子元素的float、clear和vertical-align 属性将失效。</p></blockquote><p>flex布局（其他叫法：伸缩布局、弹性布局、伸缩盒布局、弹性盒布局）<br>给一个元素设置了display: flex&#x2F;inline-flex（块级元素&#x2F;行内元素转为弹性盒子），那么这个元素就变成了弹性容器，这个元素的儿子们就变成了弹性项目，<strong>不会影响到孙子</strong>（但可以嵌套使用）<br><strong>总结</strong>：flex布局原理就是：通过<strong>给父盒子添加flex属性</strong>，来<strong>控制子盒子</strong>的位置和排列方式。（父盒子：弹性容器，子元素：弹性项目）</p><h3 id="flex-布局父项常见的属性"><a href="#flex-布局父项常见的属性" class="headerlink" title="flex 布局父项常见的属性"></a>flex 布局父项常见的属性</h3><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>flex-direction</td><td>设置<strong>主轴</strong>的方向 <strong>(默认x轴或叫行、row)</strong></td></tr><tr><td>flex-wrap</td><td>设置子元素是否换行（<strong>默认不换行</strong>）</td></tr><tr><td>flex-flow</td><td>复合属性，相当于同时设置了flex-direction和flex-wrap</td></tr><tr><td>justify-content</td><td>设置<strong>主轴</strong>上的子元素排列方式</td></tr><tr><td>align-content</td><td>设置<strong>侧轴</strong>上的子元素的排列方式（多行）</td></tr><tr><td>align-items</td><td>设置<strong>侧轴</strong>上的子元素排列方式（单行）</td></tr><tr><td><strong>flex-direction 属性</strong></td><td></td></tr><tr><td>决定主轴的方向(即项目的排列方向)</td><td></td></tr></tbody></table><ul><li>row（默认值）：主轴为水平方向，起点在左端</li><li>row-reverse：主轴为水平方向，起点在右端<br>以下两个了解就行：</li><li>column：主轴为垂直方向，起点在上沿。</li><li>column-reverse：主轴为垂直方向，起点在下沿<br>如下图：<br><strong>flex-wrap 属性</strong>（重要）<br>弹性元素永远沿主轴排列，那么如果主轴排不下，通过flex-wrap决定容器内项目是否可换行<blockquote><p>默认不换行，子元素宽度超过父元素宽度时，自动压缩子元素宽度</p></blockquote></li></ul><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>nowrap</td><td>不换行 <strong>（默认）</strong></td></tr><tr><td>wrap</td><td>换行</td></tr><tr><td>wrap-reverse</td><td>换行，第一行在下方</td></tr><tr><td><strong>flex-flow 属性</strong></td><td></td></tr></tbody></table><blockquote><p>复合属性，相当于同时设置了flex-direction和flex-wrap</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flex-flow</span>:row wrap;</span><br></pre></td></tr></table></figure><p><strong>justify-content 属性</strong><br>定义了项目在主轴上的对齐方式</p><blockquote><p>内容对齐（justify-content）属性应用在弹性容器上，把弹性项沿着弹性容器的主轴线（main axis）对齐</p></blockquote><ul><li>flex-start：<strong>默认</strong>，顶端对齐（从头部开始，如果主轴是x轴，则从左到右）</li><li>flex-end：末端对齐</li><li>center：居中对齐</li><li>space-between：两端对齐，中间自动分配（先两边贴边，在平分剩余空间）<strong>（重要）</strong></li><li>space-around：自动分配距离（平均分配剩余空间）<br>效果图：</li></ul><p><img src="/../_resources/justify-content.png" class="lazyload placeholder" data-srcset="/../_resources/justify-content.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/justify-content.png"></p><p><strong>align-content 属性</strong><br>定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>flex-start</td><td>没有行间距</td></tr><tr><td>flex-end</td><td>底对齐没有行间距</td></tr><tr><td>center</td><td>居中没有行间距</td></tr><tr><td>space-between</td><td>两端对齐，中间自动分配</td></tr><tr><td>space-around</td><td>自动分配距离</td></tr><tr><td>stretch</td><td>设置子项元素高度平分父元素高度 <strong>（默认值）</strong></td></tr></tbody></table><p><img src="/../_resources/align-content.png" class="lazyload placeholder" data-srcset="/../_resources/align-content.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/align-content.png"></p><p><strong>align-items 属性</strong><br>定义项目在交叉轴上如何对齐</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>flex-start</td><td>弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴起始边界。</td></tr><tr><td>flex-end</td><td>弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴结束边界。</td></tr><tr><td>center</td><td>弹性盒子元素在该行的侧轴（纵轴）上居中放置。（如果该行的尺寸小于弹性盒子元素的尺寸，则会向两个方向溢出相同的长度）。</td></tr></tbody></table><h3 id="flex-布局子项常见属性"><a href="#flex-布局子项常见属性" class="headerlink" title="flex 布局子项常见属性"></a>flex 布局子项常见属性</h3><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>align-self</td><td>控制子项自己在侧轴的排列方式</td></tr><tr><td>flex-grow</td><td>控制某一个弹性项目如何增长</td></tr><tr><td>flex-shrink</td><td>控制某一个弹性项目如何收缩</td></tr><tr><td>flex-basis</td><td>元素在主轴的基准值（尺寸）</td></tr><tr><td>flex</td><td>子项目占的份数</td></tr><tr><td><strong>align-self 属性</strong></td><td></td></tr><tr><td><strong>允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性</strong></td><td></td></tr><tr><td>默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch</td><td></td></tr></tbody></table><blockquote><p>注意：align-self 属性可重写灵活容器的 align-items 属性</p></blockquote><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>auto</td><td>默认值。元素继承了它的父容器的 align-items 属性。如果没有父容器则为 “stretch”。</td></tr><tr><td>Stretch</td><td>元素被拉伸以适应容器。</td></tr><tr><td>Center</td><td>元素位于容器的中心。</td></tr><tr><td>flex-start</td><td>元素位于容器的开头。</td></tr><tr><td>flex-end</td><td>元素位于容器的结尾。</td></tr><tr><td>baseline</td><td>项目内部文本基线对齐</td></tr><tr><td><strong>效果图</strong>：</td><td></td></tr></tbody></table><p><img src="/../_resources/align-self.png" class="lazyload placeholder" data-srcset="/../_resources/align-self.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/align-self.png"></p><p><strong>flex-grow 属性</strong><br>如果主轴方向空间盈余，控制每个项目如何变大父元素的盈余的尺寸，项目按照取值的占比，各自增长各自的尺寸。<br>flex-grow: 默认值（0）</p><blockquote><p>不分配空间 不扩展</p></blockquote><p>支持：数值（1 2 3 4 …）</p><blockquote><p>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）</p></blockquote><p><img src="/../_resources/flex-grow1.png" class="lazyload placeholder" data-srcset="/../_resources/flex-grow1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/flex-grow1.png"></p><blockquote><p>如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍</p></blockquote><p><img src="/../_resources/flex-grow2.png" class="lazyload placeholder" data-srcset="/../_resources/flex-grow2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/flex-grow2.png"></p><blockquote><p>弹性容器的宽度正好等于元素宽度总和，无多余宽度，此时无论flex-grow是什么值都不会生效</p></blockquote><p><strong>flex-shrink 属性</strong><br>如果主轴方向空间不足，控制每个项目如何变小父元素收缩的尺寸，项目按照取值的占地，自动分配各自收缩的尺寸<br>flex-shrink:</p><ul><li>1 默认值 收缩</li><li>0 不收缩<br>支持：数值 1 2 3 4 …<blockquote><p>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小</p></blockquote></li></ul><p>如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小</p><p><img src="/../_resources/flex-shrink.png" class="lazyload placeholder" data-srcset="/../_resources/flex-shrink.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/flex-shrink.png"></p><p>在容器宽度有剩余时，flex-shrink也是不会生效的<br><strong>flex-basis 属性</strong><br>设置的是元素在主轴上的初始尺寸，所谓的<strong>初始尺寸就是元素在flex-grow和flex-shrink生效前的尺寸</strong><br>浏览器根据这个属性，计算主轴是否有多余空间，默认值为auto，即项目的本来大小，如设置了width则元素尺寸由width&#x2F;height决定（主轴方向），没有设置则由内容决定<br>支持：</p><ul><li>auto 默认</li><li>数值</li><li>百分比<br>当设置为0的是，会根据内容撑开<br>它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间<br><strong>flex 属性</strong><blockquote><p>flex: 增长 收缩 尺寸;</p></blockquote></li></ul><p>注：顺序不能换</p><ul><li><strong>flex: 1</strong>：平分空间</li><li><strong>flex: auto</strong> 等比例缩放<br><strong>order 属性</strong><br>说明：<blockquote><p>number排序优先级，数字越大越往后排，<strong>默认为0，支持负数</strong>。</p></blockquote></li></ul><h3 id="flex-布局的应用场景"><a href="#flex-布局的应用场景" class="headerlink" title="flex 布局的应用场景"></a>flex 布局的应用场景</h3><ol><li>实现元素水平垂直方向的居中</li><li>两栏三栏自适应布局中</li></ol><h2 id="十一-多列属性布局"><a href="#十一-多列属性布局" class="headerlink" title="十一. 多列属性布局"></a>十一. 多列属性布局</h2><p>CSS 多列布局（CSS Multi-column Layout）是一种定义了多栏布局的模块，可支持在布局中建立列（column）的数量，以及内容如何在列之间流动（flow）、列之间的间距（gap）大小，以及列的分隔线（column rules）。<br><strong>实现报纸文章布局效果</strong></p><table><thead><tr><th>多列属性</th><th>描述</th></tr></thead><tbody><tr><td>column-count</td><td>分为的列数</td></tr><tr><td>column-width</td><td>每列的宽度</td></tr><tr><td>column-gap</td><td>列与列之间的间距</td></tr><tr><td>column-rule</td><td>列与列之间的分割线（语法与border一致）</td></tr><tr><td>column-fill</td><td>列的高度是否统一</td></tr><tr><td>column-span</td><td>是否恒跨所有的列</td></tr><tr><td><strong>column-fill 属性</strong></td><td></td></tr></tbody></table><blockquote><p>列的高度是否统一</p></blockquote><ul><li>默认 balance ：以<strong>最高一列</strong>统一</li><li>auto：自适应<br><strong>break-inside: aviod 属性</strong><blockquote><p>防止元素被打破</p></blockquote></li></ul>]]></content>
    
    
    <summary type="html">CSS3 新增的特性（2D变换、3D变换、动画、过渡、渐变、文字阴影、圆角、flex布局等）</summary>
    
    
    
    <category term="前端" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CSS" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/CSS/"/>
    
    
    <category term="前端" scheme="https://fanxing28.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CSS" scheme="https://fanxing28.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>阿里云OSS操作</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E5%85%B6%E4%BB%96/Obsidian/%E9%98%BF%E9%87%8C%E4%BA%91OSS%E6%93%8D%E4%BD%9C/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E5%85%B6%E4%BB%96/Obsidian/%E9%98%BF%E9%87%8C%E4%BA%91OSS%E6%93%8D%E4%BD%9C/</id>
    <published>2023-11-28T14:32:25.000Z</published>
    <updated>2023-12-02T12:17:10.052Z</updated>
    
    <content type="html"><![CDATA[<h2 id="阿里云OSS目录"><a href="#阿里云OSS目录" class="headerlink" title="阿里云OSS目录"></a>阿里云OSS目录</h2><ul><li>images<ul><li>backEnd：后端图片<ul><li>java<ul><li>basics：java基础知识图片</li><li>frame： java框架相关图片</li></ul></li><li>php：php相关图片</li></ul></li><li>front：前端图片<ul><li>vue：vue相关图片</li><li>basics：框架以外的知识图片</li><li>wexx：微信小程序图片<ul><li>uniapp：uniapp相关图片</li></ul></li></ul></li><li>others：其他图片</li><li>project：项目涉及图片</li></ul></li></ul><h2 id="阿里云秘钥"><a href="#阿里云秘钥" class="headerlink" title="阿里云秘钥"></a>阿里云秘钥</h2><p>AccessKey ID：LTAI5tF4hmrLCKGFPU287Wwv<br>AccessKey Secret：leTc4vUCrnUM9iDK4NclnIB5fgb1uL ^hqpng4</p><h2 id="OSS配置"><a href="#OSS配置" class="headerlink" title="OSS配置"></a>OSS配置</h2><h3 id="创建Bucket"><a href="#创建Bucket" class="headerlink" title="创建Bucket"></a>创建Bucket</h3><p><img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/%E9%98%BF%E9%87%8C%E4%BA%91OSS%E5%88%9B%E5%BB%BABucket.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/%E9%98%BF%E9%87%8C%E4%BA%91OSS%E5%88%9B%E5%BB%BABucket.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="阿里云OSS创建Bucket.png"></p><h3 id="创建用户生成密钥Key"><a href="#创建用户生成密钥Key" class="headerlink" title="创建用户生成密钥Key"></a>创建用户生成密钥Key</h3><p><img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/%E9%98%BF%E9%87%8C%E4%BA%91oss%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/%E9%98%BF%E9%87%8C%E4%BA%91oss%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="阿里云oss创建用户.png"></p><h3 id="为用户添加OSS访问权限"><a href="#为用户添加OSS访问权限" class="headerlink" title="为用户添加OSS访问权限"></a>为用户添加OSS访问权限</h3><p><img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/%E9%98%BF%E9%87%8C%E4%BA%91oss%E7%94%A8%E6%88%B7%E6%B7%BB%E5%8A%A0%E6%9D%83%E9%99%90.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/%E9%98%BF%E9%87%8C%E4%BA%91oss%E7%94%A8%E6%88%B7%E6%B7%BB%E5%8A%A0%E6%9D%83%E9%99%90.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="阿里云oss用户添加权限.png"></p><h2 id="阿里云OSS客户端"><a href="#阿里云OSS客户端" class="headerlink" title="阿里云OSS客户端"></a>阿里云OSS客户端</h2><h3 id="客户端登录主页面"><a href="#客户端登录主页面" class="headerlink" title="客户端登录主页面"></a>客户端登录主页面</h3><p><img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/%E9%98%BF%E9%87%8C%E4%BA%91oss%E7%99%BB%E5%BD%95%E4%B8%BB%E7%95%8C%E9%9D%A2.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/%E9%98%BF%E9%87%8C%E4%BA%91oss%E7%99%BB%E5%BD%95%E4%B8%BB%E7%95%8C%E9%9D%A2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="阿里云oss登录主界面.png"></p><h3 id="客户端主界面"><a href="#客户端主界面" class="headerlink" title="客户端主界面"></a>客户端主界面</h3><p><img src="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/%E9%98%BF%E9%87%8C%E4%BA%91oss%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%95%8C%E9%9D%A2.png" class="lazyload placeholder" data-srcset="https://fanxingnotes.oss-cn-beijing.aliyuncs.com/images/others/%E9%98%BF%E9%87%8C%E4%BA%91oss%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%95%8C%E9%9D%A2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="阿里云oss客户端界面.png"></p>]]></content>
    
    
    <summary type="html">阿里云OSS操作及信息</summary>
    
    
    
    <category term="其他" scheme="https://fanxing28.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    <category term="Obsidian" scheme="https://fanxing28.github.io/categories/%E5%85%B6%E4%BB%96/Obsidian/"/>
    
    
    <category term="Obsidian" scheme="https://fanxing28.github.io/tags/Obsidian/"/>
    
  </entry>
  
  <entry>
    <title>CSS预处理器 Less</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/CSS/%E3%80%90CSS%E3%80%91%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8%20Less/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/CSS/%E3%80%90CSS%E3%80%91%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8%20Less/</id>
    <published>2023-11-28T14:32:25.000Z</published>
    <updated>2023-12-02T12:20:08.832Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h2><h3 id="Less-是什么？"><a href="#Less-是什么？" class="headerlink" title="Less 是什么？"></a>Less 是什么？</h3><p>Less 是一门 CSS 预处理语言，它扩充了 CSS 语言，增加了诸如变量、混合（mixin）、函数等功能，让 CSS 更易维护、方便制作主题、扩充。Less 可以运行在 Node 或浏览器端。</p><h3 id="Less安装"><a href="#Less安装" class="headerlink" title="Less安装"></a>Less安装</h3><h4 id="通过-npm-安装"><a href="#通过-npm-安装" class="headerlink" title="通过 npm 安装"></a>通过 <a href="https://www.npmjs.org/">npm</a> 安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install less -g</span><br></pre></td></tr></table></figure><blockquote><p>-g:表示全局安装</p></blockquote><p>若想安装特定版本号可以在less后加上@+版本号</p><h3 id="Less转换为CSS"><a href="#Less转换为CSS" class="headerlink" title="Less转换为CSS"></a>Less转换为CSS</h3><p>less是没有办法直接使用在浏览器上面的，只有css才能直接使用到浏览器的上面。所以我们要把less转化成css。</p><ol><li>通用方式</li></ol><ul><li>新建一个less文件（a.less）<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@color:</span> blue; </span><br><span class="line"><span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="variable">@color</span>; </span><br><span class="line"><span class="attribute">background-color</span>: <span class="variable">@color</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>打开cmd，cd到less文件目录，输入以下命令：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lessc <span class="selector-tag">a</span><span class="selector-class">.less</span> <span class="selector-tag">a</span><span class="selector-class">.css</span></span><br></pre></td></tr></table></figure>  这样a.less文件的代码就会编译为css代码并保存到a.css文件中<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: blue; </span><br><span class="line"><span class="attribute">background-color</span>: blue; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>在VSCode中使用less（可以使用插件）</li></ol><ul><li>在vscode拓展插件中搜索Easy LESS点击安装即可。</li><li>安装后只要新建了一个.less后缀的文件，软件就会在同一目录下自动创建一个.css的文件，并且在.less文件编写代码并按下Ctrl+S保存的同时，css文件会编译生产相应的css代码。</li></ul><h2 id="变量（Variables）"><a href="#变量（Variables）" class="headerlink" title="变量（Variables）"></a>变量（Variables）</h2><p>使用变量可以方便修改属性值。<br><strong>在Less中可以使用变量：</strong><br>表达式：@+变量名 : 属性值</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@color:</span> <span class="number">#1a2a3a</span>; <span class="comment">// 变量声明 </span></span><br><span class="line"><span class="selector-tag">body</span> &#123; <span class="comment">// 使用变量 </span></span><br><span class="line"><span class="attribute">background-color</span>: <span class="variable">@color</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">div</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="variable">@color</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">body</span> &#123; </span><br><span class="line"> <span class="attribute">background-color</span>: <span class="number">#1a2a3a</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">div</span> &#123; </span><br><span class="line"> <span class="attribute">color</span>: <span class="number">#1a2a3a</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注释（Comments）"><a href="#注释（Comments）" class="headerlink" title="注释（Comments）"></a>注释（Comments）</h2><p>在less中可以进行代码注释，方式有<strong>单行注释（&#x2F;&#x2F;）</strong>、<strong>多行注释（&#x2F; *  * &#x2F;）</strong>两种，但是只有<code>多行注释</code>才能在编译后的文件中出现。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@color:</span> <span class="number">#1a2a3a</span>; </span><br><span class="line"><span class="selector-tag">body</span> &#123; </span><br><span class="line"><span class="comment">// 使用变量 </span></span><br><span class="line"><span class="comment">/*使用变量*/</span> </span><br><span class="line"><span class="attribute">background-color</span>: <span class="variable">@color</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123; </span><br><span class="line"><span class="comment">/*使用变量*/</span> </span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#1a2a3a</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="混合（Mixins）"><a href="#混合（Mixins）" class="headerlink" title="混合（Mixins）"></a>混合（Mixins）</h2><p>混合（Mixin）是一种将一组属性从一个规则集包含（或混入）到另一个规则集的方法。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.length</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">100px</span>; </span><br><span class="line"><span class="attribute">height</span>: <span class="number">200px</span>; </span><br><span class="line">&#125;</span><br><span class="line"># <span class="selector-tag">apple</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#222</span>; <span class="selector-class">.length</span>(); </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.happy</span> <span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: blue; </span><br><span class="line"><span class="selector-class">.length</span>(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-class">.length</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">100px</span>; </span><br><span class="line"><span class="attribute">height</span>: <span class="number">200px</span>; </span><br><span class="line">&#125;</span><br><span class="line"># apple <span class="selector-tag">a</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#222</span>; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">100px</span>; </span><br><span class="line"><span class="attribute">height</span>: <span class="number">200px</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.happy</span> <span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: blue; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">100px</span>; </span><br><span class="line"><span class="attribute">height</span>: <span class="number">200px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="嵌套（Nesting）"><a href="#嵌套（Nesting）" class="headerlink" title="嵌套（Nesting）"></a>嵌套（Nesting）</h2><p>Less 提供了使用嵌套（nesting）代替层叠或与层叠结合使用的能力。</p><h3 id="1-选择器嵌套"><a href="#1-选择器嵌套" class="headerlink" title="1. 选择器嵌套"></a>1. 选择器嵌套</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123; </span><br><span class="line"><span class="selector-tag">h1</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#333</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">1.4px</span>; </span><br><span class="line"><span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#999</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">h1</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#333</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">1.4px</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#999</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-父选择器"><a href="#2-父选择器" class="headerlink" title="2. 父选择器 &amp;"></a>2. 父选择器 <code>&amp;</code></h3><p>在嵌套 CSS 规则时，有时也需要直接使用嵌套外层的父选择器，例如，当给某个元素设定 <code>hover</code> 样式时，或者当 <code>body</code> 元素有某个 classname 时，可以用 <code>&amp;</code> 代表嵌套规则外层的父选择器。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">font-weight</span>: bold; </span><br><span class="line"><span class="attribute">text-decoration</span>: none; </span><br><span class="line"><span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123; </span><br><span class="line"><span class="attribute">text-decoration</span>: underline; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">body</span><span class="selector-class">.firefox</span> <span class="selector-tag">&amp;</span> &#123; </span><br><span class="line"><span class="attribute">font-weight</span>: normal; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">font-weight</span>: bold; </span><br><span class="line"><span class="attribute">text-decoration</span>: none; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123; </span><br><span class="line"><span class="attribute">text-decoration</span>: underline; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">body</span><span class="selector-class">.firefox</span> <span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">font-weight</span>: normal; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="规则嵌套和冒泡"><a href="#规则嵌套和冒泡" class="headerlink" title="@规则嵌套和冒泡"></a>@规则嵌套和冒泡</h3><p>@ 规则（例如 <code>@media</code> 或 <code>@supports</code>）可以与选择器以相同的方式进行嵌套。@ 规则会被放在前面，同一规则集中的其它元素的相对顺序保持不变。这叫做冒泡（bubbling）。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.component</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">300px</span>; </span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">width</span>: <span class="number">567px</span>) &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">600px</span>; </span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">resolution</span>: <span class="number">192dpi</span>) &#123; </span><br><span class="line"><span class="attribute">background-image</span>: url(<span class="string">/img/1.png</span>); </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">width</span>: <span class="number">1120px</span>) &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">400px</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-class">.component</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">300px</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">width</span>: <span class="number">567px</span>) &#123; </span><br><span class="line"><span class="selector-class">.component</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">600px</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">width</span>: <span class="number">567px</span>) <span class="keyword">and</span> (<span class="attribute">resolution</span>: <span class="number">192dpi</span>) &#123; </span><br><span class="line"><span class="selector-class">.component</span> &#123; </span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">/img/1.png</span>); </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">width</span>: <span class="number">1120px</span>) &#123; </span><br><span class="line"><span class="selector-class">.component</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">400px</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运算（Operations）"><a href="#运算（Operations）" class="headerlink" title="运算（Operations）"></a>运算（Operations）</h2><p>算术运算符 <code>+</code>、<code>-</code>、<code>*</code>、<code>/</code> 可以对任何数字、颜色或变量进行运算。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.class</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="variable">@width</span>; </span><br><span class="line"><span class="attribute">color</span>: <span class="variable">@color</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="variable">@width:</span> <span class="number">0.4</span> + <span class="number">0.4</span>; </span><br><span class="line"><span class="variable">@base:</span> <span class="number">0.1</span> ; </span><br><span class="line"><span class="variable">@sub:</span> <span class="variable">@width</span> - <span class="variable">@base</span>; </span><br><span class="line"><span class="variable">@color:</span> <span class="number">#121a2a</span> * <span class="number">2</span>; <span class="comment">// 颜色运算</span></span><br><span class="line"># <span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: <span class="variable">@color</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="variable">@sub</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.class</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">0.8</span>; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#243454</span>; </span><br><span class="line">&#125;</span><br><span class="line"># <span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#243454</span>; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">0.7</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="转义（Escaping）"><a href="#转义（Escaping）" class="headerlink" title="转义（Escaping）"></a>转义（Escaping）</h2><p>转义（Escaping）允许使用任意字符串作为属性或变量值，编译后会原样输出。<br>格式：<code>~&quot;(任意字符串)&quot;</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@min678:</span> <span class="string">~&quot;(min-width: 678px)&quot;</span>; </span><br><span class="line"><span class="selector-class">.element</span> &#123; </span><br><span class="line"><span class="keyword">@media</span> <span class="variable">@min678</span> &#123; </span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">0.8rem</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">678px</span>) &#123; </span><br><span class="line"><span class="selector-class">.element</span> &#123; </span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">0.8rem</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，从 Less 3.5 开始，可以简写为：<code>(任意字符串)</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@min678:</span> (<span class="attribute">min-width</span>: <span class="number">678px</span>); </span><br><span class="line"><span class="selector-class">.element</span> &#123; </span><br><span class="line"><span class="keyword">@media</span> <span class="variable">@min678</span> &#123; </span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">0.8rem</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 Less 3.5+ 版本中，许多以前需要“引号转义”的情况就不再需要了。</p><h2 id="函数（Functions）"><a href="#函数（Functions）" class="headerlink" title="函数（Functions）"></a>函数（Functions）</h2><p>Less 内置了多种函数用于转换颜色、处理字符串、算术运算等。这些函数在<a href="https://less.bootcss.com/functions/">Less 函数手册</a>中有详细介绍。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@width:</span> <span class="number">0.4</span>; </span><br><span class="line"><span class="variable">@color:</span> <span class="number">#1a2a3b</span>; </span><br><span class="line"><span class="selector-class">.class</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="built_in">percentage</span>(<span class="variable">@width</span>); </span><br><span class="line"><span class="attribute">color</span>: <span class="built_in">saturate</span>(<span class="variable">@color</span>, <span class="number">5%</span>); </span><br><span class="line"><span class="attribute">background-color</span>: <span class="built_in">spin</span>(<span class="built_in">lighten</span>(<span class="variable">@color</span>, <span class="number">25%</span>), <span class="number">8</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-class">.class</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">40%</span>; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#182a3d</span>; </span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#415e94</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>了解更多函数：**<a href="https://less.bootcss.com/functions/">函数手册</a>**</p><h2 id="命名空间和访问符"><a href="#命名空间和访问符" class="headerlink" title="命名空间和访问符"></a>命名空间和访问符</h2><p>为了组织结构、为了以后方便重用或分发、为了提供一些封装的目的，或是为了对混合（mixins）进行分组。可以将一些混合（mixins）和变量置于 <code>#bundle</code> 之下：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">bundle</span>() &#123;</span><br><span class="line"><span class="selector-class">.button</span> &#123; </span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid red; </span><br><span class="line"><span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123; </span><br><span class="line"><span class="attribute">background-color</span>: black; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"># <span class="selector-tag">header</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: blue; </span><br><span class="line"><span class="selector-id">#bundle</span><span class="selector-class">.button</span>(); <span class="comment">// 还可以书写为 #bundle &gt; .button 形式 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">header</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: blue; </span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid red; </span><br><span class="line">&#125;</span><br><span class="line"># <span class="selector-tag">header</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"><span class="attribute">background-color</span>: black; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="映射（Maps）"><a href="#映射（Maps）" class="headerlink" title="映射（Maps）"></a>映射（Maps）</h2><p>从 Less 3.5 版本开始，你还可以将混合（mixins）和规则集（rulesets）作为一组值的映射（map）使用。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@width:</span> <span class="number">0.4</span>; </span><br><span class="line"><span class="variable">@color:</span> blue;</span><br><span class="line"># <span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: <span class="variable">@color</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="variable">@width</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.span</span>&#123; </span><br><span class="line"><span class="attribute">color</span>: #div[color]; </span><br><span class="line"><span class="attribute">width</span>: #div[width]; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: blue; <span class="attribute">width</span>: <span class="number">0.4</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.span</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: blue; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">0.4</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="作用域（Scope）"><a href="#作用域（Scope）" class="headerlink" title="作用域（Scope）"></a>作用域（Scope）</h2><p>Less 中的作用域与 CSS 中的作用域非常类似。首先在本地查找变量和混合（mixins），如果找不到，则<strong>从“父”级作用域继承</strong>。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@width:</span> <span class="number">0.4</span>; </span><br><span class="line"><span class="variable">@color:</span> blue;</span><br><span class="line"># <span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="variable">@color:</span> white; </span><br><span class="line"><span class="selector-id">#header</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="variable">@color</span>; <span class="comment">// white </span></span><br><span class="line"><span class="attribute">width</span>: <span class="variable">@width</span>; <span class="comment">// 0.4 </span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">div</span> <span class="selector-id">#header</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: white; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">0.4</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与 CSS 自定义属性一样，混合（mixin）和变量的定义<strong>不必在引用之前事先定义</strong>。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.class</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="variable">@width</span>; </span><br><span class="line"><span class="attribute">color</span>: <span class="variable">@color</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="variable">@width:</span> <span class="number">0.4</span>; </span><br><span class="line"><span class="variable">@color:</span> blue;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.class</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">0.4</span>; </span><br><span class="line"><span class="attribute">color</span>: blue; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="导入（Importing）"><a href="#导入（Importing）" class="headerlink" title="导入（Importing）"></a>导入（Importing）</h2><p>可以通过<code>@import &quot;要导入的文件名（可以省略文件拓展名）&quot;</code>引用其他less文件中的内容，将其输出在同一个css文件中。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// _test2.less </span></span><br><span class="line"><span class="selector-tag">body</span>&#123; </span><br><span class="line"><span class="attribute">text-align</span>: center; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// test.less </span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;_test2&quot;</span>; <span class="comment">// 导入_test2.less文件内容 </span></span><br><span class="line"><span class="variable">@width:</span> <span class="number">0.4</span>; </span><br><span class="line"><span class="variable">@color:</span> <span class="number">#1a2a3b</span>; </span><br><span class="line"><span class="selector-class">.class</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="variable">@width</span>; </span><br><span class="line"><span class="attribute">color</span>: <span class="variable">@color</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">body</span> &#123; </span><br><span class="line"><span class="attribute">text-align</span>: center; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.class</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">0.4</span>; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#1a2a3b</span>; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Less 是一门 CSS 预处理语言，它扩充了 CSS 语言，增加了诸如变量、混合（mixin）、函数等功能，让 CSS 更易维护、方便制作主题、扩充。Less 可以运行在 Node 或浏览器端。</summary>
    
    
    
    <category term="前端" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CSS" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/CSS/"/>
    
    
    <category term="前端" scheme="https://fanxing28.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CSS" scheme="https://fanxing28.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>CSS预处理器 Sass(Scss)</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/CSS/%E3%80%90CSS%E3%80%91%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8%20Sass(Scss)/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/CSS/%E3%80%90CSS%E3%80%91%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8%20Sass(Scss)/</id>
    <published>2023-11-28T14:32:25.000Z</published>
    <updated>2023-12-02T12:30:23.332Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><h3 id="Sass是什么"><a href="#Sass是什么" class="headerlink" title="Sass是什么"></a>Sass是什么</h3><p>Sass (英文全称：Syntactically Awesome Stylesheets) 是一个最初由 Hampton Catlin 设计并由 Natalie Weizenbaum 开发的层叠样式表语言。Sass 是一个 CSS 预处理器，是 CSS 扩展语言，可以帮助我们减少 CSS 重复的代码，节省开发时间。<br>Sass 扩展了 CSS3，增加了规则、变量、混入、选择器、继承、内置函数等等特性。 Sass 生成良好格式化的 CSS 代码，易于组织和维护。 Sass 文件后缀为 $\color{red}{.scss}$。</p><h3 id="Scss是什么"><a href="#Scss是什么" class="headerlink" title="Scss是什么"></a>Scss是什么</h3><p>Scss 是 Sass 3 引入新的语法，是Sassy CSS的简写，是CSS3语法的超集。说白了Scss就是Sass的升级版，其语法完全兼容 CSS3，并且继承了 Sass 的强大功能。也就是说，任何标准的 CSS3 样式表都是具有相同语义的有效的 SCSS 文件。另外，SCSS 还能识别大部分 CSS hacks（一些 CSS 小技巧）和特定于浏览器的语法。<br>所有在 CSS 中正常工作的代码也能在 Scss 中正常工作。也就是说，对于一个 Sass 用户，只需要理解 Sass 扩展部分如何工作的，就能完全理解 Scss。大部分扩展，例如变量、parent references 和 指令都是一致的；<strong>唯一不同</strong>的是，SCSS $\color{red}{需要使用分号和花括号而不是换行和缩进}$。</p><h3 id="Scss-与-Sass异同"><a href="#Scss-与-Sass异同" class="headerlink" title="Scss 与 Sass异同"></a>Scss 与 Sass异同</h3><p>Sass 和 Scss 其实就是同一种东西，我们平时都称之为 <strong>Sass</strong>，两者之间不同之处主要有以下两点：</p><ol><li><strong>文件扩展名不同</strong>：Sass 是以<code>“.sass”</code>后缀为扩展名，而 Scss 是以<code>“.scss”</code>后缀为扩展名。</li><li><strong>语法书写方式不同</strong>：Sass 是以严格的缩进式语法规则来书写，不带大括号({})和分号(;)，而 Scss 的语法书写和我们的CSS 语法书写方式非常类似。<br>我们不妨来看看下面两段代码，这样会更加直观，更容易理解。<br><strong>Scss代码</strong><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 注</span></span><br><span class="line"><span class="comment">   释*/</span></span><br><span class="line"><span class="comment">// 注</span></span><br><span class="line"><span class="comment">// 释</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;base&quot;</span>;</span><br><span class="line"><span class="variable">$font-stack</span>:    Helvetica, sans-serif;</span><br><span class="line"><span class="variable">$primary-color</span>: <span class="number">#333</span>;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">font</span>: <span class="number">100%</span> <span class="variable">$font-stack</span>;</span><br><span class="line"><span class="attribute">color</span>: <span class="variable">$primary-color</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@mixin</span> alert &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.alert-warning</span> &#123;</span><br><span class="line">    <span class="keyword">@include</span> alert;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>Sass代码</strong><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 注</span></span><br><span class="line"><span class="comment">   释*/</span></span><br><span class="line"><span class="comment">// 注 释</span></span><br><span class="line"><span class="keyword">@import</span> base</span><br><span class="line"><span class="variable">$font-stack</span>:    Helvetica, sans-serif</span><br><span class="line"><span class="variable">$primary-color</span>: <span class="number">#333</span></span><br><span class="line">body</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">100%</span> <span class="variable">$font-stack</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">$primary-color</span></span><br><span class="line">=alert </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#000000</span></span><br><span class="line">.alert-warning </span><br><span class="line">+alert</span><br></pre></td></tr></table></figure>编译为：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 这里只展示body中的代码 */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">100%</span> Helvetica, sans-serif;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="为什么使用-Sass"><a href="#为什么使用-Sass" class="headerlink" title="为什么使用 Sass?"></a>为什么使用 Sass?</h3><p>CSS 本身语法不够强大，导致重复编写一些代码，无法实现复用，而且在代码也不方便维护。 Sass 引入合理的样式复用机制，增加了规则、变量、混入、选择器、继承、内置函数等等特性。</p><h2 id="Sass-安装"><a href="#Sass-安装" class="headerlink" title="Sass 安装"></a>Sass 安装</h2><p>本章节我们主要介绍 Sass 的安装与使用。</p><h3 id="NPM-安装-推荐使用"><a href="#NPM-安装-推荐使用" class="headerlink" title="NPM 安装(推荐使用)"></a>NPM 安装(推荐使用)</h3><p>我们可以使用 npm（NPM 使用介绍）来安装 Sass。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g sass</span><br></pre></td></tr></table></figure><p><strong>注：</strong>国内 npm 建议使用淘宝镜像来安装</p><h3 id="Windows-上安装"><a href="#Windows-上安装" class="headerlink" title="Windows 上安装"></a>Windows 上安装</h3><p>我们可以使用 Windows 的包管理器 <a href="https://chocolatey.org/">Chocolatey</a> 来安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choco install sass</span><br></pre></td></tr></table></figure><h3 id="Mac-OS-X-Homebrew-安装"><a href="#Mac-OS-X-Homebrew-安装" class="headerlink" title="Mac OS X (Homebrew)安装"></a>Mac OS X (Homebrew)安装</h3><p>Mac OS 可以使用 <a href="https://brew.sh/">Homebrew</a> 包管理器来安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install sass/sass/sass</span><br></pre></td></tr></table></figure><p>官网安装流程： <a href="https://www.sass.hk/install/">安装Sass | Sass中文网</a></p><h2 id="Sass-转化为-CSS"><a href="#Sass-转化为-CSS" class="headerlink" title="Sass 转化为 CSS"></a>Sass 转化为 CSS</h2><h3 id="转化步骤"><a href="#转化步骤" class="headerlink" title="转化步骤"></a>转化步骤</h3><ol><li>首先创建.scss文件及其存放目录和css文件的存放目录</li><li>然后在.scss文件中书写sass代码</li><li>最后cd到.scss文件存放目录，在命令行输入<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass sass/test1.scss css/test1.css</span><br></pre></td></tr></table></figure>  或<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass sass/test1.scss:css/test1.css</span><br></pre></td></tr></table></figure><strong>注：</strong> sass&#x2F;test1.scss为sass代码存放目录及文件名；css&#x2F;test1.css为css代码存放目录及编译完成后css代码存放文件。<br>逆向操作，<strong>css文件转换为sass&#x2F;scss文件</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass-convert style.css style.sass sass-convert style.css style.scss</span><br></pre></td></tr></table></figure></li></ol><h3 id="自动编译"><a href="#自动编译" class="headerlink" title="自动编译"></a>自动编译</h3><p>每次修改sass代码都需要重新执行命令，非常的麻烦，所以下面讲述一种自动实时编译的方式。<br><strong>监视单个 Sass 文件</strong>(每次修改并保存时自动编译）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass --watch input.scss:output.css</span><br></pre></td></tr></table></figure><p>例：对当前文件夹下sass&#x2F;test1.scss监听,并自动编译生成css&#x2F;test1.css</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass --watch sass/test1.scss:css/test1.css</span><br></pre></td></tr></table></figure><p><strong>监视整个文件夹</strong></p><p>输入命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass --watch sass文件夹名:css文件夹名</span><br></pre></td></tr></table></figure><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass --watch sass:css</span><br></pre></td></tr></table></figure><p><strong>停止监视</strong><br>在命令行界面按下：Ctrl + C</p><h2 id="编译输出的CSS格式"><a href="#编译输出的CSS格式" class="headerlink" title="编译输出的CSS格式"></a>编译输出的CSS格式</h2><p>编译输出的CSS格式一共有四种：</p><ul><li>nested：嵌套（默认格式）</li><li>compact：紧凑</li><li>expanded：扩展</li><li>compressed：压缩<br>实例：<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sass </span></span><br><span class="line"><span class="selector-tag">ul</span>&#123; </span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">15px</span>; </span><br><span class="line"><span class="selector-tag">li</span>&#123; </span><br><span class="line"><span class="attribute">list-style</span>: none; </span><br><span class="line"><span class="attribute">line-height</span>: normal; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="nested：嵌套（默认格式）"><a href="#nested：嵌套（默认格式）" class="headerlink" title=":nested：嵌套（默认格式）"></a>:nested：嵌套（默认格式）</h4><p>在执行监测(编译)命令时，可以指定输出格式为<code>nested</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass --watch sass:css --style nested</span><br></pre></td></tr></table></figure><p>输出css格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123; </span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">15px</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123; </span><br><span class="line"><span class="attribute">list-style</span>: none; </span><br><span class="line"><span class="attribute">line-height</span>: normal; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="compact：紧凑"><a href="#compact：紧凑" class="headerlink" title=":compact：紧凑"></a>:compact：紧凑</h4><p>紧凑格式占用的空间要小得多，每个CSS选择符定义只占用一行。<br>要将CSS输出设置为紧凑格式，可以使用如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass --watch sass:css --style compact</span><br></pre></td></tr></table></figure><p>输出css格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123; </span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">15px</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123; </span><br><span class="line"><span class="attribute">list-style</span>: none; </span><br><span class="line"><span class="attribute">line-height</span>: normal; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="expanded：扩展"><a href="#expanded：扩展" class="headerlink" title=":expanded：扩展"></a>:expanded：扩展</h4><p>展开格式看起来像开发人员手写的格式。<br>要将CSS输出设置为展开格式，可以使用如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass --watch sass:css --style expanded</span><br></pre></td></tr></table></figure><p>输出css格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123; </span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">15px</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123; </span><br><span class="line"><span class="attribute">list-style</span>: none; </span><br><span class="line"><span class="attribute">line-height</span>: normal; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="compressed：压缩"><a href="#compressed：压缩" class="headerlink" title=":compressed：压缩"></a>:compressed：压缩</h4><p>压缩格式占用尽可能少的空间，选择符定义不换行，文件最小，一般用于生产版本。<br>要将CSS输出设置为压缩格式，可以使用如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass --watch sass:css --style compressed</span><br></pre></td></tr></table></figure><p>输出css格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span>&#123;</span><br><span class="line"><span class="attribute">font-size</span>:<span class="number">15px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line"><span class="attribute">list-style</span>:none;</span><br><span class="line"><span class="attribute">line-height</span>:normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Sass-语法"><a href="#Sass-语法" class="headerlink" title="Sass 语法"></a>Sass 语法</h2><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>scss文件中</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 多行注释</span></span><br><span class="line"><span class="comment">会包含在没有压缩之后的css里面</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="comment">// 单行注释（不会出现在css里面）</span></span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@charset</span> <span class="string">&quot;UTF-8&quot;</span>; </span><br><span class="line"><span class="comment">/* 多行注释</span></span><br><span class="line"><span class="comment">会包含在没有压缩之后的css里面</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>注：</strong> 如果编译输出的CSS格式是<code>compressed：压缩</code>时，多行注释也不会再css文件中出现。<br>如果想要编译输出的CSS格式是<code>compressed：压缩</code>时，多行注释仍然在css文件中出现。<br>scss文件</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 多行注释 */</span> </span><br><span class="line"><span class="comment">/*! 强制输出的注释内容 </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="selector-tag">ul</span>&#123; </span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">15px</span>; </span><br><span class="line"><span class="selector-tag">li</span>&#123; </span><br><span class="line"><span class="attribute">list-style</span>: none; </span><br><span class="line"><span class="attribute">line-height</span>: normal; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译后的css文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*! 强制输出的注释内容 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">ul</span>&#123;</span><br><span class="line"><span class="attribute">font-size</span>:<span class="number">15px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line"><span class="attribute">list-style</span>:none;</span><br><span class="line"><span class="attribute">line-height</span>:normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="变量"><a href="#变量" class="headerlink" title="变量$"></a>变量<code>$</code></h3><p>变量以<strong>美元符号</strong>开头，赋值方法与 CSS 属性的写法一样：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$color</span>:<span class="number">#000000</span>; <span class="comment">// 变量声明 </span></span><br><span class="line"><span class="variable">$highlight-color</span>: <span class="number">#F90</span>; </span><br><span class="line"><span class="variable">$highlight-border</span>: <span class="number">1px</span> solid <span class="variable">$highlight-color</span>; <span class="comment">// 将变量直接赋值给border属性 </span></span><br><span class="line"><span class="selector-tag">div</span>&#123; </span><br><span class="line"><span class="comment">// 变量引用 </span></span><br><span class="line"><span class="attribute">color</span>:<span class="variable">$color</span>; </span><br><span class="line"><span class="attribute">border</span>: <span class="variable">$highlight-border</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">div</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#000000</span>; </span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#F90</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>将局部变量转换为全局变量可以添加 <code>!global</code> 声明：</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">main</span> &#123;</span><br><span class="line"><span class="variable">$width</span>: <span class="number">5em</span> !global; <span class="attribute">width</span>: <span class="variable">$width</span>; </span><br><span class="line">&#125;</span><br><span class="line"># sidebar &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="variable">$width</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"># <span class="selector-tag">main</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">5em</span>; </span><br><span class="line">&#125;</span><br><span class="line"># sidebar &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">5em</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="嵌套"><a href="#嵌套" class="headerlink" title="嵌套"></a>嵌套</h3><p>Sass支持选择器及属性嵌套，可以避免代码的重复书写。</p><h4 id="1-选择器嵌套"><a href="#1-选择器嵌套" class="headerlink" title="1. 选择器嵌套"></a>1. 选择器嵌套</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123; </span><br><span class="line"><span class="selector-tag">h1</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#333</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">1.4px</span>; </span><br><span class="line"><span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#999</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">h1</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#333</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">1.4px</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#999</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-父选择器"><a href="#2-父选择器" class="headerlink" title="2. 父选择器 &amp;"></a>2. 父选择器 <code>&amp;</code></h4><p>在嵌套 CSS 规则时，有时也需要直接使用嵌套外层的父选择器，例如，当给某个元素设定 <code>hover</code> 样式时，或者当 <code>body</code> 元素有某个 classname 时，可以用 <code>&amp;</code> 代表嵌套规则外层的父选择器。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">font-weight</span>: bold; </span><br><span class="line"><span class="attribute">text-decoration</span>: none; </span><br><span class="line">&amp;<span class="selector-pseudo">:hover</span> &#123; </span><br><span class="line"><span class="attribute">text-decoration</span>: underline; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">body</span><span class="selector-class">.firefox</span> &amp; &#123; </span><br><span class="line"><span class="attribute">font-weight</span>: normal; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">font-weight</span>: bold; </span><br><span class="line"><span class="attribute">text-decoration</span>: none; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123; </span><br><span class="line"><span class="attribute">text-decoration</span>: underline; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">body</span><span class="selector-class">.firefox</span> <span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">font-weight</span>: normal; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-属性嵌套"><a href="#3-属性嵌套" class="headerlink" title="3. 属性嵌套"></a>3. 属性嵌套</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123; </span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid; </span><br><span class="line"><span class="selector-id">#ccc</span> &#123; </span><br><span class="line"><span class="attribute">left</span>: <span class="number">0px</span>; </span><br><span class="line"><span class="attribute">right</span>: <span class="number">0px</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">div</span> &#123; </span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>; </span><br><span class="line"><span class="attribute">border-left</span>: <span class="number">0px</span>; </span><br><span class="line"><span class="attribute">border-right</span>: <span class="number">0px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插值语句"><a href="#插值语句" class="headerlink" title="插值语句 #{}"></a>插值语句 <code>#&#123;&#125;</code></h3><p>通过 <code>#&#123;&#125;</code> 插值语句可以在选择器或属性名中使用变量：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$name</span>: foo; </span><br><span class="line"><span class="variable">$attr</span>: border; </span><br><span class="line"><span class="selector-tag">p</span>.#&#123;<span class="variable">$name</span>&#125; &#123; </span><br><span class="line">#&#123;<span class="variable">$attr</span>&#125;-<span class="attribute">color</span>: blue; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.foo</span> &#123; </span><br><span class="line"><span class="attribute">border-color</span>: blue; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>Sass支持 7 种主要的数据类型：</p><ul><li>Number 类型（数字类型）：<code>1, 2, 13, 10px</code></li><li>String 类型（字符串类型）：有引号字符串与无引号字符串，<code>&quot;foo&quot;, &#39;bar&#39;, baz</code></li><li>Colors类型（颜色类型）：<code>blue, #04a3f9, rgba(255,0,0,0.5)</code></li><li>Boolean 类型（布尔类型）：<code>true, false</code></li><li>空值（Null）：<code>null</code></li><li>Lists 类型（列表类型）：用空格或逗号作分隔符，<code>1.5em 1em 0 2em, Helvetica, Arial, sans-serif</code></li><li>Maps类型，相当于 JavaScript 的 object，<code>(key1: value1, key2: value2)</code><br>Sass也支持其他 CSS 属性值，比如 Unicode 字符集，或 <code>!important</code> 声明。然而Sass 不会特殊对待这些属性值，一律视为无引号字符串。</li></ul><h3 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h3><h4 id="数字运算"><a href="#数字运算" class="headerlink" title="数字运算"></a>数字运算</h4><p>Sass支持数字的加减乘除、取整等运算 (<code>+, -, *, /, %</code>)，如果必要会在不同单位间转换值。<br>关系运算 <code>&lt;, &gt;, &lt;=, &gt;=</code> 也可用于数字运算，相等运算 <code>==, !=</code>  可用于所有数据类型。<br><strong>实例：</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">1</span> + <span class="number">50px</span>; </span><br><span class="line"><span class="attribute">height</span>: <span class="number">50</span> * <span class="number">2px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">51px</span>; </span><br><span class="line"><span class="attribute">height</span>: <span class="number">100px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>除法运算</strong><br>以下三种情况 <code>/</code> 将被视为除法运算符号：</p><ul><li>如果值，或值的一部分，是变量或者函数的返回值</li><li>如果值被圆括号包裹</li><li>如果值是算数表达式的一部分<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="attribute">font</span>: <span class="number">20px</span>/<span class="number">4px</span>;  </span><br><span class="line"><span class="variable">$width</span>: <span class="number">100px</span>; </span><br><span class="line"><span class="attribute">width</span>: <span class="variable">$width</span>/<span class="number">2</span>;  </span><br><span class="line"><span class="attribute">width</span>: <span class="built_in">round</span>(<span class="number">2.5</span>)/<span class="number">2</span>;  </span><br><span class="line"><span class="attribute">height</span>: (<span class="number">50px</span>/<span class="number">2</span>);  </span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">4px</span> + <span class="number">18px</span>/<span class="number">2px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>编译为：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="attribute">font</span>: <span class="number">20px</span>/<span class="number">4px</span>; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">50px</span>; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">1.5</span>; </span><br><span class="line"><span class="attribute">height</span>: <span class="number">25px</span>; </span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">13px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="颜色值运算"><a href="#颜色值运算" class="headerlink" title="颜色值运算"></a>颜色值运算</h4><p>颜色值的运算是分段计算进行的，也就是分别计算红色，绿色，以及蓝色的值：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#010203</span> + <span class="number">#040506</span>; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#010203</span> * <span class="number">2</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>计算 <code>01 + 04 = 05</code> <code>02 + 05 = 07</code> <code>03 + 06 = 09</code>，<code>01 * 2 = 02</code> <code>02 * 2 = 04</code> <code>03 * 2 = 06</code><br>然后编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#050709</span>; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#020406</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="字符串运算"><a href="#字符串运算" class="headerlink" title="字符串运算"></a>字符串运算</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="attribute">content</span>: <span class="string">&#x27;sa&#x27;</span> + <span class="string">&#x27;sb&#x27;</span>; </span><br><span class="line"><span class="attribute">cursor</span>: <span class="string">&#x27;sa&#x27;</span> - <span class="string">&#x27;sb&#x27;</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="attribute">content</span>: <span class="string">&quot;sasb&quot;</span>; </span><br><span class="line"><span class="attribute">cursor</span>: <span class="string">&quot;sa&quot;</span>-<span class="string">&quot;sb&quot;</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="布尔运算"><a href="#布尔运算" class="headerlink" title="布尔运算"></a>布尔运算</h4><p>Sass支持布尔型的 <code>and</code> <code>or</code> 以及 <code>not</code> 运算。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="attribute">content</span>: <span class="string">&#x27;sa&#x27;</span> and <span class="string">&#x27;sb&#x27;</span>; </span><br><span class="line"><span class="attribute">cursor</span>: <span class="string">&#x27;sb&#x27;</span> or <span class="number">1</span>; </span><br><span class="line"><span class="attribute">right</span>: <span class="number">1</span> not <span class="number">2</span>; </span><br><span class="line"><span class="attribute">clear</span>: <span class="string">&#x27;sa&#x27;</span> or <span class="string">&#x27;sb&#x27;</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="attribute">content</span>: <span class="string">&quot;sb&quot;</span>; </span><br><span class="line"><span class="attribute">cursor</span>: <span class="string">&quot;sb&quot;</span>; </span><br><span class="line"><span class="attribute">right</span>: <span class="number">1</span> false; </span><br><span class="line"><span class="attribute">clear</span>: <span class="string">&quot;sa&quot;</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="数组运算"><a href="#数组运算" class="headerlink" title="数组运算"></a>数组运算</h4><p>数组不支持任何运算方式</p><h3 id="混合-Mixins"><a href="#混合-Mixins" class="headerlink" title="混合-Mixins"></a>混合-Mixins</h3><p>sass中使用@mixin声明混合，可以传递参数，参数名以$符号开始，mixin可以传入参数，多个参数以逗号分开，也可以给参数设置默认值。<br>mixin是可以重用的一组CSS声明。mixin有助于减少重复代码，只需声明一次，就可在文件中引用。mixin类似变量，不同的是变量存储值，mixin存储一组css声明。<br><strong>表达式</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> 名字(参数<span class="number">1</span>,参数<span class="number">2</span>…)&#123;</span><br><span class="line">… </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用方式：使用<code>@include</code>指令后跟mixin的名称<br><strong>实例：</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> alert (<span class="variable">$text-color</span>, <span class="variable">$background</span>) &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="variable">$text-color</span>; </span><br><span class="line"><span class="attribute">background-color</span>: <span class="variable">$background</span>; </span><br><span class="line"><span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="built_in">darken</span>(<span class="variable">$text-color</span>, <span class="number">10%</span>); </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.alert-warning</span> &#123; </span><br><span class="line"><span class="keyword">@include</span> alert(<span class="number">#555555</span>,<span class="number">#c03737</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-class">.alert-warning</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#555555</span>; </span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#c03737</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.alert-warning</span> <span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#3c3c3c</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="控制语句"><a href="#控制语句" class="headerlink" title="控制语句"></a>控制语句</h3><p>Sass 提供了一些基础的控制指令，比如在满足一定条件时引用样式，或者设定范围重复输出格式。控制指令是一种高级功能，日常编写过程中并不常用到，主要与混合指令 (mixin) 配合使用。</p><h4 id="if"><a href="#if" class="headerlink" title="@if"></a>@if</h4><p><strong>表达式</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@if</span> 条件 &#123; … &#125;</span><br></pre></td></tr></table></figure><p>当 <code>@if</code> 的表达式返回值不是 <code>false</code> 或者 <code>null</code> 时，条件成立，输出 <code>&#123;&#125;</code> 内的代码：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="keyword">@if</span> <span class="number">1</span> + <span class="number">1</span> == <span class="number">2</span> &#123; </span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid; </span><br><span class="line">&#125; <span class="keyword">@if</span> <span class="number">5</span> &lt; <span class="number">3</span> &#123; </span><br><span class="line"><span class="attribute">border</span>: <span class="number">2px</span> dotted; </span><br><span class="line">&#125; <span class="keyword">@if</span> null &#123; </span><br><span class="line"><span class="attribute">border</span>: <span class="number">3px</span> double; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>@if</code> 声明后面可以跟多个 <code>@else if</code> 声明，或者一个 <code>@else</code> 声明。如果 <code>@if</code> 声明失败，Sass 将逐条执行 <code>@else if</code> 声明，如果全部失败，最后执行 <code>@else</code> 声明，例如：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$type</span>: monster; </span><br><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="keyword">@if</span> <span class="variable">$type</span> == ocean &#123; </span><br><span class="line"><span class="attribute">color</span>: blue; </span><br><span class="line">&#125; <span class="keyword">@else</span> if <span class="variable">$type</span> == matador &#123; </span><br><span class="line"><span class="attribute">color</span>: red; </span><br><span class="line">&#125; <span class="keyword">@else</span> if <span class="variable">$type</span> == monster &#123; </span><br><span class="line"><span class="attribute">color</span>: green; </span><br><span class="line">&#125; <span class="keyword">@else</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: black; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: green; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="for"><a href="#for" class="headerlink" title="@for"></a>@for</h4><p><strong>表达式</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@for</span> <span class="variable">$var</span> from &lt;开始值&gt; though &lt;结束值&gt; &#123; … &#125;</span><br></pre></td></tr></table></figure><p><code>@for</code> 指令可以在限制的范围内重复输出格式，每次按要求（变量的值）对输出结果做出变动。<br>这个指令包含两种格式：</p><ul><li><code>@for $var from &lt;start&gt; through &lt;end&gt;</code></li><li><code>@for $var from &lt;start&gt; to &lt;end&gt;</code><br>区别在于 <code>through</code> 与 <code>to</code> 的含义：<em>当使用 <code>through</code> 时，条件范围包含 <code>&lt;start&gt;</code> 与 <code>&lt;end&gt;</code> 的值，而使用 <code>to</code> 时条件范围只包含 <code>&lt;start&gt;</code> 的值不包含 <code>&lt;end&gt;</code> 的值</em>。另外，<code>$var</code> 可以是任何变量，比如 <code>$i</code>；<code>&lt;start&gt;</code> 和 <code>&lt;end&gt;</code> 必须是整数值。<br><strong>实例：</strong><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@for</span> <span class="variable">$j</span> from <span class="number">4</span> through <span class="number">6</span> &#123; </span><br><span class="line"><span class="selector-class">.item-</span>#&#123;<span class="variable">$j</span>&#125; &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">2em</span> * <span class="variable">$j</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>编译为：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-class">.item-4</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">8em</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.item-5</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">10em</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.item-6</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">12em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="each"><a href="#each" class="headerlink" title="@each"></a>@each</h4><p><strong>表达式</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@each</span> <span class="variable">$var</span> in <span class="variable">$list</span> &#123; … &#125;</span><br></pre></td></tr></table></figure><p><code>@each</code> 指令的格式是 <code>$var in &lt;list&gt;</code>, <code>$var</code> 可以是任何变量名，比如 <code>$length</code> 或者 <code>$name</code>，而 <code>&lt;list&gt;</code> 是一连串的值，也就是值列表。<code>@each</code> 将变量 <code>$var</code> 作用于值列表中的每一个项目，然后输出结果。<br><strong>实例：</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@each</span> <span class="variable">$fruit</span> in apple, banana, watermelon, strawberry &#123; </span><br><span class="line">.#&#123;<span class="variable">$fruit</span>&#125;-<span class="attribute">icon</span> &#123; </span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;/images/#&#123;$fruit&#125;.png&#x27;</span>); </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-class">.apple-icon</span> &#123; </span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;/images/apple.png&quot;</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.banana-icon</span> &#123; </span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;/images/banana.png&quot;</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.watermelon-icon</span> &#123; </span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;/images/watermelon.png&quot;</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.strawberry-icon</span> &#123; </span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;/images/strawberry.png&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="while"><a href="#while" class="headerlink" title="@while"></a>@while</h4><p><strong>表达式</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@while</span> 条件 &#123; … &#125;</span><br></pre></td></tr></table></figure><p><code>@while</code> 指令重复输出格式直到表达式返回结果为 <code>false</code>。这样可以实现比 <code>@for</code> 更复杂的循环，只是很少会用到。<br><strong>实例：</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$j</span>: <span class="number">8</span>; </span><br><span class="line"><span class="keyword">@while</span> <span class="variable">$j</span> &gt;<span class="number">0</span> &#123; </span><br><span class="line"><span class="selector-class">.item-</span>#&#123;<span class="variable">$j</span>&#125; &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">2em</span> * <span class="variable">$j</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="variable">$j</span>: <span class="variable">$j</span> - <span class="number">3</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-class">.item-8</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">16em</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.item-5</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">10em</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.item-2</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">4em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Partials与-import"><a href="#Partials与-import" class="headerlink" title="Partials与@import"></a>Partials与@import</h3><h4 id="import"><a href="#import" class="headerlink" title="@import"></a>@import</h4><p>Sass 可以帮助我们减少 CSS 重复的代码，节省开发时间。<br>我们可以安装不同的属性来创建一些代码文件，如：变量定义的文件、颜色相关的文件、字体相关的文件等。</p><h4 id="Sass-导入文件"><a href="#Sass-导入文件" class="headerlink" title="Sass 导入文件"></a>Sass 导入文件</h4><p>类似 CSS，Sass 支持 <strong>@import</strong> 指令。<br>@import 指令可以让我们导入其他文件等内容。<br>CSS @import 指令在每次调用时，都会创建一个额外的 HTTP 请求。但，Sass @import 指令将文件包含在 CSS 中，不需要额外的 HTTP 请求。<br>Sass @import 指令语法如下：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> filename; <span class="comment">// 例： @import &quot;base&quot;;</span></span><br></pre></td></tr></table></figure><p><strong>注意：包含文件时不需要指定文件后缀</strong>，Sass 会自动添加后缀 .scss。</p><h4 id="局部文件-Partial"><a href="#局部文件-Partial" class="headerlink" title="局部文件(Partial)"></a>局部文件(Partial)</h4><p>Sass源文件中可以通过<code>@import</code>指令导入其他Sass源文件，被导入的文件就是局部文件，局部文件让Sass模块化编写更加容易。<br>如果一个目录正在被Sass程序监测，目录下的所有scss&#x2F;sass源文件都会被编译，但通常不希望局部文件被编译，因为局部文件是用来被导入到其他文件的。如果不想局部文件被编译，文件名可以以下划线 （ _ ）开头。<br><strong>实例：</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// _base.scss文件 </span></span><br><span class="line"><span class="selector-tag">body</span> &#123; </span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>; </span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// test1.scss文件 </span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;base&quot;</span>;</span><br><span class="line"><span class="keyword">@mixin</span> alert (<span class="variable">$text-color</span>, <span class="variable">$background</span>) &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="variable">$text-color</span>; </span><br><span class="line"><span class="attribute">background-color</span>: <span class="variable">$background</span>; </span><br><span class="line"><span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="built_in">darken</span>(<span class="variable">$text-color</span>, <span class="number">10%</span>); </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.alert-warning</span> &#123; </span><br><span class="line"><span class="keyword">@include</span> alert(<span class="number">#555555</span>, <span class="number">#c03737</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-tag">body</span> &#123; </span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>; </span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.alert-warning</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#555555</span>; </span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#c03737</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.alert-warning</span> <span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: <span class="number">#3c3c3c</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p><strong>表达式</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@function</span> 名称 (参数<span class="number">1</span>,参数<span class="number">2</span>) &#123; … &#125;</span><br></pre></td></tr></table></figure><p>Sass 支持自定义函数，并能在任何属性值中使用：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$grid-width</span>: <span class="number">40px</span>; </span><br><span class="line"><span class="variable">$gutter-width</span>: <span class="number">10px</span>;</span><br><span class="line"><span class="keyword">@function</span> grid-width(<span class="variable">$n</span>) &#123; </span><br><span class="line"><span class="keyword">@return</span> <span class="variable">$n</span> * <span class="variable">$grid-width</span> + (<span class="variable">$n</span> - <span class="number">1</span>) * <span class="variable">$gutter-width</span>; </span><br><span class="line">&#125;</span><br><span class="line"># sidebar &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="built_in">grid-width</span>(<span class="number">5</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"># sidebar &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">240px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与 mixin 相同，也可以传递若干个全局变量给函数作为参数。一个函数可以含有多条语句，需要调用 <code>@return</code> 输出结果。自定义的函数也可以使用关键词参数，上面的例子还可以这样写：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># sidebar &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="built_in">grid-width</span>(<span class="variable">$n</span>: <span class="number">5</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>建议在自定义函数前添加前缀避免命名冲突，其他人阅读代码时也会知道这不是 Sass 或者 CSS 的自带功能。自定义函数与 mixin 相同，都支持 variable arguments</p><h3 id="Sass-颜色函数"><a href="#Sass-颜色函数" class="headerlink" title="Sass 颜色函数"></a>Sass 颜色函数</h3><p>Sass 颜色函数可以分为三个部分：颜色设置、颜色获取以及颜色操作。</p><h4 id="Sass-颜色设置"><a href="#Sass-颜色设置" class="headerlink" title="Sass 颜色设置"></a>Sass 颜色设置</h4><table><thead><tr><th>函数</th><th>描述 &amp; 实例</th></tr></thead><tbody><tr><td>rgb(<em>red</em>, <em>green</em>, <em>blue</em>)</td><td>创建一个 Red-Green-Blue (RGB) 色。其中 R 是 “red” 表示红色，而 G 是 “green” 绿色，B 是 “blue” 蓝色。</td></tr><tr><td></td><td><strong>实例:</strong> rgb(0, 0, 255);</td></tr><tr><td>rgba(<em>red</em>, <em>green</em>, <em>blue</em>, <em>alpha</em>)</td><td>根据红、绿、蓝和透明度值创建一个颜色。</td></tr><tr><td></td><td><strong>实例:</strong> rgba(0, 0, 255, 0.3);</td></tr><tr><td>hsl(<em>hue</em>, <em>saturation</em>, <em>lightness</em>)</td><td>通过色相（hue）、饱和度(saturation)和亮度（lightness）的值创建一个颜色。</td></tr><tr><td></td><td><strong>实例:</strong> hsl(120, 100%, 50%); &#x2F;&#x2F; 绿色                                                                     hsl(120, 100%, 75%); &#x2F;&#x2F; 浅绿色</td></tr><tr><td>hsla(<em>hue</em>, <em>saturation</em>, <em>lightness</em>, <em>alpha</em>)</td><td>通过色相（hue）、饱和度(saturation)、亮度（lightness）和透明（alpha）的值创建一个颜色。</td></tr><tr><td></td><td><strong>实例:</strong> hsl(120, 100%, 50%, 0.3); &#x2F;&#x2F; 绿色带有透明度                                                  hsl(120, 100%, 75%, 0.3); &#x2F;&#x2F; 浅绿色带有透明度</td></tr><tr><td>grayscale(<em>color</em>)</td><td>将一个颜色变成灰色，相当于 desaturate( color,100%)。</td></tr><tr><td></td><td><strong>实例:</strong> grayscale(#7fffd4); 结果: #c6c6c6</td></tr><tr><td>complement(<em>color</em>)</td><td>返回一个补充色，相当于adjust-hue($color,180deg)。</td></tr><tr><td></td><td><strong>实例:</strong> complement(#7fffd4); 结果: #ff7faa</td></tr><tr><td>invert(<em>color</em>, <em>weight</em>)</td><td>返回一个反相色，红、绿、蓝色值倒过来，而透明度不变。</td></tr><tr><td></td><td><strong>实例:</strong> invert(white); 结果: black</td></tr></tbody></table><h3 id="media"><a href="#media" class="headerlink" title="@media"></a>@media</h3><p>Sass 中 <code>@media</code> 指令与 CSS 中用法一样，只是增加了一点额外的功能：允许其在 CSS 规则中嵌套。如果 <code>@media</code> 嵌套在 CSS 规则内，编译时，<code>@media</code> 将被编译到文件的最外层，包含嵌套的父选择器。这个功能让 <code>@media</code> 用起来更方便，不需要重复使用选择器，也不会打乱 CSS 的书写流程。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.component</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">300px</span>; </span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">width</span>: <span class="number">567px</span>) &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">600px</span>; </span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">resolution</span>: <span class="number">192dpi</span>) &#123; </span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">url</span>(/img/<span class="number">1</span>.png); </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">width</span>: <span class="number">1120px</span>) &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">400px</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-class">.component</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">300px</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">width</span>: <span class="number">567px</span>) &#123; </span><br><span class="line"><span class="selector-class">.component</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">600px</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">width</span>: <span class="number">567px</span>) <span class="keyword">and</span> (<span class="attribute">resolution</span>: <span class="number">192dpi</span>) &#123; </span><br><span class="line"><span class="selector-class">.component</span> &#123; </span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">/img/1.png</span>); </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">width</span>: <span class="number">1120px</span>) &#123; </span><br><span class="line"><span class="selector-class">.component</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">400px</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="继承（-extend）"><a href="#继承（-extend）" class="headerlink" title="继承（@extend）"></a>继承（@extend）</h3><p>sass中，选择器继承可以让选择器继承另一个选择器的所有样式，并联合声明。使用选择器的继承，要使用关键词@extend，后面紧跟需要继承的选择器。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.class1</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">200px</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.class2</span> &#123; </span><br><span class="line"><span class="keyword">@extend</span> .class1; </span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#000</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-class">.class1</span>, <span class="selector-class">.class2</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">200px</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.class2</span> &#123; </span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#000</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>.class2</code>不仅会继承<code>.class1</code>自身的所有样式，也会继承任何跟<code>.class1</code>有关的组合选择器样式，实例如下：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.class1</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">200px</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.class1</span> <span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: white; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.class2</span> &#123; </span><br><span class="line"><span class="keyword">@extend</span> .class1; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span> </span><br><span class="line"><span class="selector-class">.class1</span>, <span class="selector-class">.class2</span> &#123; </span><br><span class="line"><span class="attribute">width</span>: <span class="number">200px</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.class1</span> <span class="selector-tag">a</span>, <span class="selector-class">.class2</span> <span class="selector-tag">a</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: white; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="警告与错误"><a href="#警告与错误" class="headerlink" title="警告与错误"></a>警告与错误</h3><p>当错误使用函数或mixins时可以看到警告或错误提示信息</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$color</span>: ( light:<span class="number">#ffffff</span>, dark:<span class="number">#000000</span> );</span><br><span class="line"><span class="keyword">@function</span> <span class="attribute">color</span>(<span class="variable">$key</span>) &#123; </span><br><span class="line"><span class="keyword">@if</span> <span class="keyword">not</span> map-has-key(<span class="variable">$colors</span>, <span class="variable">$key</span>) &#123; </span><br><span class="line"><span class="keyword">@warn</span> <span class="string">&quot;在 $colors 里没找到 #&#123;$key&#125; 这个key&quot;</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@return</span> map-get(<span class="variable">$colors</span>, <span class="variable">$key</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">body</span> &#123; </span><br><span class="line"><span class="attribute">background-color</span>: <span class="built_in">color</span>(gray); </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 在命令行窗口显示： </span></span><br><span class="line"><span class="comment">// WARNING：在 $colors 里没找到 gray 这个key</span></span><br><span class="line"><span class="comment">// 把@warn改为@error，会在css文件中出现错误信息 </span></span><br></pre></td></tr></table></figure><h2 id="了解更多"><a href="#了解更多" class="headerlink" title="了解更多"></a>了解更多</h2><p>想更多更详细了解sass可以浏览：<br>官网：<a href="https://sass-lang.com/">Sass: Syntactically Awesome Style Sheets (sass-lang.com)</a><br>中文官网：<a href="https://www.sass.hk/docs/">Sass教程 Sass中文文档 | Sass中文网</a></p>]]></content>
    
    
    <summary type="html">Sass (英文全称：Syntactically Awesome Stylesheets) 是一个最初由 Hampton Catlin 设计并由 Natalie Weizenbaum 开发的层叠样式表语言。Sass 是一个 CSS 预处理器，是 CSS 扩展语言，可以帮助我们减少 CSS 重复的代码，节省开发时间。</summary>
    
    
    
    <category term="前端" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CSS" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/CSS/"/>
    
    
    <category term="前端" scheme="https://fanxing28.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CSS" scheme="https://fanxing28.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>事件（Event）</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/JavaScript/%E3%80%90JS%E3%80%91%E4%BA%8B%E4%BB%B6%EF%BC%88Event%EF%BC%89/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/JavaScript/%E3%80%90JS%E3%80%91%E4%BA%8B%E4%BB%B6%EF%BC%88Event%EF%BC%89/</id>
    <published>2023-11-28T14:32:25.000Z</published>
    <updated>2023-12-02T12:23:57.114Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-概念"><a href="#一-概念" class="headerlink" title="一. 概念"></a>一. 概念</h2><p>事件指的是用户和浏览器之间的交互行为。比如：点击按钮、关闭窗口、鼠标移动等。<br>我们可以为事件来绑定回调函数来响应事件。绑定事件的方式：</p><ol><li>可以在标签的事件属性中设置相应的JS代码。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;js代码。。。&quot;</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>可以通过为对象的指定事件属性设置回调函数的形式来处理事件。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;btn&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;       </span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><strong>执行事件的步骤</strong>：</li><li>获取事件源</li><li>注册事件（绑定事件）</li><li>添加事件处理程序（采取函数赋值形式）<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> a = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"> a.<span class="property">onclick</span>= <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;aaa&#x27;</span>);<span class="comment">// aaa</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="二-事件绑定"><a href="#二-事件绑定" class="headerlink" title="二. 事件绑定"></a>二. 事件绑定</h2><h3 id="1-DOM-0级-事件"><a href="#1-DOM-0级-事件" class="headerlink" title="(1) DOM 0级 事件"></a>(1) DOM 0级 事件</h3><p><strong>语法</strong>：事件源.on事件类型 &#x3D; 事件处理函数<br><strong>特点</strong>：同一个事件源的同一个事件类型只能绑定一个事件处理函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;!----分割线----&gt;</span><br><span class="line">div.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;绑定了一个点击事件&quot;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="2-DOM-2级-事件"><a href="#2-DOM-2级-事件" class="headerlink" title="(2) DOM 2级 事件"></a>(2) DOM 2级 事件</h3><p><strong>语法</strong>：事件源.addEventListener(‘事件类型’, 事件处理函数)<br><strong>特点</strong>：可以同一个事件源的同一个事件类型绑定多个事件处理函数，会按照顺序依次触发</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&lt;/div&gt; </span><br><span class="line">&lt;!----分割线----&gt;</span><br><span class="line">div.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;绑定一个点击事件&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="3-两种事件绑定的方式区别"><a href="#3-两种事件绑定的方式区别" class="headerlink" title="(3) 两种事件绑定的方式区别"></a>(3) 两种事件绑定的方式区别</h3><p><strong>DOM 0级 事件</strong>：同一个事件源的同一个事件类型只能绑定一个事件处理函数</p><blockquote><p>如果同一个事件源的同一个事件类型绑定多个事件处理函数则后面的处理函数会进行覆盖前面的处理函数</p></blockquote><p><strong>DOM 2级 事件</strong>：可以同一个事件源的同一个事件类型绑定多个事件处理函数，会<strong>按照顺序依次触发</strong></p><h2 id="三-事件解绑"><a href="#三-事件解绑" class="headerlink" title="三. 事件解绑"></a>三. 事件解绑</h2><h3 id="1-解绑dom0级事件"><a href="#1-解绑dom0级事件" class="headerlink" title="(1) 解绑dom0级事件"></a>(1) 解绑dom0级事件</h3><p><strong>语法</strong>：事件源.on事件类型 &#x3D; null</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;button&gt;解绑dom0级事件&lt;/button&gt;</span><br><span class="line">&lt;!----分割线----&gt;</span><br><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">div.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;绑定0级事件&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;button&quot;</span>);</span><br><span class="line">btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    div.<span class="property">onclick</span> = <span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="2-解绑dom2级事件"><a href="#2-解绑dom2级事件" class="headerlink" title="(2) 解绑dom2级事件"></a>(2) 解绑dom2级事件</h3><p><strong>语法</strong>：事件源.removeEventListener(‘事件类型’, 要解绑的事件处理函数)<br><strong>注意</strong>：如果用dom2级解绑， 绑定的时候的事件处理函数必须要在外面单独定义，用函数名的形式进行绑定</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;button&gt;解绑dom2级事件&lt;/button&gt;</span><br><span class="line">&lt;!----分割线----&gt;</span><br><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> clickFn = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;绑定dom2级事件&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line">div.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, clickFn);</span><br><span class="line"><span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;button&quot;</span>);</span><br><span class="line">btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    div.<span class="title function_">removeEventListener</span>(<span class="string">&quot;click&quot;</span>, clickFn);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="四-常见的鼠标事件"><a href="#四-常见的鼠标事件" class="headerlink" title="四. 常见的鼠标事件"></a>四. 常见的鼠标事件</h2><table><thead><tr><th>鼠标事件</th><th>描述</th></tr></thead><tbody><tr><td>onclick</td><td>鼠标点击左键触发</td></tr><tr><td>ondblclick</td><td>鼠标左键双击触发</td></tr><tr><td>oncontextmenu</td><td>鼠标右键单击触发</td></tr><tr><td>onmouseover</td><td>鼠标移入触发</td></tr><tr><td>onmouseout</td><td>鼠标移出触发</td></tr><tr><td>onmouseenter</td><td>鼠标移入事件</td></tr><tr><td>onmousele</td><td>鼠标移出事件</td></tr><tr><td>onfocus</td><td>获得鼠标焦点触发</td></tr><tr><td>onblur</td><td>失去鼠标焦点触发</td></tr><tr><td>onmousemove</td><td>鼠标移动触发</td></tr><tr><td>onmouseup</td><td>鼠标抬起触发</td></tr><tr><td>onmousedown</td><td>鼠标按下触发</td></tr><tr><td><strong>onmouseenter和onmouseleave</strong>与<strong>onmouseover和onmousemove</strong>的区别：</td><td></td></tr></tbody></table><ul><li>onmouseover 和 onmouseout 在鼠标移入到子元素上依然可以触发</li><li>onmouseenter 和 onmouseleave 在鼠标移入子元素的时候，不会触发</li></ul><h2 id="五-常见的键盘事件"><a href="#五-常见的键盘事件" class="headerlink" title="五. 常见的键盘事件"></a>五. 常见的键盘事件</h2><p><strong>键盘事件</strong></p><ul><li>可以给所有元素绑定键盘事件, 不是所有元素都能触发键盘事件</li><li>一般给 window&#x2F;document&#x2F;表单元素 绑定键盘元素</li><li>键盘事件不考虑中文</li></ul><table><thead><tr><th>键盘事件</th><th>描述</th></tr></thead><tbody><tr><td>onkeydown</td><td>键盘按下事件</td></tr><tr><td>onkeyup</td><td>键盘抬起事件</td></tr><tr><td>onkeypress</td><td>键盘键入事件</td></tr><tr><td><code>注意</code>：<code>onkeypress</code>事件按下的内容必须和出现的内容一致</td><td></td></tr></tbody></table><h2 id="六-常见的表单事件"><a href="#六-常见的表单事件" class="headerlink" title="六. 常见的表单事件"></a>六. 常见的表单事件</h2><table><thead><tr><th>表单事件</th><th>描述</th></tr></thead><tbody><tr><td>onfocus</td><td>表单空间获取焦点</td></tr><tr><td>onblur</td><td>表单失去焦点</td></tr><tr><td>onchange</td><td>表单内容改变</td></tr><tr><td>oninput</td><td>表单输入事件</td></tr><tr><td>onsubmit</td><td>表单提交事件</td></tr><tr><td>onreset</td><td>表单重置事件</td></tr><tr><td><strong>注意点</strong>：</td><td></td></tr></tbody></table><ol><li>onchange：文本框要求获取焦点和失去焦点内容不一样的时候会触发</li><li>oninput：只要输入或删除就会触发</li><li>表单<strong>提交</strong>和<strong>重置</strong>都必须绑定在form表单域上面</li></ol><h2 id="七-常见的触摸事件"><a href="#七-常见的触摸事件" class="headerlink" title="七. 常见的触摸事件"></a>七. 常见的触摸事件</h2><table><thead><tr><th>触摸事件</th><th>描述</th></tr></thead><tbody><tr><td>ontouchstart</td><td>开始触摸</td></tr><tr><td>ontouchmove</td><td>触摸移动</td></tr><tr><td>ontouchend</td><td>触摸结束</td></tr><tr><td>touchcancel</td><td>系统取消touch事件的时候触发</td></tr></tbody></table><h2 id="八-常见的拖拽事件"><a href="#八-常见的拖拽事件" class="headerlink" title="八. 常见的拖拽事件"></a>八. 常见的拖拽事件</h2><table><thead><tr><th>拖拽事件</th><th>描述</th></tr></thead><tbody><tr><td>ondragstart</td><td>开始拖拽</td></tr><tr><td>ondrag</td><td>拖拽移动</td></tr><tr><td>ondragenter</td><td>拖拽元素进入拖放元素范围内触发</td></tr><tr><td>ondragleave</td><td>拖拽元素离开拖放元素范围触发</td></tr><tr><td>ondragover</td><td>拖拽元素完全进入元素范围内触发</td></tr><tr><td>ondragdrop</td><td>拖拽元素在拖放元素范围内放手的时候触发</td></tr><tr><td><strong>注意</strong>：如果想要让drop事件生效， 需要阻止 dragover事件的默认行为</td><td></td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;/p&gt;</span><br><span class="line">&lt;!-----分割线-----&gt;</span><br><span class="line">p.<span class="property">ondrop</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;把元素拖进来撒手&quot;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>案例</strong>：拖拽元素<br><strong>分析思路</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    案例 拖拽</span></span><br><span class="line"><span class="comment">        1. 什么时候触发效果</span></span><br><span class="line"><span class="comment">            1) 鼠标按下</span></span><br><span class="line"><span class="comment">            2) 鼠标抬起</span></span><br><span class="line"><span class="comment">            3) 鼠标移动</span></span><br><span class="line"><span class="comment">        2. 什么范围触发效果</span></span><br><span class="line"><span class="comment">            1) 鼠标按下     div</span></span><br><span class="line"><span class="comment">            2) 鼠标抬起     div</span></span><br><span class="line"><span class="comment">            3) 鼠标移动     document</span></span><br><span class="line"><span class="comment">        3. 什么效果</span></span><br><span class="line"><span class="comment">            1) 鼠标按下     保证div可以拖拽</span></span><br><span class="line"><span class="comment">            2) 鼠标抬起     保证div不可以拖拽</span></span><br><span class="line"><span class="comment">            3) 鼠标移动     设置div top left   </span></span><br><span class="line"><span class="comment">            获取 移动的时候 光标距离窗口左上角的位置  -  初始的时候 光标距离元素左上角的位置</span></span><br><span class="line"><span class="comment">  */</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 0 获取元素</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 0 准备变量</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> flag = <span class="literal">false</span>; <span class="comment">// 默认元素不可以拖拽</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> startX = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> startY = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 鼠标按下</span></span></span><br><span class="line"><span class="language-javascript">    div.<span class="property">onmousedown</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 开启开关</span></span></span><br><span class="line"><span class="language-javascript">        flag = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 记录刚开始的时候鼠标距离元素左上角的位置</span></span></span><br><span class="line"><span class="language-javascript">        startX = e.<span class="property">offsetX</span>;</span></span><br><span class="line"><span class="language-javascript">        startY = e.<span class="property">offsetY</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 鼠标抬起</span></span></span><br><span class="line"><span class="language-javascript">    div.<span class="property">onmouseup</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 开关关闭</span></span></span><br><span class="line"><span class="language-javascript">        flag = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 3. 鼠标移动</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">onmousemove</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 如果开关关闭 不能拖拽</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (!flag) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 如果代码进入这里，表示开关关闭，也就是鼠标抬起，不能拖拽</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 表示可以拖拽</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;可以拖拽&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 设置 div 的top left</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 获取 移动的时候 光标距离窗口左上角的位置  -  初始的时候 光标距离元素左上角的位置</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> x = e.<span class="property">clientX</span> - startX;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> y = e.<span class="property">clientY</span> - startY;</span></span><br><span class="line"><span class="language-javascript">        div.<span class="property">style</span>.<span class="property">top</span> = y + <span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        div.<span class="property">style</span>.<span class="property">left</span> = x + <span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><p><img src="/../_resources/%E6%8B%96%E6%8B%BD.gif" class="lazyload placeholder" data-srcset="/../_resources/%E6%8B%96%E6%8B%BD.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/拖拽.gif"></p><h2 id="九-事件对象"><a href="#九-事件对象" class="headerlink" title="九. 事件对象"></a>九. 事件对象</h2><p>当响应函数被调用时，浏览器每次都会将一个事件对象作为实参传递进响应函数中，这个事件对象中封装了当前事件的相关信息，比如：鼠标的坐标，键盘的按键，鼠标的按键，滚轮的方向。<br>可以在响应函数中定义一个形参，来使用事件对象，但是在IE8以下浏览器中事件对象没有做完实参传递，而是作为window对象的属性保存。<br><strong>获取事件对象</strong>：</p><ul><li>标准浏览器<blockquote><p>在事件处理函数有一个参数，参数就是事件对象</p></blockquote></li><li>IE浏览器<blockquote><p>IE浏览器天生有一个事件对象 window.event</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// eg:</span></span><br><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;!----分割线----&gt;</span><br><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line"><span class="comment">// 标准浏览器</span></span><br><span class="line">div.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// IE 浏览器事件对象</span></span><br><span class="line">div.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">event</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 兼容性操作</span></span><br><span class="line">div.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> e = e || <span class="variable language_">window</span>.<span class="property">event</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><h2 id="十-鼠标事件对象"><a href="#十-鼠标事件对象" class="headerlink" title="十. 鼠标事件对象"></a>十. 鼠标事件对象</h2><h3 id="1-client"><a href="#1-client" class="headerlink" title="(1) client"></a>(1) client</h3><p>光标相对于<strong>浏览器可视窗口</strong>左上角的坐标点</p><blockquote><p>通俗理解就是：鼠标光标相对于肉眼可以看到的浏览器左上角的坐标点</p></blockquote><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">事件对象.<span class="property">clientX</span></span><br><span class="line">事件对象.<span class="property">clientY</span></span><br></pre></td></tr></table></figure><h3 id="2-page"><a href="#2-page" class="headerlink" title="(2) page"></a>(2) page</h3><p>光标相对于<strong>文档流</strong>左上角的坐标点</p><blockquote><p>通俗理解就是：鼠标光标相对于整个文档左上角的坐标点，就是即使页面向下滑动依然相对于最开始时的左上角坐标点。</p></blockquote><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">事件对象.<span class="property">pageX</span></span><br><span class="line">事件对象.<span class="property">pageY</span></span><br></pre></td></tr></table></figure><h3 id="3-offset"><a href="#3-offset" class="headerlink" title="(3) offset"></a>(3) offset</h3><p>光标相对于<strong>准确触发事件的元素</strong>左上角的坐标点</p><blockquote><p>通俗理解就是：鼠标光标相对于要触发的元素的左上角的坐标点</p></blockquote><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">事件对象.<span class="property">offsetX</span></span><br><span class="line">事件对象.<span class="property">offsetY</span></span><br></pre></td></tr></table></figure><p><strong>三个鼠标事件对象实例</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// eg:</span></span><br><span class="line">&lt;style&gt;</span><br><span class="line">    * &#123;</span><br><span class="line">    <span class="attr">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attr">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">div &#123;</span><br><span class="line">    <span class="attr">width</span>: 200px;</span><br><span class="line">    <span class="attr">height</span>: 300px;</span><br><span class="line">    background-<span class="attr">color</span>: pink;</span><br><span class="line">    <span class="attr">margin</span>: 100px;</span><br><span class="line">    margin-<span class="attr">top</span>: 700px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">div.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="comment">// 光标相对于 浏览器可视窗口 左上角的坐标点</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;e.clientX, e.clientY&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">clientX</span>, e.<span class="property">clientY</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;==========================&quot;</span>);</span><br><span class="line">    <span class="comment">// 光标相对于 文档流 左上角的坐标点</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;e.pageX, e.pageY&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">pageX</span>, e.<span class="property">pageY</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;==================&quot;</span>);</span><br><span class="line">    <span class="comment">// 光标相对于 准确触发事件的元素 左上角的坐标点</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;e.offsetX, e.offsetY&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">offsetX</span>, e.<span class="property">offsetY</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="4-案例"><a href="#4-案例" class="headerlink" title="(4) 案例"></a>(4) 案例</h3><p><strong>案例1</strong>：实时显示鼠标坐标点</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2&gt;x坐标 &lt;span <span class="keyword">class</span>=<span class="string">&quot;x&quot;</span>&gt;<span class="number">0</span>&lt;<span class="regexp">/span&gt;&lt;/</span>h2&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>y坐标 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;y&quot;</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line">&lt;!----分割线----&gt;  </span><br><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> xBox = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.x&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> yBox = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.y&quot;</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">onmousemove</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> x = e.<span class="property">clientX</span>;</span><br><span class="line">    <span class="keyword">var</span> y = e.<span class="property">clientY</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 把 x 和 y 放到span中</span></span><br><span class="line">    xBox.<span class="property">innerHTML</span> = x;</span><br><span class="line">    yBox.<span class="property">innerHTML</span> = y;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><p><img src="/../_resources/%E4%BA%8B%E4%BB%B6%E5%AE%9E%E6%97%B6%E6%98%BE%E7%A4%BA%E5%9D%90%E6%A0%87.gif" class="lazyload placeholder" data-srcset="/../_resources/%E4%BA%8B%E4%BB%B6%E5%AE%9E%E6%97%B6%E6%98%BE%E7%A4%BA%E5%9D%90%E6%A0%87.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/事件实时显示坐标.gif"></p><p><strong>案例2</strong>：鼠标跟随<br><strong>分析思路</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    案例：鼠标跟随</span></span><br><span class="line"><span class="comment">        1. 在什么时候触发效果</span></span><br><span class="line"><span class="comment">            鼠标移入</span></span><br><span class="line"><span class="comment">            鼠标移出</span></span><br><span class="line"><span class="comment">            鼠标移动</span></span><br><span class="line"><span class="comment">        2. 在什么范围触发效果</span></span><br><span class="line"><span class="comment">            鼠标移入   当前的li</span></span><br><span class="line"><span class="comment">            鼠标移出   当前的li</span></span><br><span class="line"><span class="comment">            鼠标移动   当前的li</span></span><br><span class="line"><span class="comment">        3. 触发的效果是什么</span></span><br><span class="line"><span class="comment">            鼠标移入   让当前的li里面的p出现        display: block</span></span><br><span class="line"><span class="comment">            鼠标移出   让当前的li里面的p消失        display: none</span></span><br><span class="line"><span class="comment">            鼠标移动   p跟着鼠标移动                left top   光标距离准确触发事件的元素的左上角的坐标 offsetX offsetY</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        一个小BUG </span></span><br><span class="line"><span class="comment">            当从右向左滑动， 没问题</span></span><br><span class="line"><span class="comment">            当从左向右滑动， p标签抖动 </span></span><br><span class="line"><span class="comment">    原因：</span></span><br><span class="line"><span class="comment">            因为p是li的子元素</span></span><br><span class="line"><span class="comment">                当光标在p标签身上，也会触发li的效果 (触发了父元素mousemove效果)</span></span><br><span class="line"><span class="comment">            因为offset 一套 是准确触发事件元素的左上角的坐标点</span></span><br><span class="line"><span class="comment">                当光标在p身上 , offsetX offsetY获取的是光标距离p左上角的位置 </span></span><br><span class="line"><span class="comment">     解决：</span></span><br><span class="line"><span class="comment">            1. 让光标和p之间有个距离</span></span><br><span class="line"><span class="comment">            2. 让p标签保持一个穿透效果    pointer-events: none;</span></span><br><span class="line"><span class="comment">  */</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">z-index</span>: <span class="number">999</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 禁止p的鼠标效果 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">pointer-events</span>: none;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">            第1个li</span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>第1个li里面的p<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            第2个li</span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>第2个li里面的p<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            第3个li</span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>第3个li里面的p<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 0 获取元素</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> liList = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;li&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1 遍历  li给每个添加效果</span></span></span><br><span class="line"><span class="language-javascript">    liList.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">li</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1-1 鼠标移入</span></span></span><br><span class="line"><span class="language-javascript">        li.<span class="title function_">addEventListener</span>(<span class="string">&quot;mouseover&quot;</span>, overHandler);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1-2 鼠标移出</span></span></span><br><span class="line"><span class="language-javascript">        li.<span class="title function_">addEventListener</span>(<span class="string">&quot;mouseout&quot;</span>, outHandler);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1-3 鼠标移动</span></span></span><br><span class="line"><span class="language-javascript">        li.<span class="title function_">addEventListener</span>(<span class="string">&quot;mousemove&quot;</span>, moveHandler);</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1-1 鼠标移入事件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">overHandler</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 让当前的li里面的p出现</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 找到当前的li ===&gt; 关键字 this</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 找到li里面的p</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">firstElementChild</span>.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;block&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1-2 鼠标移出</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">outHandler</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 让当前的li里面的p消失</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 当前的li ==&gt; this</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 当前的li里面的p this.firstElementChild</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">firstElementChild</span>.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;none&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1-3 鼠标移动</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">moveHandler</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 让 li 里面p 移动</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 获取 鼠标指针距离 li的左上角的值</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> x = e.<span class="property">offsetX</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> y = e.<span class="property">offsetY</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">firstElementChild</span>.<span class="property">style</span>.<span class="property">left</span> = x + <span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">firstElementChild</span>.<span class="property">style</span>.<span class="property">top</span> = y + <span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><p><img src="/../_resources/%E9%BC%A0%E6%A0%87%E8%B7%9F%E9%9A%8F.gif" class="lazyload placeholder" data-srcset="/../_resources/%E9%BC%A0%E6%A0%87%E8%B7%9F%E9%9A%8F.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/鼠标跟随.gif"></p><h2 id="十一-键盘事件对象"><a href="#十一-键盘事件对象" class="headerlink" title="十一. 键盘事件对象"></a>十一. 键盘事件对象</h2><p>事件对象信息</p><ol><li>按下按个键<blockquote><p>按下的是否是组合键</p></blockquote></li><li>按下的是哪一个按键<blockquote><p>事件对象内有一个信息，keyCode</p></blockquote></li><li>按下的是否是组合键<blockquote><p>在事件对象中有四个信息 shiftKey ctrlKey altKey metaKey 以上四个信息值都是false, 按下的时候是true</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;&quot;</span> id=<span class="string">&quot;&quot;</span> /&gt;</span><br><span class="line">&lt;!----分割线----&gt;</span><br><span class="line"><span class="keyword">var</span> inp = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line">inp.<span class="property">onkeydown</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="comment">// 1.获取键盘编码</span></span><br><span class="line">    <span class="comment">// console.log(e.keyCode);</span></span><br><span class="line">    <span class="comment">// 2.获取功能键</span></span><br><span class="line">    <span class="comment">// console.log(e);</span></span><br><span class="line">    <span class="comment">// 3.按下的是否是组合键</span></span><br><span class="line">    <span class="keyword">if</span> (e.<span class="property">keyCode</span> === <span class="number">65</span> &amp;&amp; e.<span class="property">shiftKey</span> &amp;&amp; e.<span class="property">ctrlKey</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;同时按下 a + shift + ctrl&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ol><h2 id="十二-事件传播"><a href="#十二-事件传播" class="headerlink" title="十二. 事件传播"></a>十二. 事件传播</h2><blockquote><p>当行为发生的时候，会按照 父级 依次向上传递， 直到window</p></blockquote><p><strong>传播的三个阶段</strong>：</p><ol><li>捕获 从window传递到事件目标的过程</li><li>目标 准确触发事件的元素</li><li>冒泡 从事件目标传递到window的过程<br><strong>事件流机制</strong>：</li></ol><ul><li>可以在冒泡阶段触发事件，也可以在捕获阶段触发事件</li><li><strong>默认</strong>是冒泡阶段触发事件</li><li>完整过程：捕获 -&gt; 目标 -&gt; 冒泡<br><strong>触发捕获阶段的事件</strong><br>addEventListener接受三个参数<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">addEventListener</span>(<span class="string">&#x27;事件类型&#x27;</span>, 事件处理函数, <span class="literal">true</span>/<span class="literal">false</span>)</span><br></pre></td></tr></table></figure><blockquote><p>true 捕获阶段触发 false 冒泡阶段触发(默认)</p></blockquote></li></ul><p><strong>事件的冒泡（Bubble）</strong></p><ul><li>事件的冒泡指的是事件向上传导，当后代元素上的事件被触发时，将会导致其祖先元素上的同类事件也会触发；</li><li>事件的冒泡大部分情况下都是有益的，如果需要取消冒泡，则需要使用事件对象来取消；</li><li>可以将事件对象的cancelBubble设置为true，即可取消冒泡。<br>例子：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">元素.事件 = <span class="keyword">function</span>(<span class="params">event</span>)&#123;</span><br><span class="line">    event = event || <span class="variable language_">window</span>.<span class="property">event</span>;</span><br><span class="line">    event.<span class="property">cancelBubble</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><h2 id="十三-阻止事件传播"><a href="#十三-阻止事件传播" class="headerlink" title="十三. 阻止事件传播"></a>十三. 阻止事件传播</h2><ol><li>什么时候需要阻止事件传播？<blockquote><p>当我们的父子级结构都有<strong>相同的事件类型</strong>，就需要阻止事件传播</p></blockquote></li><li>如何阻止事件传播<br> 语法：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">事件对象.<span class="title function_">stopPropagation</span>()</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">&lt;!----分割线----&gt; </span><br><span class="line"><span class="comment">// 点击 按钮 ，div出现</span></span><br><span class="line"><span class="comment">// 点击 document ， div消失</span></span><br><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;button&quot;</span>);</span><br><span class="line"><span class="comment">// 由于事件冒泡，btn的点击事件会向上冒泡，触发到document</span></span><br><span class="line">btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="comment">// 阻止事件传播</span></span><br><span class="line">    e.<span class="title function_">stopPropagation</span>();</span><br><span class="line">    div.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;block&quot;</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    div.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ol><h2 id="十四-阻止默认行为"><a href="#十四-阻止默认行为" class="headerlink" title="十四. 阻止默认行为"></a>十四. 阻止默认行为</h2><p><strong>常见的默认行为</strong>：</p><ul><li>表单标签提交</li><li>a标签点击 </li><li>文本选择</li><li>右键 </li><li>….<br><strong>阻止默认行为</strong><br><strong>语法</strong> :<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 标准浏览器  事件对象.preventDefault()</span></span><br><span class="line"><span class="comment">// 通用 return false</span></span><br></pre></td></tr></table></figure><strong>案例</strong>：关闭鼠标右键默认弹窗，并设置自己的弹窗。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 右键点击</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">oncontextmenu</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1-1 本身的弹窗不出现  阻止默认行为</span></span></span><br><span class="line"><span class="language-javascript">        e.<span class="title function_">preventDefault</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1-2 div出现</span></span></span><br><span class="line"><span class="language-javascript">        div.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;block&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1-3 div的位置和光标的位置一样</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> x = e.<span class="property">clientX</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> y = e.<span class="property">clientY</span>;</span></span><br><span class="line"><span class="language-javascript">        div.<span class="property">style</span>.<span class="property">left</span> = x + <span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        div.<span class="property">style</span>.<span class="property">top</span> = y + <span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2) 左键点击</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        div.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;none&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><strong>效果图</strong>：</li></ul><p><img src="/../_resources/%E9%BC%A0%E6%A0%87%E5%8F%B3%E9%94%AE%E4%BA%8B%E4%BB%B6.gif" class="lazyload placeholder" data-srcset="/../_resources/%E9%BC%A0%E6%A0%87%E5%8F%B3%E9%94%AE%E4%BA%8B%E4%BB%B6.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/鼠标右键事件.gif"></p><h2 id="十五-事件委托"><a href="#十五-事件委托" class="headerlink" title="十五. 事件委托"></a>十五. 事件委托</h2><blockquote><p>把子元素的事件交给父元素来绑定</p></blockquote><p><strong>作用</strong>：</p><blockquote><p>元素的事件内， 通过事件目标（e.target） 判断准确触发事件的元素</p></blockquote><p><strong>优点</strong>：</p><ol><li>可以减少操作dom的次数。 </li><li>对于后面添加的元素很友好，并对子元素添加事件很有用。</li></ol><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><p><strong>案例1</strong>：点击按钮，一次出现5个li，li标签里面有数字, 点击li，背景颜色变为绿色。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">flex-shrink</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">flex-wrap</span>: wrap;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>li1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>li2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>li3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>li4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>li5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;button&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;ul&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> count = <span class="number">6</span>;</span></span><br><span class="line"><span class="language-javascript">    btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> str = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">            str += <span class="string">`&lt;li class=&#x27;box&#x27;&gt;li<span class="subst">$&#123;count&#125;</span>&lt;/li&gt;`</span>;</span></span><br><span class="line"><span class="language-javascript">            count++;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        ul.<span class="property">innerHTML</span> += str;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    ul.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">className</span> === <span class="string">&quot;box&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            e.<span class="property">target</span>.<span class="property">style</span>.<span class="property">background</span> = <span class="string">&quot;green&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><p><img src="/../_resources/%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98.gif" class="lazyload placeholder" data-srcset="/../_resources/%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/事件委托.gif"></p><p><strong>案例2</strong>：select下拉</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">html</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">form</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">h2</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">list-style-type</span>: none;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background</span>: <span class="number">#23384e</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">1.5</span> <span class="string">&quot;微软雅黑&quot;</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span> <span class="selector-tag">form</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span> <span class="selector-class">.box</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span> <span class="selector-class">.select</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">search.jpg</span>) no-repeat;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span> <span class="selector-class">.box</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span> <span class="selector-tag">form</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">34px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">350px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">10px</span> auto;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span> <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-position</span>: right <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span> <span class="selector-tag">form</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-repeat</span>: repeat-x;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-position</span>: <span class="number">0</span> -<span class="number">34px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">20px</span> <span class="number">0</span> <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span> <span class="selector-class">.select</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">190px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">22px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-top</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">22px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding-left</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-position</span>: <span class="number">0</span> -<span class="number">68px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">letter-spacing</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">22px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-position</span>: <span class="number">0</span> -<span class="number">90px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">4px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#f60</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-position</span>: -<span class="number">80px</span> -<span class="number">90px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span> <span class="selector-class">.sub</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">26px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">198px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background</span>: <span class="number">#2b2b2b</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span> <span class="selector-class">.sub</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding-left</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-bottom</span>: -<span class="number">1px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-bottom</span>: <span class="number">1px</span> dotted <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#search</span> <span class="selector-class">.sub</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background</span>: <span class="number">#8b8b8b</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;select&quot;</span> <span class="attr">class</span>=<span class="string">&quot;select&quot;</span>&gt;</span>请选择游戏名称<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;sub&quot;</span> <span class="attr">class</span>=<span class="string">&quot;sub&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>地下城与勇士<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>魔兽世界（国服）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>魔兽世界（台服）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>热血江湖<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>大话西游II<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>QQ幻想世界<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1 1) 点击span   ul出现</span></span></span><br><span class="line"><span class="language-javascript">    select.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 阻止事件冒泡</span></span></span><br><span class="line"><span class="language-javascript">        e.<span class="title function_">stopPropagation</span>();</span></span><br><span class="line"><span class="language-javascript">        sub.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;block&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 2) 点击document  ul 消失</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        sub.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;none&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 3) 通过事件委托的方式 把点击事件添加给ul 获取当前li里面的内容，把内容填到span中</span></span></span><br><span class="line"><span class="language-javascript">    sub.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 通过事件目标进行判断   e.target</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 判断当前的事件目标是不是li 是的话就执行代码</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">nodeName</span> === <span class="string">&quot;LI&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            select.<span class="property">innerHTML</span> = e.<span class="property">target</span>.<span class="property">innerHTML</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><p><img src="/../_resources/select%E4%B8%8B%E6%8B%89.gif" class="lazyload placeholder" data-srcset="/../_resources/select%E4%B8%8B%E6%8B%89.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/select下拉.gif"></p><p><strong>案例3</strong>：表格即时编辑</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111111111111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> tdList = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;td&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    tdList.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">td</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        td.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 当td里面有一个input的时候就不需要触发下面的代码</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 当td里面没有input的时候就需要触发下面的代码</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// &quot;td里面没有子元素的时候&quot;  td.children.length === 0</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (td.<span class="property">children</span>.<span class="property">length</span> === <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> str = <span class="string">`&lt;input type=&#x27;text&#x27; value=<span class="subst">$&#123;td.innerHTML&#125;</span>&gt;`</span>;</span></span><br><span class="line"><span class="language-javascript">                td.<span class="property">innerHTML</span> = str;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 怎么获取输入框</span></span></span><br><span class="line"><span class="language-javascript">            td.<span class="property">children</span>[<span class="number">0</span>].<span class="property">onblur</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 输入框失去焦点</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> value = td.<span class="property">children</span>[<span class="number">0</span>].<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                td.<span class="property">innerHTML</span> = value;</span></span><br><span class="line"><span class="language-javascript">            &#125;;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><p><img src="/../_resources/%E8%A1%A8%E6%A0%BC%E5%8D%B3%E6%97%B6%E7%BC%96%E8%BE%91.gif" class="lazyload placeholder" data-srcset="/../_resources/%E8%A1%A8%E6%A0%BC%E5%8D%B3%E6%97%B6%E7%BC%96%E8%BE%91.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/表格即时编辑.gif"></p><p><strong>最终效果</strong>：</p><p><img src="/../_resources/%E8%B4%AD%E7%89%A9%E8%BD%A6.gif" class="lazyload placeholder" data-srcset="/../_resources/%E8%B4%AD%E7%89%A9%E8%BD%A6.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/购物车.gif"></p><h2 id="十六-实现简易购物车"><a href="#十六-实现简易购物车" class="headerlink" title="十六. 实现简易购物车"></a>十六. 实现简易购物车</h2><h3 id="一-简介"><a href="#一-简介" class="headerlink" title="(一) 简介"></a>(一) 简介</h3><p>本文主要分享一个简易的使用JavaScript编写的购物车。功能实现了：全选、清空购物车、删除单条商品、数据渲染、总价格计算、删除选中物品、添加和减少商品数量并且实现了操作数据后在浏览器本地永久存储。</p><h3 id="二-HTML部分代码"><a href="#二-HTML部分代码" class="headerlink" title="(二) HTML部分代码"></a>(二) HTML部分代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--引入外部css样式--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./index.css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span>页面顶部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 要渲染位置 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;div class=&quot;top&quot;&gt;&lt;input class=&quot;toggleAll&quot; type=&quot;checkbox&quot; /&gt; 全选&lt;/div&gt;</span></span><br><span class="line"><span class="comment">      &lt;ul&gt;</span></span><br><span class="line"><span class="comment">        &lt;li&gt;</span></span><br><span class="line"><span class="comment">          &lt;div class=&quot;status&quot;&gt;</span></span><br><span class="line"><span class="comment">            &lt;input type=&quot;checkbox&quot; /&gt;</span></span><br><span class="line"><span class="comment">          &lt;/div&gt;</span></span><br><span class="line"><span class="comment">          &lt;div class=&quot;show&quot;&gt;</span></span><br><span class="line"><span class="comment">            &lt;img</span></span><br><span class="line"><span class="comment">              src=&quot;https://img1.baidu.com/it/u=2511310783,721605137&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=500&amp;h=332&quot;</span></span><br><span class="line"><span class="comment">              alt=&quot;&quot;</span></span><br><span class="line"><span class="comment">            /&gt;</span></span><br><span class="line"><span class="comment">          &lt;/div&gt;</span></span><br><span class="line"><span class="comment">          &lt;div class=&quot;title&quot;&gt;我是一个手机, 不知道是啥&lt;/div&gt;</span></span><br><span class="line"><span class="comment">          &lt;div class=&quot;price&quot;&gt;单价￥ 100.00&lt;/div&gt;</span></span><br><span class="line"><span class="comment">          &lt;div class=&quot;number&quot;&gt;</span></span><br><span class="line"><span class="comment">            &lt;button&gt;-&lt;/button&gt;</span></span><br><span class="line"><span class="comment">            &lt;input type=&quot;text&quot; value=&quot;1&quot; /&gt;</span></span><br><span class="line"><span class="comment">            &lt;button&gt;+&lt;/button&gt;</span></span><br><span class="line"><span class="comment">          &lt;/div&gt;</span></span><br><span class="line"><span class="comment">          &lt;div class=&quot;sub&quot;&gt;总价￥ 100.00&lt;/div&gt;</span></span><br><span class="line"><span class="comment">          &lt;div class=&quot;destory&quot;&gt;</span></span><br><span class="line"><span class="comment">            &lt;button&gt;删除&lt;/button&gt;</span></span><br><span class="line"><span class="comment">          &lt;/div&gt;</span></span><br><span class="line"><span class="comment">        &lt;/li&gt;</span></span><br><span class="line"><span class="comment">        &lt;li&gt;</span></span><br><span class="line"><span class="comment">          &lt;div class=&quot;status&quot;&gt;</span></span><br><span class="line"><span class="comment">            &lt;input type=&quot;checkbox&quot; /&gt;</span></span><br><span class="line"><span class="comment">          &lt;/div&gt;</span></span><br><span class="line"><span class="comment">          &lt;div class=&quot;show&quot;&gt;</span></span><br><span class="line"><span class="comment">            &lt;img</span></span><br><span class="line"><span class="comment">              src=&quot;https://img1.baidu.com/it/u=2511310783,721605137&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=500&amp;h=332&quot;</span></span><br><span class="line"><span class="comment">              alt=&quot;&quot;</span></span><br><span class="line"><span class="comment">            /&gt;</span></span><br><span class="line"><span class="comment">          &lt;/div&gt;</span></span><br><span class="line"><span class="comment">          &lt;div class=&quot;title&quot;&gt;我是一个手机, 不知道是啥&lt;/div&gt;</span></span><br><span class="line"><span class="comment">          &lt;div class=&quot;price&quot;&gt;单价￥ 100.00&lt;/div&gt;</span></span><br><span class="line"><span class="comment">          &lt;div class=&quot;number&quot;&gt;</span></span><br><span class="line"><span class="comment">            &lt;button&gt;-&lt;/button&gt;</span></span><br><span class="line"><span class="comment">            &lt;input type=&quot;text&quot; value=&quot;1&quot; /&gt;</span></span><br><span class="line"><span class="comment">            &lt;button&gt;+&lt;/button&gt;</span></span><br><span class="line"><span class="comment">          &lt;/div&gt;</span></span><br><span class="line"><span class="comment">          &lt;div class=&quot;sub&quot;&gt;总价￥ 100.00&lt;/div&gt;</span></span><br><span class="line"><span class="comment">          &lt;div class=&quot;destory&quot;&gt;</span></span><br><span class="line"><span class="comment">            &lt;button&gt;删除&lt;/button&gt;</span></span><br><span class="line"><span class="comment">          &lt;/div&gt;</span></span><br><span class="line"><span class="comment">        &lt;/li&gt;</span></span><br><span class="line"><span class="comment">      &lt;/ul&gt;</span></span><br><span class="line"><span class="comment">      &lt;div class=&quot;bottom&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;div class=&quot;totalNum&quot;&gt;总件数 : 3&lt;/div&gt;</span></span><br><span class="line"><span class="comment">        &lt;div class=&quot;btns&quot;&gt;</span></span><br><span class="line"><span class="comment">          &lt;button class=&quot;clear&quot;&gt;清空购物车&lt;/button&gt;</span></span><br><span class="line"><span class="comment">          &lt;button class=&quot;buy&quot;&gt;去结算&lt;/button&gt;</span></span><br><span class="line"><span class="comment">          &lt;button class=&quot;removeComplete&quot;&gt;删除所有已选中&lt;/button&gt;</span></span><br><span class="line"><span class="comment">        &lt;/div&gt;</span></span><br><span class="line"><span class="comment">        &lt;div class=&quot;totalPrice&quot;&gt;总价格 : ￥ &lt;span&gt;100.00&lt;/span&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="comment">      &lt;/div&gt; --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 渲染结束 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span>页面底部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入外部js文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;go.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="三-CSS部分代码"><a href="#三-CSS部分代码" class="headerlink" title="(三) CSS部分代码"></a>(三) CSS部分代码</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span>,</span><br><span class="line"><span class="selector-tag">ol</span>,</span><br><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span>,</span><br><span class="line"><span class="selector-class">.footer</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-class">.top</span>,</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-class">.bottom</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-class">.bottom</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-class">.bottom</span> &gt; <span class="selector-class">.totalPrice</span> &gt; <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-class">.bottom</span> &gt; <span class="selector-class">.btns</span> &gt; <span class="selector-tag">button</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-class">.top</span> &gt; <span class="selector-tag">input</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">15px</span> <span class="number">0</span> <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-class">.show</span>,</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-class">.status</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-class">.status</span> &gt; <span class="selector-tag">input</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-class">.show</span> &gt; <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-class">.price</span>,</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-class">.sub</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-class">.title</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">align-items</span>: flex-start;</span><br><span class="line">  <span class="attribute">justify-content</span>: flex-start;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-class">.number</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">230px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-class">.number</span> &gt; <span class="selector-tag">input</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-class">.number</span> &gt; <span class="selector-tag">button</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-class">.destory</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-class">.destory</span> &gt; <span class="selector-tag">button</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四-JavaScript部分代码"><a href="#四-JavaScript部分代码" class="headerlink" title="(四) JavaScript部分代码"></a>(四) JavaScript部分代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> cartList = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;list&#x27;</span>)) || [</span><br><span class="line">  <span class="comment">// 每一个对象就是一个购物车内容的数据</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">111234</span>, <span class="comment">// 商品编号，每个商品的唯一标识</span></span><br><span class="line">    <span class="attr">status</span>: <span class="literal">true</span>, <span class="comment">// 是否选中</span></span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&#x27;https://img1.baidu.com/it/u=2511310783,721605137&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=500&amp;h=332&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;我是一个手机, 不知道是啥&#x27;</span>,</span><br><span class="line">    <span class="attr">price</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">number</span>: <span class="number">3</span>, <span class="comment">// 购买3件</span></span><br><span class="line">    <span class="attr">total</span>: <span class="number">16</span> <span class="comment">// 库存</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">123456</span>,</span><br><span class="line">    <span class="attr">status</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&#x27;https://img1.baidu.com/it/u=1537709578,2453227648&amp;fm=253&amp;fmt=auto&amp;app=120&amp;f=JPEG?w=809&amp;h=500&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;我是一个电脑, 不知道是啥&#x27;</span>,</span><br><span class="line">    <span class="attr">price</span>: <span class="number">98.72</span>,</span><br><span class="line">    <span class="attr">number</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">total</span>: <span class="number">7</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">965874</span>,</span><br><span class="line">    <span class="attr">status</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&#x27;https://img2.baidu.com/it/u=3561506717,735421650&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=750&amp;h=500&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;我是一个手纸, 不知道是啥&#x27;</span>,</span><br><span class="line">    <span class="attr">price</span>: <span class="number">356.21</span>,</span><br><span class="line">    <span class="attr">number</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">total</span>: <span class="number">22</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> content = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.content&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查 -- 整合数据，拼接在页面上 --- 渲染数据</span></span><br><span class="line"><span class="title function_">renderHTML</span>()</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">renderHTML</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 渲染</span></span><br><span class="line">  <span class="comment">// 设置需要的变量（勾选的数量、总件数、总价格）</span></span><br><span class="line">  <span class="comment">// 勾选的数量</span></span><br><span class="line">  <span class="keyword">let</span> totalSelnum = <span class="number">0</span></span><br><span class="line">  <span class="comment">// 总件数</span></span><br><span class="line">  <span class="keyword">let</span> totalSum = <span class="number">0</span></span><br><span class="line">  <span class="comment">// 总价格</span></span><br><span class="line">  <span class="keyword">let</span> totalPrice = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  cartList.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 判断数组中的status项是否为true</span></span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">status</span>) &#123;</span><br><span class="line">      <span class="comment">// 勾选的数量叠加</span></span><br><span class="line">      totalSelnum++</span><br><span class="line">      <span class="comment">// 总件数</span></span><br><span class="line">      totalSum += item.<span class="property">number</span></span><br><span class="line">      <span class="comment">// 总价格</span></span><br><span class="line">      totalPrice += item.<span class="property">number</span> * item.<span class="property">price</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">// 遍历数组</span></span><br><span class="line">  <span class="keyword">let</span> str = <span class="string">``</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 拼接全选的数据</span></span><br><span class="line">  str += <span class="string">`&lt;div class=&quot;top&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;input class=&quot;toggleAll&quot; type=&quot;checkbox&quot; <span class="subst">$&#123;(checked =</span></span></span><br><span class="line"><span class="subst"><span class="string">                  totalSelnum === cartList.length</span></span></span><br><span class="line"><span class="subst"><span class="string">                    ? <span class="string">&#x27;checked&#x27;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">                    : <span class="string">&#x27;&#x27;</span>)&#125;</span>/&gt; 全选&lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;ul&gt;`</span></span><br><span class="line">  cartList.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 拼接列表数据</span></span><br><span class="line">    str += <span class="string">`    </span></span><br><span class="line"><span class="string">          &lt;li&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;status&quot;&gt;</span></span><br><span class="line"><span class="string">              &lt;input type=&quot;checkbox&quot; <span class="subst">$&#123;(checked =</span></span></span><br><span class="line"><span class="subst"><span class="string">                item.status === <span class="literal">true</span></span></span></span><br><span class="line"><span class="subst"><span class="string">                  ? <span class="string">&#x27;checked&#x27;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">                  : <span class="string">&#x27;&#x27;</span>)&#125;</span> class=&quot;checkbox&quot; data-id = &quot;<span class="subst">$&#123;item.id&#125;</span>&quot;/&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;show&quot;&gt;</span></span><br><span class="line"><span class="string">              &lt;img src=&quot;<span class="subst">$&#123;item.pic&#125;</span>&quot;</span></span><br><span class="line"><span class="string">                alt=&quot;&quot; /&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;title&quot;&gt;<span class="subst">$&#123;item.name&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;price&quot;&gt;单价￥ <span class="subst">$&#123;item.price&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;number&quot;&gt;</span></span><br><span class="line"><span class="string">              &lt;button class = &quot;sub&quot; data-id = &quot;<span class="subst">$&#123;item.id&#125;</span>&quot;&gt;-&lt;/button&gt;</span></span><br><span class="line"><span class="string">              &lt;input type=&quot;text&quot; value=&quot;<span class="subst">$&#123;item.number&#125;</span>&quot; /&gt;</span></span><br><span class="line"><span class="string">              &lt;button class = &quot;add&quot; data-id = &quot;<span class="subst">$&#123;item.id&#125;</span>&quot;&gt;+&lt;/button&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;sub&quot;&gt;总价￥ <span class="subst">$&#123;(item.price * item.number).toFixed(</span></span></span><br><span class="line"><span class="subst"><span class="string">              <span class="number">2</span></span></span></span><br><span class="line"><span class="subst"><span class="string">            )&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;destory&quot;&gt;</span></span><br><span class="line"><span class="string">              &lt;button class=&quot;del&quot; data-id = &quot;<span class="subst">$&#123;item.id&#125;</span>&quot;&gt;删除&lt;/button&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">          &lt;/li&gt;`</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">// 拼接结算数据</span></span><br><span class="line">  str += <span class="string">`&lt;/ul&gt;    </span></span><br><span class="line"><span class="string">        &lt;div class=&quot;bottom&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;div class=&quot;totalSelnum&quot;&gt;总件数 : <span class="subst">$&#123;totalSum&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">          &lt;div class=&quot;btns&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;button class=&#x27;clear&#x27;&gt;清空购物车&lt;/button&gt;</span></span><br><span class="line"><span class="string">            &lt;button class=&quot;buy&quot; <span class="subst">$&#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">              !totalSelnum ? <span class="string">&#x27;disabled&#x27;</span> : <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">            &#125;</span> data-price = &quot;<span class="subst">$&#123;totalPrice&#125;</span>&quot;&gt;去结算&lt;/button&gt;</span></span><br><span class="line"><span class="string">            &lt;button class=&quot;removeComplete&quot; <span class="subst">$&#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">              !totalSelnum ? <span class="string">&#x27;disabled&#x27;</span> : <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">            &#125;</span>&gt;删除所有已选中&lt;/button&gt;</span></span><br><span class="line"><span class="string">          &lt;/div&gt;</span></span><br><span class="line"><span class="string">          &lt;div class=&quot;totalPrice&quot;&gt;总价格 : ￥ &lt;span&gt;<span class="subst">$&#123;totalPrice.toFixed(</span></span></span><br><span class="line"><span class="subst"><span class="string">            <span class="number">2</span></span></span></span><br><span class="line"><span class="subst"><span class="string">          )&#125;</span>&lt;/span&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;`</span></span><br><span class="line">  <span class="comment">// 渲染</span></span><br><span class="line">  content.<span class="property">innerHTML</span> = str</span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;list&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(cartList))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 利用事件委托处理删改增</span></span><br><span class="line"><span class="comment">// 判断当前点击的元素的className是否是需要触发事件的元素</span></span><br><span class="line">content.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">         全选 </span></span><br><span class="line"><span class="comment">         修改数据</span></span><br><span class="line"><span class="comment">         渲染页面</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">  <span class="comment">// 全选</span></span><br><span class="line">  <span class="comment">// 利用事件委托</span></span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">className</span> === <span class="string">&#x27;toggleAll&#x27;</span>) &#123;</span><br><span class="line">    cartList.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      item.<span class="property">status</span> = e.<span class="property">target</span>.<span class="property">checked</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="title function_">renderHTML</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">         清空购物</span></span><br><span class="line"><span class="comment">         修改数据</span></span><br><span class="line"><span class="comment">         渲染页面</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">className</span> === <span class="string">&#x27;clear&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">confirm</span>(<span class="string">&#x27;请确定要清空购物车吗？&#x27;</span>)) &#123;</span><br><span class="line">      cartList = []</span><br><span class="line">      <span class="title function_">renderHTML</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">         结算</span></span><br><span class="line"><span class="comment">         修改数据</span></span><br><span class="line"><span class="comment">         渲染页面</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">className</span> === <span class="string">&#x27;buy&#x27;</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">price</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">        删除已经选中</span></span><br><span class="line"><span class="comment">        修改数据</span></span><br><span class="line"><span class="comment">        渲染页面</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">className</span> === <span class="string">&#x27;removeComplete&#x27;</span>) &#123;</span><br><span class="line">    cartList = cartList.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> !item.<span class="property">status</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="title function_">renderHTML</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">        每一项的+</span></span><br><span class="line"><span class="comment">        修改数据</span></span><br><span class="line"><span class="comment">        渲染页面</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">className</span> === <span class="string">&#x27;add&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> add = cartList.<span class="title function_">find</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> item.<span class="property">id</span> == e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">id</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> (add.<span class="property">number</span> &lt; add.<span class="property">total</span>) &#123;</span><br><span class="line">      add.<span class="property">number</span>++</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">renderHTML</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">        每一项的 -</span></span><br><span class="line"><span class="comment">        修改数据</span></span><br><span class="line"><span class="comment">        渲染页面</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">className</span> === <span class="string">&#x27;sub&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> sub = cartList.<span class="title function_">find</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> item.<span class="property">id</span> == e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">id</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> (sub.<span class="property">number</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      sub.<span class="property">number</span>--</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">renderHTML</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">        每一项的勾选</span></span><br><span class="line"><span class="comment">        修改数据</span></span><br><span class="line"><span class="comment">        渲染页面</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">className</span> === <span class="string">&#x27;checkbox&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// 查找数组中需要修改的这一项</span></span><br><span class="line">    <span class="keyword">let</span> info = cartList.<span class="title function_">find</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> item.<span class="property">id</span> == e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">id</span></span><br><span class="line">    &#125;)</span><br><span class="line">    info.<span class="property">status</span> = !info.<span class="property">status</span></span><br><span class="line">    <span class="title function_">renderHTML</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">        每一项的删除</span></span><br><span class="line"><span class="comment">        修改数据</span></span><br><span class="line"><span class="comment">        渲染页面</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">className</span> === <span class="string">&#x27;del&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">confirm</span>(<span class="string">&#x27;你确定要删除这一项吗？&#x27;</span>)) &#123;</span><br><span class="line">      cartList = cartList.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> item.<span class="property">id</span> != e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">id</span></span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="title function_">renderHTML</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五-完整资源获取"><a href="#五-完整资源获取" class="headerlink" title="(五) 完整资源获取"></a>(五) 完整资源获取</h3><p><strong>完整的资源获取</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">链接：<span class="attr">https</span>:<span class="comment">//pan.baidu.com/s/1TkfKTUkSyld8kEJbJlMrUw?pwd=yhc6 </span></span><br><span class="line">提取码：yhc6</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">事件指的是用户和浏览器之间的交互行为。比如：点击按钮、关闭窗口、鼠标移动等。</summary>
    
    
    
    <category term="前端" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
    <category term="前端" scheme="https://fanxing28.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://fanxing28.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>函数的相关知识</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/JavaScript/%E3%80%90JS%E3%80%91%E5%87%BD%E6%95%B0/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/JavaScript/%E3%80%90JS%E3%80%91%E5%87%BD%E6%95%B0/</id>
    <published>2023-11-28T14:32:25.000Z</published>
    <updated>2023-12-02T12:23:47.890Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-函数的概述"><a href="#一-函数的概述" class="headerlink" title="一. 函数的概述"></a>一. 函数的概述</h2><p>函数也是一个对象，也具有普通对象的功能；函数中可以封装一些代码，在需要的时候可以去调用函数来执行这些代码。所有的方法都是函数构建的，函数构建一些常用功能。<br>简单理解就是</p><blockquote><p>对于js来说，函数就是把任意一段代码放在一个盒子里面。在我想要让这段代码执行的时候，直接执行这个盒子里面的代码就行。</p></blockquote><p><strong>函数和对象的关系</strong><br>函数属于对象，但是函数又是对象的构造器(类是函数构造的，类叫构造函数)，函数对象只是对象中的一种。函数对象在很多时候表现的特殊一些。<br>使用函数<strong>目的</strong>：让大量代码重复使用。<br>使用$\color{red} {typeof} $检查一个函数时会返回function。</p><h2 id="二-函数声明"><a href="#二-函数声明" class="headerlink" title="二. 函数声明"></a>二. 函数声明</h2><blockquote><p>function 声明函数关键字（全部小写） 函数名一般为动词</p></blockquote><p><strong>函数的声明方式有以下两种</strong>：</p><ol><li>利用函数关键字自定义函数（命名函数或者叫声明式函数）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> 函数名([形参<span class="number">1</span>,形参<span class="number">2.</span>..形参N])&#123;</span><br><span class="line">    <span class="comment">// 函数体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 例</span></span><br><span class="line"><span class="keyword">function</span>  <span class="title function_">sayHello</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li>function: 声明函数的关键字，表示接下来是一个函数了</li><li>sayHello: 函数的名字，我们自己定义的（遵循变量名的命名规则和命名规范）</li><li>(): 必须写，是用来放参数的位置</li><li>{}: 就是我们用来放一段代码的位置（也就是类似于“盒子”）<br><code>注</code>：声明式函数可以在任意位置调用（可以变量提升）</li></ul><ol start="2"><li>函数变量表达式（匿名函数或者叫赋值式函数）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 变量名 = <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 例</span></span><br><span class="line"><span class="keyword">var</span> fun = <span class="keyword">function</span>(<span class="params">a</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fun</span>(<span class="string">&#x27;wo&#x27;</span>);<span class="comment">//wo</span></span><br></pre></td></tr></table></figure><code>注</code>：赋值式函数，声明后才可以使用，根据变量来的，（不允许声明前调用，若变量提升（声明前调用）输出undefined）</li></ol><h2 id="三-调用函数"><a href="#三-调用函数" class="headerlink" title="三. 调用函数"></a>三. 调用函数</h2><p>语法：函数名();<br>声明式函数和赋值式函数的函数调用方式都是 <code>函数名();</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">sayHello</span>();<span class="comment">// 通过调用函数名来执行函数体代码</span></span><br></pre></td></tr></table></figure><p>$\color{red}{注意}$：声明函数本身并不会执行代码，只有调用函数时才会执行函数体代码。</p><h2 id="四-形参和实参"><a href="#四-形参和实参" class="headerlink" title="四. 形参和实参"></a>四. 形参和实参</h2><p><strong>形参</strong>：在声明函数时，可以在函数名称后面的小括号中添加一些参数，这些参数被称为形参。</p><blockquote><p>定义函数时，可以在()中定义一个或多个形参，形参之间使用<code>,</code>隔开。定义形参就相当于在函数内声明了对应的变量但是并不赋值。形参会在调用时才赋值。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> 函数名(形参<span class="number">1</span>,形参<span class="number">2.</span>..)&#123;</span><br><span class="line">    <span class="comment">// 函数体</span></span><br><span class="line">&#125;</span><br><span class="line">函数名(实参<span class="number">1</span>,实参<span class="number">2.</span>..);</span><br></pre></td></tr></table></figure><p><strong>实参</strong>：在调用函数时，同样也需要传递相应的参数，这些参数被称为实参。<br><strong>使用实参的的一些情况</strong>：</p><ul><li>调用函数时，可以在()传递实参，传递的实参会赋值给对应的形参。</li><li>调用函数时JS解析器不会检查实参的类型和个数，可以传递任意数据类型的值。</li><li>如果实参的数量大于形参，多余实参将不会赋值。</li><li>如果实参的数量小于形参，则没有对应实参的形参将会赋值undefined。<br><strong>函数形参与实参个数匹配</strong></li></ul><ol><li>如果实参的个数和形参的个数一致，正常输出结果。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getSum</span>(<span class="params">num1,num2</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num1 + num2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getSum</span>(<span class="number">1</span>,<span class="number">2</span>);<span class="comment">//3</span></span><br></pre></td></tr></table></figure></li><li>如果实参的个数多于形参的个数，会取形参个数相对应的实参进行运算<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getSum</span>(<span class="params">num1,num2</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num1 + num2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getSum</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);<span class="comment">//3</span></span><br></pre></td></tr></table></figure></li><li>如果实参的个数少于形参的个数，结果：NaN<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getSum</span>(<span class="params">num1,num2</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num1 + num2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getSum</span>(<span class="number">1</span>);<span class="comment">//1+undefined = NaN</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="五-返回值（return）"><a href="#五-返回值（return）" class="headerlink" title="五. 返回值（return）"></a>五. 返回值（return）</h2><blockquote><p>使用return 来设置函数的返回值。</p></blockquote><p>函数的返回值格式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> 函数名()&#123;</span><br><span class="line">    <span class="keyword">return</span> 需要返回的结果;</span><br><span class="line">&#125;</span><br><span class="line">函数名();</span><br></pre></td></tr></table></figure><p><strong>注意事项</strong>：</p><ul><li>该值就会成为函数的返回值，可以通过一个变量来接收返回值。</li><li><strong>return后边的代码都不会执行，一旦执行到return语句时，函数将会立刻退出。</strong></li><li>return后可以跟任意类型的值，可以是基本数据类型，也可以是一个对象。</li><li>如果return后不跟值，或者是不写return则函数默认返回undefined。</li><li>return只能返回一个值（以最后一个为准）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getSum</span>(<span class="params">num1, num2</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> num1 + num2, num1 - num2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getSum</span>(<span class="number">1</span>, <span class="number">2</span>));<span class="comment">// -1</span></span><br></pre></td></tr></table></figure><strong>案例—编写一个函数，计算两个数字的和、差、积、商</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">calc</span>(<span class="params">n1, n2, option</span>) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (option) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> n1 + n2; <span class="comment">//有了return,省略break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> n1 - n2; </span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> n1 * n2; </span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> n1 / n2; </span><br><span class="line">        <span class="attr">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;输入有误&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">calc</span>(<span class="number">3</span>, <span class="number">4</span>, <span class="string">&#x27;+&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">calc</span>(<span class="number">3</span>, <span class="number">4</span>, <span class="string">&#x27;-&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">calc</span>(<span class="number">3</span>, <span class="number">4</span>, <span class="string">&#x27;*&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">calc</span>(<span class="number">3</span>, <span class="number">4</span>, <span class="string">&#x27;/&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">calc</span>());</span><br></pre></td></tr></table></figure></li></ul><h2 id="六-break、continue和return区别"><a href="#六-break、continue和return区别" class="headerlink" title="六. break、continue和return区别"></a>六. break、continue和return区别</h2><ol><li>break<br> 退出当前的循环体</li><li>continue<br> 跳过当次循环，继续下次循环</li><li>return<br> 退出函数</li></ol><h2 id="七-arguments-的使用"><a href="#七-arguments-的使用" class="headerlink" title="七. arguments 的使用"></a>七. arguments 的使用</h2><p>当我们不确定有多少个参数传递时，可以用$\color{red}{arguments}$来获取。在JavaScript中，arguments实际上是当前函数的一个$\color{red}{内置对象}$。所有函数都内置了一个arguments对象，arguments对象中$\color{red}{存储了传递的所有实参}$​。<br>arguments ：<strong>伪数组</strong>，并不是真正意义上的数组。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="comment">/* Arguments(3) [1, 2, 3, callee: ƒ, Symbol(Symbol.iterator): ƒ]</span></span><br><span class="line"><span class="comment">0:1</span></span><br><span class="line"><span class="comment">1:2</span></span><br><span class="line"><span class="comment">2:3*/</span></span><br></pre></td></tr></table></figure><p><strong>案例—利用函数求任意个数的最大值</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getMax</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> max = <span class="variable language_">arguments</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">arguments</span>[i] &gt; max) &#123;</span><br><span class="line">            max = <span class="variable language_">arguments</span>[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getMax</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));<span class="comment">// 3</span></span><br></pre></td></tr></table></figure><p><strong>注意事项</strong>：</p><ol><li>具有数组的length属性</li><li>按照索引的方式进行存储的</li><li>没有pop()、push()方法</li></ol><h2 id="八-常见的代码错误"><a href="#八-常见的代码错误" class="headerlink" title="八. 常见的代码错误"></a>八. 常见的代码错误</h2><blockquote><p>Debug:Delete(删除) Bug(错误)</p></blockquote><p>console面板提示错误信息，而且错误信息的种类比较多，这里列出常见的错误种类，以及如何快速解决。</p><ol><li>ReferenceError:引用错误，一般是什么的变量或者标识符根本不存在。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// console.log(a);</span></span><br><span class="line"><span class="comment">// hehe();</span></span><br></pre></td></tr></table></figure></li><li>SyntaxError:语法错误，违背语言约定的语法规则。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var 1abc = 10;</span></span><br></pre></td></tr></table></figure></li><li>RangeError:范围错误，输入的值，设置的值超出约到的范围。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var num = 3.1415;</span></span><br><span class="line"><span class="comment">// console.log(num.toFixed(2)); //3.14</span></span><br><span class="line"><span class="comment">// console.log(num.toFixed(-2)); //保存</span></span><br></pre></td></tr></table></figure></li><li>TypeError:类型错误，该语法不是这么玩的。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 123();</span></span><br></pre></td></tr></table></figure><code>注</code>：代码没有达到预期的结果，先查看console控制面板，检查是否存在错误。</li></ol><h2 id="九-函数的一些经典案例"><a href="#九-函数的一些经典案例" class="headerlink" title="九. 函数的一些经典案例"></a>九. 函数的一些经典案例</h2><h3 id="1-判断一个正整数是否为质数"><a href="#1-判断一个正整数是否为质数" class="headerlink" title="1. 判断一个正整数是否为质数"></a>1. 判断一个正整数是否为质数</h3><blockquote><p>编写一个函数 传入一个正整数作为参数，判断传入的数是否为质数，返回一个布尔值结果。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isPrime</span>(<span class="params">n</span>) &#123; <span class="comment">//n:检测的数字</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">isNaN</span>(n) &amp;&amp; n % <span class="number">1</span> === <span class="number">0</span>) &#123; <span class="comment">//检查是数字，同时检查正整数</span></span><br><span class="line">        <span class="keyword">if</span> (n === <span class="number">1</span>) &#123; <span class="comment">//排除1</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">2</span>; i &lt;= n / <span class="number">2</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (n % i === <span class="number">0</span>) &#123; <span class="comment">//如果break有效，证明当前的数字一定不是质数</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> !(i &lt;= n / <span class="number">2</span>); <span class="comment">//true不是质数，否则是质数</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;输入有误&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isPrime</span>(<span class="number">13</span>)); <span class="comment">//质数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isPrime</span>(<span class="number">10</span>)); <span class="comment">//不是质数</span></span><br></pre></td></tr></table></figure><h3 id="2-写函数判断输入的年份是否为闰年"><a href="#2-写函数判断输入的年份是否为闰年" class="headerlink" title="2. 写函数判断输入的年份是否为闰年"></a>2. 写函数判断输入的年份是否为闰年</h3><blockquote><p>编写一个函数，传入一个 1000-3000 之间的正整数为参数，判断这个年份是否是闰年，并返回布尔值为结果</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isLeap</span>(<span class="params">n</span>) &#123; <span class="comment">//n:检测的数字</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">isNaN</span>(n) &amp;&amp; n % <span class="number">1</span> === <span class="number">0</span> &amp;&amp; n &gt;= <span class="number">1000</span> &amp;&amp; n &lt;= <span class="number">3000</span>) &#123; <span class="comment">//检查是数字，同时检查正整数</span></span><br><span class="line">        <span class="keyword">if</span> (n % <span class="number">4</span> === <span class="number">0</span> &amp;&amp; n % <span class="number">100</span> !== <span class="number">0</span> || n % <span class="number">400</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;输入有误&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isLeap</span>(<span class="number">2022</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isLeap</span>(<span class="number">2020</span>));</span><br></pre></td></tr></table></figure><h3 id="3-创建几行几列的表格"><a href="#3-创建几行几列的表格" class="headerlink" title="3. 创建几行几列的表格"></a>3. 创建几行几列的表格</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">cTable</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;table border=1&gt;&#x27;</span>);</span><br><span class="line">    <span class="comment">// 循环绘制tr</span></span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">1</span>; <span class="comment">//初始，执行一次</span></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= a) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;tr&gt;&#x27;</span>);</span><br><span class="line">        <span class="comment">// 循环绘制td</span></span><br><span class="line">        <span class="keyword">var</span> j = <span class="number">1</span>; <span class="comment">//注意：必须放到循环体中，每次从1开始的</span></span><br><span class="line">        <span class="keyword">while</span> (j &lt;= b) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;td&gt;1111111&lt;/td&gt;&#x27;</span>);</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;/tr&gt;&#x27;</span>);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;/table&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">cTable</span>(<span class="number">3</span>, <span class="number">3</span>);</span><br><span class="line"><span class="title function_">cTable</span>(<span class="number">5</span>, <span class="number">5</span>);</span><br><span class="line"><span class="title function_">cTable</span>(<span class="number">7</span>, <span class="number">7</span>)</span><br></pre></td></tr></table></figure><h2 id="十-预解析"><a href="#十-预解析" class="headerlink" title="十. 预解析"></a>十. 预解析</h2><h3 id="一-概述"><a href="#一-概述" class="headerlink" title="(一)概述"></a>(一)概述</h3><blockquote><p>在代码执行之前，对代码进行通读并解析</p></blockquote><p><strong>首先，思考两个问题</strong>：<br>为什么变量可以变量提升，并且同时输出undefined?</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// undefined</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><p>为什么声明式函数可以在任意地方进行调用?</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"><span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();</span><br></pre></td></tr></table></figure><p>针对以上的两个问题，就要说到预解析的作用了。<br><strong>预解析特点</strong>：</p><ol><li>预解析只会解析 <strong>var 声明的变量</strong> 和 <strong>声明式函数</strong></li><li>赋值式函数，按照var 的方式进行预解析</li><li>函数里面的变量，不会进行预解析，</li><li>函数里面的代码会在该函数调用的时候，进行预解析<br>预解析：<strong>解析 var 声明的变量</strong><blockquote><p>提前声明这一个变量，但是不赋值</p></blockquote></li></ol><p>预解析：<strong>解析 声明式函数</strong></p><blockquote><p>提前声明这个变量，并且赋值为一个函数</p></blockquote><h3 id="二-解读预解析两步"><a href="#二-解读预解析两步" class="headerlink" title="(二) 解读预解析两步"></a>(二) 解读预解析两步</h3><h4 id="预解析的两大步骤"><a href="#预解析的两大步骤" class="headerlink" title="预解析的两大步骤"></a>预解析的两大步骤</h4><p>(1) 预编译，代码进入浏览器逐行执行之前干的事情(不可见)(案例1-4会分别解释以下四句话)</p><ol><li>先找var和function关键字，<strong>找到var，提前赋值undefined</strong>。<strong>找到function，提前将整个函数体赋值给函数名称</strong>。</li><li>如果预编译函数名和变量名出现重复，函数名优先(去除变量名)</li><li>函数内部依然做预编译，同时函数的参数类似函数内部的变量，也要做预编译。</li><li>函数如果带有形参，要<strong>先形参赋值，在进行预解析</strong><br>(2) 逐行执行，代码进入浏览器，可以根据浏览器返回的信息，查看结果，同时遇到代码错误，立刻停止执行。<blockquote><p>函数声明直接跳过，函数必须调用才有意义。</p></blockquote></li></ol><h4 id="案例1"><a href="#案例1" class="headerlink" title="案例1"></a>案例1</h4><blockquote><p>分析预编译的结果：提前进入浏览器的引擎 先找var和function关键字，<strong>找到var，提前赋值undefined</strong>。<strong>找到function，提前将整个函数体赋值给函数名称</strong>。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 要执行的代码</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;函数&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();</span><br></pre></td></tr></table></figure><p><strong>分析思路</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.首先对上述代码进行预编译：</span></span><br><span class="line">a = <span class="literal">undefined</span>;</span><br><span class="line">fn = <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;函数&#x27;</span>);&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.然后，进入逐行执行：</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 输出：undefined</span></span><br><span class="line"><span class="title function_">fn</span>(); <span class="comment">// 输出：函数</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>; <span class="comment">// 这里将预编译的结果进行覆盖：a = 10</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 输出：10</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;函数&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(); <span class="comment">// 输出：函数</span></span><br></pre></td></tr></table></figure><h4 id="案例2"><a href="#案例2" class="headerlink" title="案例2"></a>案例2</h4><blockquote><p>分析预编译的结果：提前进入浏览器的引擎 <strong>如果预编译函数名和变量名出现重复，函数名优先(去除变量名)</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 要执行的代码</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); </span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;函数&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); </span><br></pre></td></tr></table></figure><p><strong>分析思路</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.首先，对上述代码进行预编译：</span></span><br><span class="line"><span class="comment">// 由于函数名和变量名出现重复，函数名优先(去除变量名)</span></span><br><span class="line">a =  <span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;函数&#x27;</span>);&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.然后，进入逐行执行：</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 输出：function a() &#123;console.log(&#x27;函数&#x27;);&#125;</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>; <span class="comment">// 修改预编译的结果： a = 10</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 输出：10</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;函数&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 输出：10</span></span><br></pre></td></tr></table></figure><h4 id="案例3"><a href="#案例3" class="headerlink" title="案例3"></a>案例3</h4><blockquote><p>分析函数内部预编译的结果：提前进入浏览器的引擎 <strong>函数内部依然做预编译，同时函数的参数类似函数内部的变量，也要做预编译。</strong></p></blockquote><p><code>注意</code>：只要函数存在形参，一定要做预编译。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 要执行的代码</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a); </span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">20</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a); </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fn</span>());</span><br></pre></td></tr></table></figure><p><strong>分析思路</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.首先进行预编译：</span></span><br><span class="line">a = <span class="literal">undefined</span>;</span><br><span class="line">fn = <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">a</span>) &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(a); a = <span class="number">20</span>; <span class="variable language_">console</span>.<span class="title function_">log</span>(a); &#125;</span><br><span class="line"><span class="comment">// 注意：只要函数存在形参，一定要做预编译。</span></span><br><span class="line"><span class="comment">// 2.代码依次执行</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123; </span><br><span class="line">    <span class="comment">// 2.1首先函数内部预解析</span></span><br><span class="line">    a = <span class="literal">undefined</span>;</span><br><span class="line">    <span class="comment">// 2.2然后执行代码</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 输出：undefined</span></span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">20</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 修改预编译的结果： a = 20</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fn</span>()); <span class="comment">// 输出：undefined（因为函数没有写return，没有返回值）</span></span><br></pre></td></tr></table></figure><h4 id="案例4"><a href="#案例4" class="headerlink" title="案例4"></a>案例4</h4><blockquote><p>分析函数内部预编译的结果：提前进入浏览器的引擎 函数内部要做预编译，同时<strong>函数如果带有形参，要先形参赋值，在进行预解析。</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 要执行的代码</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a); </span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">20</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a); </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fn</span>(a));</span><br></pre></td></tr></table></figure><p><strong>分析思路</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.首先进行预编译：</span></span><br><span class="line">a = <span class="literal">undefined</span>;</span><br><span class="line">fn = <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">a</span>) &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(a); a = <span class="number">20</span>; <span class="variable language_">console</span>.<span class="title function_">log</span>(a); &#125;</span><br><span class="line"><span class="comment">// 注意：只要函数存在形参，一定要做预编译。</span></span><br><span class="line"><span class="comment">// 2.代码依次执行</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">a</span>) &#123; </span><br><span class="line">    <span class="comment">// 2.1首先函数内部预解析</span></span><br><span class="line">    a = <span class="literal">undefined</span>;</span><br><span class="line">    <span class="comment">// 2.2然后执行代码</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 输出：1（因为在预解析前先进行了形参赋值）</span></span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">20</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 修改预编译的结果： a = 20</span></span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fn</span>(a)); <span class="comment">// 输出：20</span></span><br></pre></td></tr></table></figure><h2 id="十一-自执行函数"><a href="#十一-自执行函数" class="headerlink" title="十一. 自执行函数"></a>十一. 自执行函数</h2><h3 id="一-函数的优点和注意事项"><a href="#一-函数的优点和注意事项" class="headerlink" title="(一) 函数的优点和注意事项"></a>(一) 函数的优点和注意事项</h3><blockquote><p>函数就是对一段代码的封装，在我们想调用的时候调用</p></blockquote><h4 id="1-函数的优点"><a href="#1-函数的优点" class="headerlink" title="(1) 函数的优点"></a>(1) 函数的优点</h4><ol><li>封装(封装多条代码，方便管理维护)；</li><li>重用(重复使用,解决代码冗余)；</li><li>可扩展(函数内部的功能以及参数)。</li></ol><h4 id="2-注意事项"><a href="#2-注意事项" class="headerlink" title="(2) 注意事项"></a>(2) 注意事项</h4><ol><li>函数名等于函数体<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">alert</span>(fn) <span class="comment">//输出函数名，没有调用，将整个函数结构体输出。</span></span><br></pre></td></tr></table></figure></li><li>typeof检测函数 — 返回function<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">typeof</span>(fn));<span class="comment">// function</span></span><br></pre></td></tr></table></figure></li><li>声明的函数如果不调用，函数相当于不存在。通过调用找函数</li></ol><h3 id="二-自执行函数"><a href="#二-自执行函数" class="headerlink" title="(二) 自执行函数"></a>(二) 自执行函数</h3><blockquote><p>重要的函数种类：自执行函数，将函数的声明和调用写到一起，自动调用，一次性的。</p></blockquote><h4 id="1-自执行函数的书写方式"><a href="#1-自执行函数的书写方式" class="headerlink" title="(1) 自执行函数的书写方式"></a>(1) 自执行函数的书写方式</h4><ul><li><strong>方式一</strong>：<blockquote><p>利用括号()将函数体包裹起来</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> (<span class="params">n1, n2</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(n1 + n2);</span><br><span class="line">&#125;)(<span class="number">1</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure></li><li><strong>方式二</strong>：<blockquote><p>利用逻辑运算符(!(使用居多)、+、~等)将前面的函数体进行打包</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">! <span class="keyword">function</span>(<span class="params">n1, n2</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(n1 + n2);</span><br><span class="line">&#125;(<span class="number">1</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-自执行函数的优缺点"><a href="#2-自执行函数的优缺点" class="headerlink" title="(2) 自执行函数的优缺点"></a>(2) 自执行函数的优缺点</h4><p><strong>优点</strong>：可以解决代码冲突</p><blockquote><p>在书写代码的时候，往往下面的代码会覆盖上面的代码，而用自执行函数就可以解决这一问题</p></blockquote><p><strong>缺点</strong>：它是一次性的</p><h3 id="三-函数之间的相互调用"><a href="#三-函数之间的相互调用" class="headerlink" title="(三) 函数之间的相互调用"></a>(三) 函数之间的相互调用</h3><blockquote><p>函数与函数之间是可以进行相互调用的</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">111</span>);</span><br><span class="line">    <span class="title function_">fn2</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;fn1&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">222</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;fn2&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn1</span>();</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">111</span></span><br><span class="line"><span class="comment">222</span></span><br><span class="line"><span class="comment">fn2</span></span><br><span class="line"><span class="comment">fn1</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="十二-作用域"><a href="#十二-作用域" class="headerlink" title="十二. 作用域"></a>十二. 作用域</h2><h3 id="什么是作用域"><a href="#什么是作用域" class="headerlink" title="什么是作用域?"></a>什么是作用域?</h3><blockquote><p>就是一个变量可以生效(访问)的范围，变量不是在所有地方都可以使用的，而这个变量的使用范围就是作用域。</p></blockquote><p><code>目的</code>：为了提高程序的可靠性和减少命名冲突<br><strong>在JS中作用域分成三种</strong>：</p><h3 id="1-全局作用域"><a href="#1-全局作用域" class="headerlink" title="(1) 全局作用域"></a>(1) 全局作用域</h3><p>直接在script标签中编写的代码都运行在全局作用域中。</p><blockquote><p>任何不在函数中或是大括号中声明的变量，都是在全局作用域下，全局作用域下声明的变量可以在程序的任意位置访问。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> a = <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a);<span class="comment">// 10</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意事项</strong>：</p><ol><li>全局作用域在打开页面时创建，在页面关闭时销毁。</li><li>全局作用域中有一个全局对象window，window对象由浏览器提供，可以在页面中直接使用，它代表的是整个的浏览器的窗口。</li><li>在全局作用域中创建的变量都会作为window对象的属性保存，在全局作用域中创建的函数都会作为window对象的方法保存。</li><li>在全局作用域中创建的变量和函数可以在页面的任意位置访问。在函数作用域中也可以访问到全局作用域的变量。</li></ol><h3 id="2-局部作用域"><a href="#2-局部作用域" class="headerlink" title="(2) 局部作用域"></a>(2) 局部作用域</h3><p><strong>局部作用域（也叫函数作用域）</strong>就是在全局作用域下面有开辟出来的一个相对小一些的作用域，在局部作用域中定义的变量只能在这个局部作用域内部使用。<br>在JavaScript中<strong>只有函数能生成一个局部作用域</strong>， 别的都不行。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">20</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();<span class="comment">// 20</span></span><br></pre></td></tr></table></figure><p><strong>注意事项</strong>：</p><ol><li>函数作用域是函数执行时创建的作用域，每次调用函数都会创建一个新的函数作用域。</li><li>函数作用域在函数执行时创建，在函数执行结束时销毁。</li><li>在函数作用域中创建的变量，不能在全局中访问。</li><li>当在函数作用域中使用一个变量时，它会先在自身作用域中寻找：<blockquote><p>如果找到了则直接使用，如果没有找到则到上一级作用域中寻找；</p></blockquote></li></ol><p>如果找到了则使用，找不到则一直会继续向上找。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>; <span class="comment">// 全局作用域</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">100</span>; <span class="comment">// 局部作用域  </span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 10  a是全局</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(b); <span class="comment">// 100 b是局部，函数内部使用</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 10  a是全局</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b); <span class="comment">// 报错，b是局部，函数外面无法访问</span></span><br></pre></td></tr></table></figure><h3 id="3-块级作用域"><a href="#3-块级作用域" class="headerlink" title="(3) 块级作用域"></a>(3) 块级作用域</h3><p>ES6引入了<code>let</code>和<code>const</code>关键字，和<code>var</code>关键字不同，在大括号中使用<code>let</code>和<code>const</code>声明的变量存在于块级作用域中。在大括号之外不能访问这些变量。</p><h3 id="特殊情况"><a href="#特殊情况" class="headerlink" title="特殊情况"></a>特殊情况</h3><blockquote><p>如果函数内部声明的变量，声明的时候<strong>没有添加var关键字</strong>，函数内部声明的变量视为全局变量。</p></blockquote><p>(1) 外部定义了全局变量，函数内部直接改变这个全局变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>; <span class="comment">//全局</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    a = <span class="number">100</span>; <span class="comment">//可以使用全局，改变全局</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">//100  全局</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">//100  全局</span></span><br></pre></td></tr></table></figure><p>(2) 外部没有定义了全局变量，而是忽略的var关键字，b变成全局变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    b = <span class="number">200</span>; </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(b); <span class="comment">//200</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn1</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b); <span class="comment">//200</span></span><br></pre></td></tr></table></figure><h2 id="十三-作用域链"><a href="#十三-作用域链" class="headerlink" title="十三. 作用域链"></a>十三. 作用域链</h2><h3 id="1-概念"><a href="#1-概念" class="headerlink" title="(1) 概念"></a>(1) 概念</h3><p>内部函数访问外部函数的变量，采用的是<strong>链式查找</strong>的方式来决定取哪个值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fn2</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">fn2</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();<span class="comment">// 20</span></span><br></pre></td></tr></table></figure><p>有了作用域以后，变量就有了使用范围，也就有了使用规则<br>变量使用规则分为两种：<strong>访问规则</strong> 和 <strong>赋值规则</strong></p><h3 id="2-访问规则"><a href="#2-访问规则" class="headerlink" title="(2) 访问规则"></a>(2) 访问规则</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当我想获取一个变量的值的时候，我们管这个行为叫做访问</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);<span class="comment">//访问</span></span><br></pre></td></tr></table></figure><p><strong>首先，在自己的作用域内部查找</strong>：</p><ul><li>如果有，就直接拿来使用；</li><li>如果没有，就去上一级作用域查找，如果有，就拿来使用；</li><li>如果没有，就继续去上一级作用域查找，依次类推；</li><li>如果一直到全局作用域都没有这个变量，那么就会直接报错（该变量 is not defined）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>; <span class="comment">// 全局作用域 全局变量</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">100</span>; <span class="comment">// 局部变量 f1作用域中的局部变量</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fn2</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// var a = 1000; // 局部变量  f2作用域中的局部变量</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(a); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">fn1</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(); <span class="comment">// 100</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-赋值规则"><a href="#3-赋值规则" class="headerlink" title="(3) 赋值规则"></a>(3) 赋值规则</h3><p>当你想给一个变量赋值的时候，那么就先要找到这个变量，再给他赋值。</p><ul><li>先在自己作用域内部查找，有就直接赋值；</li><li>没有就去上一级作用域内部查找，有就直接赋值；</li><li>还没有再去上一级作用域查找，有就直接赋值；</li><li>如果<strong>一直找到全局作用域都没有</strong>，那么就<strong>把这个变量定义为全局变量</strong>，再给他赋值。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = b = <span class="number">3</span>; <span class="comment">// b = 3   var a = b;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a, b); <span class="comment">// 3,3</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b); <span class="comment">// 3 // 注：b的声明前面没有var关键字，变成全局的</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 报错，a是局部变量</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="4-案例"><a href="#4-案例" class="headerlink" title="(4) 案例"></a>(4) 案例</h3><p><strong>案例1</strong></p><blockquote><p>先在自己作用域内部查找，有就直接赋值；</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> n = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> n = <span class="number">200</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;f1 前&quot;</span>, n); <span class="comment">// 找自己作用域中的变量n， 如果有，直接使用</span></span><br><span class="line">    n = <span class="number">500</span>; <span class="comment">// 赋值，先找自己作用域中的变量n，如果有，直接赋值，这里把自己作用域中的n修改掉</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;f1 后&quot;</span>, n); <span class="comment">// 访问，找自己作用域中的变量n，如果有，直接使用</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;全局前&quot;</span>, n); <span class="comment">// 访问规则，找全局变量n n = 100</span></span><br><span class="line"><span class="title function_">f1</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;全局后&quot;</span>, n); <span class="comment">// 访问机制，找全局变量n n = 100</span></span><br></pre></td></tr></table></figure><p><strong>案例2</strong></p><blockquote><p>没有就去上一级作用域内部查找，有就直接赋值； 还没有再去上一级作用域查找，有就直接赋值；</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> n = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;f1 前&quot;</span>, n); <span class="comment">// 第二个打印，在自己作用域中找，向上一级找，找到window 中有一个n n === 100</span></span><br><span class="line">    n = <span class="number">500</span>; <span class="comment">// 赋值 ，在自己作用域中没找到，向上一级找，找到window 中有一个n n === 500</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;f1 后&quot;</span>, n); <span class="comment">// 第三个打印，在自己作用域中找没找到，向上一级找，找到window中有一个n  n === 500</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;全局前&quot;</span>, n); <span class="comment">// 第一个打印，自己作用域(window) 找到全局变量n n = 100</span></span><br><span class="line"><span class="title function_">f1</span>(); <span class="comment">// 第二步 函数调用，找到函数体里面的代码执行</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;全局后&quot;</span>, n); <span class="comment">// 第四个打印，找自己作用域(window) 找到了 n === 500</span></span><br></pre></td></tr></table></figure><p><strong>案例3</strong></p><blockquote><p>如果<strong>一直找到全局作用域都没有</strong>，那么就<strong>把这个变量定义为全局变量</strong>，再给他赋值。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    n = <span class="number">500</span>; <span class="comment">// 赋值  从自己作用域中找，没找到，向上找，找到window ，window没有，直接把这个n当做全局变量n进行赋值</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;f1后&quot;</span>, n); <span class="comment">// 从自己找，没找到向上找，找到window window有一个全局变量n n === 500</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">f1</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;全局&quot;</span>, n); <span class="comment">// 从自己找，没找到向上找，找到window，window有一个全局变量n n === 500</span></span><br></pre></td></tr></table></figure><h2 id="十四-作用域和作用域链相关面试题"><a href="#十四-作用域和作用域链相关面试题" class="headerlink" title="十四. 作用域和作用域链相关面试题"></a>十四. 作用域和作用域链相关面试题</h2><h3 id="面试题一"><a href="#面试题一" class="headerlink" title="面试题一"></a>面试题一</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = b;</span><br><span class="line">a = <span class="number">20</span>;</span><br><span class="line">b = <span class="number">20</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 报错，b is not defined</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b); </span><br></pre></td></tr></table></figure><p><strong>解题思路</strong>：</p><ol><li>打开浏览器</li><li>预解析<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只有第一行代码需要预解析</span></span><br><span class="line"><span class="comment">// 提前声明一个变量a 不赋值</span></span><br></pre></td></tr></table></figure></li><li>代码执行<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// a = b 赋值</span></span><br><span class="line"><span class="comment">// 把b变量对应的值赋给a</span></span><br><span class="line"><span class="comment">// 有没有b这个变量， 在作用域中找到b这个变量，报错 b is not defined </span></span><br></pre></td></tr></table></figure></li></ol><h3 id="面试题二"><a href="#面试题二" class="headerlink" title="面试题二"></a>面试题二</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = b = <span class="number">10</span></span><br><span class="line">a = <span class="number">20</span></span><br><span class="line">b = <span class="number">20</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a) <span class="comment">// 20</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b) <span class="comment">// 20</span></span><br></pre></td></tr></table></figure><p><strong>解题思路</strong>：</p><ol><li>打开浏览器</li><li>进行预解析<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只有第一行代码需要预解析</span></span><br><span class="line"><span class="comment">// 提前声明一个变量a 不赋值</span></span><br></pre></td></tr></table></figure></li><li>代码执行<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.执行第一行代码</span></span><br><span class="line">    <span class="comment">// var a = b = 10 实际上等同于 var a = (b = 10) </span></span><br><span class="line">    <span class="comment">// b = 10要先处理，按照赋值机制处理，这里把b定义为全局变量再进行赋值</span></span><br><span class="line">    <span class="comment">// 然后再将b中得到的10赋值给a</span></span><br><span class="line"><span class="comment">// 2.</span></span><br><span class="line">    <span class="comment">// a = 20 给a重新赋值为20</span></span><br><span class="line">    <span class="comment">// b = 20 给b重新赋值为20</span></span><br><span class="line"><span class="comment">// 3. </span></span><br><span class="line">    <span class="comment">// console.log(a) 打印a的值 // 20</span></span><br><span class="line">    <span class="comment">// console.log(b) 打印b的值 // 20</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="十五-递归函数"><a href="#十五-递归函数" class="headerlink" title="十五. 递归函数"></a>十五. 递归函数</h2><p>在编程世界里面，递归函数是在一个函数通过名字调用自身情况下构成的，即函数内部调用函数本身。它是一种比较高阶的操作。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="title function_">fn</span>(); <span class="comment">//函数调用函数自身</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();</span><br></pre></td></tr></table></figure><p>递归需要有边界条件、递归前进段和递归返回段。当边界条件不满足时，递归前进；当边界条件满足时，递归返回。<br><strong>递归函数的书写技巧</strong>：</p><ol><li>先写一个函数</li><li>先找到折返点</li><li>未找到折返点，不要忘记return<br><strong>用递归需要注意以下两点</strong>：</li><li>递归就是在过程或函数里调用自身。</li><li>在使用递归策略时， 必须有一个明确的递归结束条件， 称为递归出口。</li></ol><h2 id="十六-递归的简单应用"><a href="#十六-递归的简单应用" class="headerlink" title="十六. 递归的简单应用"></a>十六. 递归的简单应用</h2><h3 id="1-使用一个函数，求阶乘"><a href="#1-使用一个函数，求阶乘" class="headerlink" title="(1) 使用一个函数，求阶乘"></a>(1) 使用一个函数，求阶乘</h3><p><strong>分析</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 阶乘：5！：5*4*3*2*1 ==&gt; 5*4!</span></span><br><span class="line"><span class="comment">//      4！：4*3*2*1   ==&gt; 4*3!</span></span><br><span class="line"><span class="comment">//      3！：3*2*1     ==&gt; 3*2!</span></span><br><span class="line"><span class="comment">//      2！：3*2*1     ==&gt; 2*1!</span></span><br><span class="line"><span class="comment">//      1！：1         ==&gt; 1</span></span><br><span class="line"><span class="comment">//      得到结论：n! = n * (n-1)!</span></span><br><span class="line"><span class="comment">// 折返点：n为1</span></span><br></pre></td></tr></table></figure><p><strong>代码编写</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn1</span>(<span class="params">n</span>) &#123; <span class="comment">//n=5   求n的阶乘，n的阶乘 = n * n-1!</span></span><br><span class="line">    <span class="keyword">if</span> (n === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n * <span class="title function_">fn1</span>(n - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fn1</span>(<span class="number">5</span>)); <span class="comment">// 120</span></span><br></pre></td></tr></table></figure><blockquote><p>如果没有递归出口，程序报栈溢出(RangeError: Maximum call stack size exceeded)</p></blockquote><h3 id="2-求斐波那契数列第20位。"><a href="#2-求斐波那契数列第20位。" class="headerlink" title="(2) 求斐波那契数列第20位。"></a>(2) 求斐波那契数列第20位。</h3><p><strong>斐波那契数列</strong>：字面理解就是：后一个数等于前两个数的和。<br><strong>分析</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1,1,2,3,5,8,13,21......</span></span><br><span class="line"><span class="comment">// 第一项是1，第二项1，从第三项开始，后面的数字等于前面两个数字的和。</span></span><br><span class="line"><span class="comment">// fb(20) = fb(19) + fb(18)</span></span><br><span class="line"><span class="comment">// fb(19) = fb(18) + fb(17)</span></span><br><span class="line"><span class="comment">// ......</span></span><br><span class="line"><span class="comment">// fb(3) = fb(2) + fb(1)</span></span><br><span class="line"><span class="comment">// 递归出口：fb(2) + fb(1)</span></span><br><span class="line"><span class="comment">// fb(2) = 1;</span></span><br><span class="line"><span class="comment">// fb(1) = 1;</span></span><br></pre></td></tr></table></figure><p><strong>代码执行</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fb</span>(<span class="params">n</span>) &#123; <span class="comment">//n=20</span></span><br><span class="line">    <span class="keyword">if</span> (n === <span class="number">1</span> || n === <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">fb</span>(n - <span class="number">1</span>) + <span class="title function_">fb</span>(n - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fb</span>(<span class="number">20</span>)); <span class="comment">//6765</span></span><br></pre></td></tr></table></figure><h3 id="3-使用一个函数，求当n为偶数时：计算1-2-1-4-1-6-…-1-n；当n为奇数时：计算1-1-3-1-5-…-1-n"><a href="#3-使用一个函数，求当n为偶数时：计算1-2-1-4-1-6-…-1-n；当n为奇数时：计算1-1-3-1-5-…-1-n" class="headerlink" title="(3) 使用一个函数，求当n为偶数时：计算1&#x2F;2+1&#x2F;4+1&#x2F;6+…+1&#x2F;n；当n为奇数时：计算1+1&#x2F;3+1&#x2F;5+…+1&#x2F;n"></a>(3) 使用一个函数，求当n为偶数时：计算1&#x2F;2+1&#x2F;4+1&#x2F;6+…+1&#x2F;n；当n为奇数时：计算1+1&#x2F;3+1&#x2F;5+…+1&#x2F;n</h3><p><strong>分析</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// n为偶数：</span></span><br><span class="line"><span class="comment">// n=8 ===&gt; 1/2+1/4+1/6+1/8 ===&gt; fn(6)+1/8</span></span><br><span class="line"><span class="comment">// n=6 ===&gt; 1/2+1/4+1/6     ===&gt; fn(4)+1/6</span></span><br><span class="line"><span class="comment">// n=4 ===&gt; 1/2+1/4         ===&gt; fn(2)+1/4</span></span><br><span class="line"><span class="comment">// n=2 ===&gt; 1/2</span></span><br><span class="line"><span class="comment">// n为奇数：</span></span><br><span class="line"><span class="comment">// n=7 ===&gt; 1+1/3+1/5+1/7 ===&gt; fn(5)+1/7</span></span><br><span class="line"><span class="comment">// n=5 ===&gt; 1+1/3+1/5     ===&gt; fn(3)+1/5</span></span><br><span class="line"><span class="comment">// n=3 ===&gt; 1+1/3         ===&gt; fn(1)+1/3</span></span><br><span class="line"><span class="comment">// n=1 ===&gt; 1</span></span><br><span class="line"><span class="comment">// 折返点：n为1和2</span></span><br></pre></td></tr></table></figure><p><strong>代码执行</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn3</span>(<span class="params">n</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (n === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n === <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> / n + <span class="title function_">fn3</span>(n - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fn3</span>(<span class="number">100</span>)); <span class="comment">// 2.2496026691647115</span></span><br></pre></td></tr></table></figure><p><strong>递归的缺点</strong></p><blockquote><p>虽然递归和循环有类似的思想而且通过上面的例子看上去很好用，但是这边<strong>建议少用递归</strong>，因为运行效率低，容易出现死循环(栈溢出)，只有像类似于求斐波那契数列这样的题目实在没办法在用递归。</p></blockquote><p>总之能用循环写，尽量用循环写。</p><h2 id="十七-函数在两个阶段-定义、调用-做了什么事情"><a href="#十七-函数在两个阶段-定义、调用-做了什么事情" class="headerlink" title="十七. 函数在两个阶段(定义、调用)做了什么事情"></a>十七. 函数在两个阶段(定义、调用)做了什么事情</h2><p>内存</p><ul><li>栈内存 ： 基本数据类型 、引用数据类型的地址</li><li>堆内存 ： 引用数据类型的值<br>复杂数据类型(引用数据类型&#x2F;地址数据类型)</li></ul><ol><li>函数定义阶段<ul><li>在堆内存中开辟一段空间</li><li>把函数体内的所有代码，一模一样的存储到这个空间中(此时不会解析变量)</li><li>把存储空间的地址赋值给函数名</li></ul></li><li>函数调用阶段<ul><li>按照函数名存储的地址找堆内存中对应的空间 -&gt; 判断内存中有没有这个变量 -&gt; 判断这个变量存储的内容是不是一个函数</li><li>在调用栈 内开辟一个函数执行空间</li><li>在执行空间 内进行形参赋值</li><li>在执行空间 内进行函数内的预解析</li><li>在执行空间 内把函数的代码执行一遍</li><li>执行完毕后， 执行空间立即销毁</li></ul></li><li>把函数体内的所有代码，一模一样的存储到这个空间中(<strong>此时不会解析变量</strong>)<blockquote><p>函数体内的代码不会提前预解析，而是等函数调用的时候预解析</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br><span class="line">&#125;</span><br><span class="line">num = <span class="number">200</span>;</span><br><span class="line"><span class="title function_">fn</span>(); <span class="comment">// 结果为：200</span></span><br></pre></td></tr></table></figure></li><li>形参赋值和预解析(函数内的预解析)的顺序：先形参赋值在进行预解析<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">100</span>); <span class="comment">// 结果为：ƒ a() &#123;&#125;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">函数也是一个对象，也具有普通对象的功能；函数中可以封装一些代码，在需要的时候可以去调用函数来执行这些代码。所有的方法都是函数构建的，函数构建一些常用功能。</summary>
    
    
    
    <category term="前端" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
    <category term="前端" scheme="https://fanxing28.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://fanxing28.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>【TS】学习笔记</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/TypeScript/%E3%80%90TS%E3%80%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/TypeScript/%E3%80%90TS%E3%80%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2023-11-28T14:32:25.000Z</published>
    <updated>2023-12-02T12:25:50.053Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-起步阶段"><a href="#一-起步阶段" class="headerlink" title="一. 起步阶段"></a>一. 起步阶段</h2><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="(1) 安装"></a>(1) 安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm i typescript -g</span><br></pre></td></tr></table></figure><p>测试安装成功：tec命令，没报错即成功</p><h3 id="2-编译ts"><a href="#2-编译ts" class="headerlink" title="(2) 编译ts"></a>(2) 编译ts</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsc ./src/index.ts --outFile ./dist/index.js</span><br></pre></td></tr></table></figure><h3 id="3-初始化ts的配置文件"><a href="#3-初始化ts的配置文件" class="headerlink" title="(3) 初始化ts的配置文件"></a>(3) 初始化ts的配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsc --init</span><br></pre></td></tr></table></figure><p>此时目录下会生成一个tsconfig.json配置文件</p><h3 id="4-实时监听"><a href="#4-实时监听" class="headerlink" title="(4) 实时监听"></a>(4) 实时监听</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsc --watch</span><br></pre></td></tr></table></figure><p>在配置文件中取消”rootDir”和”outDir”的注释，并分别写入存放ts的目录和存放编译后js的目录，在使用tsc –watch就可以实时监听改变，并自动编译成js文件</p><h2 id="二-语法"><a href="#二-语法" class="headerlink" title="二. 语法"></a>二. 语法</h2><h3 id="一-定义类型"><a href="#一-定义类型" class="headerlink" title="(一) 定义类型"></a>(一) 定义类型</h3><h4 id="1-基本数据类型"><a href="#1-基本数据类型" class="headerlink" title="(1) 基本数据类型"></a>(1) 基本数据类型</h4><p>在变量声明的时候确定其类型：<br>在声明的变量后面加上 <code>: 基本数据类型</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// eg: let str : string = &#x27;hello&#x27;</span></span><br></pre></td></tr></table></figure><p>确定了变量类型之后，可以修改变量的值，但不能修改为其他的数据类型的值（会报错）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// eg: 允许修改 str = &#x27;zs&#x27; </span></span><br><span class="line"><span class="comment">// eg: 错误写法 str = 18; </span></span><br><span class="line"><span class="comment">// 报错：不能将类型“number”分配给类型“string”。</span></span><br></pre></td></tr></table></figure><p>可以先定义变量，在赋值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// eg: let num : number num = 20</span></span><br></pre></td></tr></table></figure><p><strong>自动类型判断</strong><br>如果没有在定义变量后面指明变量类型，系统会自动进行对变量首次赋值后的类型判断</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> bool = <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><strong>定义不同的数据类型</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num : number = <span class="number">18</span> </span><br><span class="line"><span class="keyword">let</span> str : string = <span class="string">&#x27;zs&#x27;</span> </span><br><span class="line"><span class="keyword">let</span> bool : boolean = <span class="literal">true</span> </span><br><span class="line"><span class="keyword">let</span> nu : <span class="literal">null</span> = <span class="literal">null</span> </span><br><span class="line"><span class="keyword">let</span> udf : <span class="literal">undefined</span> = <span class="literal">undefined</span></span><br></pre></td></tr></table></figure><h4 id="2-联合类型"><a href="#2-联合类型" class="headerlink" title="(2) 联合类型"></a>(2) 联合类型</h4><p>可以同时给定义的变量设置多个数据类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> sa : number | string | boolean = <span class="number">5</span>; </span><br><span class="line">sa = <span class="string">&#x27;zs&#x27;</span>; </span><br><span class="line">sa = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><h4 id="3-任意类型"><a href="#3-任意类型" class="headerlink" title="(3) 任意类型"></a>(3) 任意类型</h4><p>可以同时给定义的变量设置 <code>: any</code> ：表示可以赋值任意的数据类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> sd : any = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] sd = &#123;<span class="attr">age</span>:<span class="number">18</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="4-数组类型"><a href="#4-数组类型" class="headerlink" title="(4) 数组类型"></a>(4) 数组类型</h4><p>可以同时给定义的变量设置 <code>: (number | string)[]</code>或 <code>:Array&lt;number|boolean&gt;</code> ：表示可以赋值数组中的数据类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> sf : (number | string)[] = [<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;zs&#x27;</span>] </span><br><span class="line"><span class="keyword">let</span> sh : <span class="title class_">Array</span> &lt; number | boolean &gt; = [<span class="number">1</span>,<span class="number">5</span>,<span class="literal">true</span>]</span><br></pre></td></tr></table></figure><h4 id="5-元组类型"><a href="#5-元组类型" class="headerlink" title="(5) 元组类型"></a>(5) 元组类型</h4><p>特殊的数组，规定数组的长度，规定里面的每一项的数据类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr : [number,boolean] = [<span class="number">1</span>,<span class="literal">true</span>]</span><br></pre></td></tr></table></figure><p><strong>注</strong>：变量赋的值的类型与长度 要与 [] 中的类型与长度一致</p><h4 id="6-对象类型"><a href="#6-对象类型" class="headerlink" title="(6) 对象类型"></a>(6) 对象类型</h4><ol><li>可以使用 <code>:Object</code> ，但是不能再做修改<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">obj</span>: object = &#123; <span class="attr">name</span>: <span class="string">&#x27;zs&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span> &#125; obj.<span class="property">name</span> = <span class="string">&#x27;ls&#x27;</span> <span class="comment">// 报错：类型“object”上不存在属性“name”</span></span><br></pre></td></tr></table></figure></li><li>写一个接口，给对象添加类型<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">interface <span class="title class_">Obj2Type</span> &#123; <span class="attr">name</span>: string <span class="attr">age</span>: number &#125; </span><br><span class="line"><span class="keyword">let</span> <span class="attr">obj2</span>: <span class="title class_">Obj2Type</span> = &#123; <span class="attr">name</span>: <span class="string">&#x27;zs&#x27;</span>, <span class="attr">age</span>: <span class="number">10</span> &#125; </span><br><span class="line"><span class="comment">// 可以对里面的属性进行相应类型的修改 obj2.name = &#x27;ls&#x27; </span></span><br><span class="line"><span class="comment">// 但是无法添加新属性 obj2.sex = &#x27;男&#x27; </span></span><br><span class="line"><span class="comment">// 报错：类型“Obj2Type”上不存在属性“sex”</span></span><br></pre></td></tr></table></figure>  向对象中添加新属性方式（通过预留一个不确定存不存在的属性来实现）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">interface <span class="title class_">Obj2Type</span> &#123; </span><br><span class="line"><span class="attr">name</span>: string <span class="attr">age</span>: number sex?: string </span><br><span class="line"><span class="comment">// ? 表示可选属性 </span></span><br><span class="line"><span class="comment">// 或 </span></span><br><span class="line"><span class="comment">// [propname: string]: any </span></span><br><span class="line"><span class="comment">// 索引签名，表示除了以上的属性给了明确的属性名及类型规定以外，后面的属性名不管 </span></span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">let</span> <span class="attr">obj2</span>: <span class="title class_">Obj2Type</span> = &#123; <span class="attr">name</span>: <span class="string">&#x27;zs&#x27;</span>, <span class="attr">age</span>: <span class="number">10</span> &#125; obj2.<span class="property">sex</span> = <span class="string">&#x27;男&#x27;</span></span><br></pre></td></tr></table></figure>  对象与数组嵌套<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">interface <span class="title class_">Obj3Type</span> &#123; </span><br><span class="line"><span class="attr">path</span>: string <span class="attr">template</span>: string children?: <span class="title class_">Obj3Type</span>[] </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">let</span> <span class="attr">obj3</span>: <span class="title class_">Obj3Type</span>[] = [ &#123; </span><br><span class="line"><span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>, </span><br><span class="line"><span class="attr">template</span>: <span class="string">&#x27;div1&#x27;</span>, </span><br><span class="line"><span class="attr">children</span>: [ &#123; </span><br><span class="line"><span class="attr">path</span>: <span class="string">&#x27;/home/child&#x27;</span>, </span><br><span class="line"><span class="attr">template</span>: <span class="string">&#x27;div2&#x27;</span> </span><br><span class="line">&#125; ] </span><br><span class="line">&#125;, &#123; </span><br><span class="line"><span class="attr">path</span>: <span class="string">&#x27;/about&#x27;</span>, </span><br><span class="line"><span class="attr">template</span>: <span class="string">&#x27;div3&#x27;</span> </span><br><span class="line">&#125; ]</span><br></pre></td></tr></table></figure>  对象间的嵌套<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">interface <span class="title class_">ChildType</span> &#123; </span><br><span class="line"><span class="attr">name</span>: string <span class="attr">age</span>: number </span><br><span class="line">&#125; </span><br><span class="line">interface <span class="title class_">Obj4Type</span> &#123; </span><br><span class="line"><span class="attr">path</span>: string <span class="attr">template</span>: string children?: <span class="title class_">ChildType</span> </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">let</span> <span class="attr">obj4</span>: <span class="title class_">Obj4Type</span>[] = [ &#123; </span><br><span class="line"><span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>, </span><br><span class="line"><span class="attr">template</span>: <span class="string">&#x27;div1&#x27;</span>, </span><br><span class="line"><span class="attr">children</span>: &#123; </span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;zs&#x27;</span>, <span class="attr">age</span>: <span class="number">28</span> </span><br><span class="line">&#125; </span><br><span class="line">&#125;, &#123; </span><br><span class="line"><span class="attr">path</span>: <span class="string">&#x27;/about&#x27;</span>, </span><br><span class="line"><span class="attr">template</span>: <span class="string">&#x27;div3&#x27;</span> </span><br><span class="line">&#125; ]</span><br></pre></td></tr></table></figure></li></ol><h4 id="7-枚举类型"><a href="#7-枚举类型" class="headerlink" title="(7) 枚举类型"></a>(7) 枚举类型</h4><p>类似于对象，不仅可以从key找到value，而且可以从value找到key</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 枚举类型 </span></span><br><span class="line">enum <span class="title class_">Color</span> &#123; </span><br><span class="line"><span class="title class_">Red</span> = <span class="number">10</span>,</span><br><span class="line"><span class="title class_">Green</span> = <span class="number">29</span>, </span><br><span class="line"><span class="title class_">Blue</span>, </span><br><span class="line"><span class="title class_">Yellow</span> </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">let</span> <span class="attr">a</span>: <span class="title class_">Color</span> = <span class="title class_">Color</span>.<span class="property">Yellow</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line"><span class="keyword">let</span> <span class="attr">b</span>: string = <span class="title class_">Color</span>[<span class="number">30</span>] <span class="variable language_">console</span>.<span class="title function_">log</span>(b)</span><br></pre></td></tr></table></figure><p>以上ts代码转换成js代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 枚举类型 </span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">Color</span>; </span><br><span class="line">(<span class="keyword">function</span> (<span class="params">Color</span>) &#123; </span><br><span class="line"><span class="title class_">Color</span>[<span class="title class_">Color</span>[<span class="string">&quot;Red&quot;</span>] = <span class="number">10</span>] = <span class="string">&quot;Red&quot;</span>; </span><br><span class="line"><span class="title class_">Color</span>[<span class="title class_">Color</span>[<span class="string">&quot;Green&quot;</span>] = <span class="number">29</span>] = <span class="string">&quot;Green&quot;</span>; </span><br><span class="line"><span class="title class_">Color</span>[<span class="title class_">Color</span>[<span class="string">&quot;Blue&quot;</span>] = <span class="number">30</span>] = <span class="string">&quot;Blue&quot;</span>; </span><br><span class="line"><span class="title class_">Color</span>[<span class="title class_">Color</span>[<span class="string">&quot;Yellow&quot;</span>] = <span class="number">31</span>] = <span class="string">&quot;Yellow&quot;</span>; </span><br><span class="line">&#125;)</span><br><span class="line">(<span class="title class_">Color</span> || (<span class="title class_">Color</span> = &#123;&#125;)); </span><br><span class="line"><span class="keyword">let</span> a = <span class="title class_">Color</span>.<span class="property">Yellow</span>; <span class="variable language_">console</span>.<span class="title function_">log</span>(a); </span><br><span class="line"><span class="comment">// 31 </span></span><br><span class="line"><span class="keyword">let</span> b = <span class="title class_">Color</span>[<span class="number">30</span>]; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b); <span class="comment">// Blue</span></span><br></pre></td></tr></table></figure><h4 id="8-函数类型"><a href="#8-函数类型" class="headerlink" title="(8) 函数类型"></a>(8) 函数类型</h4><p>函数的参数是<strong>不会做类型推断</strong>的<br>函数的类型表示返回值的类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明式函数 </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn1</span>(<span class="params">x: number, y: number</span>): number &#123; </span><br><span class="line"><span class="keyword">return</span> x + y </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 赋值式函数 </span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">fn4</span>: <span class="function">(<span class="params">x: number, y: number</span>) =&gt;</span> number = <span class="keyword">function</span> (<span class="params"> x: number, y: number </span>): number &#123; </span><br><span class="line"><span class="keyword">return</span> x + y </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数没有返回值时，类型：<strong>void</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn3</span>(<span class="params">x: number, y: number</span>): <span class="keyword">void</span> &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(x) &#125;</span><br></pre></td></tr></table></figure><p><strong>never</strong>表示从不，在死循环或者报错的时候用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 死循环 </span></span><br><span class="line"><span class="keyword">const</span> fn4 = (): <span class="function"><span class="params">never</span> =&gt;</span> &#123; </span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 报错 </span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fn5</span> = (<span class="params"></span>) =&gt; &#123; </span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;错误&quot;</span>) </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 两个参数只传递一个值 </span></span><br><span class="line"><span class="keyword">const</span> fn6 = (<span class="attr">x</span>: number, y?: number): <span class="function"><span class="params">number</span> =&gt;</span> &#123; </span><br><span class="line"><span class="keyword">return</span> y ? x + y : x; </span><br><span class="line">&#125; </span><br><span class="line"><span class="title function_">fn6</span>(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p><strong>泛型</strong><br>可以将类型当作参数传递给函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn7</span>(<span class="params">x:T,y:T</span>):number&#123; </span><br><span class="line"><span class="keyword">return</span> <span class="number">3</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="title function_">fn7</span>(<span class="number">3</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure><p><strong>class 类型</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">interface <span class="title class_">ObjType</span> &#123; </span><br><span class="line"><span class="attr">name</span>: string; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// class的类型 </span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123; </span><br><span class="line"><span class="title function_">constructor</span>(<span class="params">obj: ObjType</span>) &#123; </span><br><span class="line"><span class="variable language_">this</span>.<span class="property">name</span> = obj.<span class="property">name</span> </span><br><span class="line">&#125;; </span><br><span class="line"><span class="attr">name</span>: string = <span class="string">&quot;wangcai&quot;</span>; </span><br><span class="line"><span class="title function_">sayName</span>(): <span class="keyword">void</span> &#123; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>); </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 类的继承 </span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span> &#123; </span><br><span class="line"><span class="comment">// constructor是一个会被自动调用的函数,是在类被实例化的时候调用 </span></span><br><span class="line"><span class="title function_">constructor</span>(<span class="params">obj: ObjType</span>) &#123; </span><br><span class="line"><span class="variable language_">super</span>(obj); </span><br><span class="line"><span class="comment">// console.log(obj); </span></span><br><span class="line">&#125; </span><br><span class="line">&#125;; </span><br><span class="line"><span class="comment">// 类的实例化 </span></span><br><span class="line"><span class="keyword">const</span> dog = <span class="keyword">new</span> <span class="title class_">Dog</span>(&#123; </span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;xiaohei&quot;</span> </span><br><span class="line">&#125;); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(dog.<span class="property">name</span>); </span><br><span class="line">dog.<span class="title function_">sayName</span>();</span><br></pre></td></tr></table></figure><h2 id="三-在vue3中使用ts"><a href="#三-在vue3中使用ts" class="headerlink" title="三. 在vue3中使用ts"></a>三. 在vue3中使用ts</h2><h3 id="1-定义变量"><a href="#1-定义变量" class="headerlink" title="(1) 定义变量"></a>(1) 定义变量</h3><p>使用ref定义变量类型需要使用泛型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> count = <span class="title function_">ref</span>(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>使用reactive定义变量类型需要自己定义interface接口</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">StateType</span> &#123; </span><br><span class="line"><span class="attr">name</span>: <span class="built_in">string</span> </span><br><span class="line"><span class="attr">age</span>: <span class="built_in">number</span> </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">const</span> <span class="attr">state</span>: <span class="title class_">StateType</span> = <span class="title function_">reactive</span>(&#123; </span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;zs&#x27;</span>, </span><br><span class="line"><span class="attr">age</span>: <span class="number">18</span> </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="2-计算属性"><a href="#2-计算属性" class="headerlink" title="(2) 计算属性"></a>(2) 计算属性</h3><p>计算属性的类型和ref一样要使用泛型</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> evenList = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> &#123; </span><br><span class="line"><span class="keyword">return</span> list.<span class="property">value</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item % <span class="number">2</span> === <span class="number">0</span>) </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="3-自己定义的函数"><a href="#3-自己定义的函数" class="headerlink" title="(3) 自己定义的函数"></a>(3) 自己定义的函数</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> add = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123; </span><br><span class="line">count.<span class="property">value</span>++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-不需要加任何类型"><a href="#4-不需要加任何类型" class="headerlink" title="(4) 不需要加任何类型"></a>(4) 不需要加任何类型</h3><p>生命周期、component、依赖注入中的(provide)、watch<br><strong>watch</strong>不需要加任何的类型（是函数的调用，调用的时候已经是实参了，不需要写类型，而(val,oldVal)虽然是函数的参数,因为这里是利用watch对count进行监听，而上面的count已经定义过类型了，所以这里会推断出参数的类型）</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">watch</span>(count, <span class="function">(<span class="params">val, oldVal</span>) =&gt;</span> &#123; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(val, oldVal) </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="5-props"><a href="#5-props" class="headerlink" title="(5) props"></a>(5) props</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> props = defineProps&lt;&#123; </span><br><span class="line"><span class="attr">num</span>: <span class="built_in">number</span> </span><br><span class="line">&#125;&gt;() </span><br><span class="line"><span class="comment">// 或 interface T &#123; num: number &#125; const props = defineProps()</span></span><br></pre></td></tr></table></figure><h3 id="6-触发自定义事件-emits"><a href="#6-触发自定义事件-emits" class="headerlink" title="(6) 触发自定义事件(emits)"></a>(6) 触发自定义事件(emits)</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> emits = <span class="title function_">defineEmits</span>([<span class="string">&#x27;abc&#x27;</span>]) </span><br><span class="line"><span class="comment">// 或 </span></span><br><span class="line"><span class="keyword">const</span> emits = defineEmits&lt;&#123; (<span class="attr">e</span>: <span class="string">&#x27;abc&#x27;</span>, <span class="attr">payload</span>: <span class="built_in">number</span>): <span class="built_in">void</span> &#125;&gt;()</span><br></pre></td></tr></table></figure><h3 id="7-inject"><a href="#7-inject" class="headerlink" title="(7) inject"></a>(7) inject</h3><p>inject也是使用泛型来约定变量的类型</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> count = <span class="title function_">inject</span>(<span class="string">&#x27;count&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="四-ES11新增-（可选链操作符）"><a href="#四-ES11新增-（可选链操作符）" class="headerlink" title="四. ?. ES11新增 （可选链操作符）"></a>四. <code>?.</code> ES11新增 （可选链操作符）</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">age</span>: <span class="number">18</span> &#125; <span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">b</span>?.<span class="property">c</span>) </span><br><span class="line"><span class="comment">// undefined :表示先判断是否存在属性b，存在就去.c，不存在就直接输出结果 fn2?.() </span></span><br><span class="line"><span class="comment">// 表示先判断是否存在fn2函数，存在就调用，不存在就不调用 </span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Typescript 为 Javascript 增加类型能力，主要为了避免 JS 弱类型下产生的各种有意无意的问题。或者说，TS 用来限制 JS 的编写，就像一个 lint 一样。</summary>
    
    
    
    <category term="前端" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    
    <category term="前端" scheme="https://fanxing28.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="TypeScript" scheme="https://fanxing28.github.io/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 高级</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/JavaScript/%E3%80%90JS%E3%80%91%E9%AB%98%E7%BA%A7/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/JavaScript/%E3%80%90JS%E3%80%91%E9%AB%98%E7%BA%A7/</id>
    <published>2023-11-28T14:32:25.000Z</published>
    <updated>2023-12-02T12:23:36.640Z</updated>
    
    
    <summary type="html">还未同步</summary>
    
    
    
    <category term="前端" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
    <category term="前端" scheme="https://fanxing28.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://fanxing28.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>对象的相关知识点</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/JavaScript/%E3%80%90JS%E3%80%91%E5%AF%B9%E8%B1%A1/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/JavaScript/%E3%80%90JS%E3%80%91%E5%AF%B9%E8%B1%A1/</id>
    <published>2023-11-28T14:32:25.000Z</published>
    <updated>2023-12-02T12:28:42.004Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-对象概述及基础操作"><a href="#一-对象概述及基础操作" class="headerlink" title="一. 对象概述及基础操作"></a>一. 对象概述及基础操作</h2><h3 id="一-概述"><a href="#一-概述" class="headerlink" title="(一) 概述"></a>(一) 概述</h3><p>在JavaScript中，<strong>对象是一组无序的相关属性（方法）的集合</strong>，所有的事物都是对象，例如：字符串、数组、函数等。<br><strong>简单理解</strong>：对象就是一个盒子，以键值对的方式来存储数据，并且这些数据是无序的。<br>使用<code>typeof</code>检查一个对象时，会返回object。<br>对象是由属性和<strong>方法</strong>组成的</p><ol><li>属性：事物的特征，在对象中用属性来表示</li><li>方法：事物的行为，在对象中用方法来表示</li></ol><h3 id="二-六大对象"><a href="#二-六大对象" class="headerlink" title="(二) 六大对象"></a>(二) 六大对象</h3><ol><li>函数对象 - Function</li><li>数组对象 - Array</li><li>对象(自定义对象) - Object</li><li>字符串对象 - String</li><li>数学对象 - Math</li><li>日期对象 - Date<br><strong>对象分为三类</strong>：内置对象、宿主对象、自定义对象 （1）内置对象： Arguments、Array、Boolean、Date、Error、Function、Number、String、Regexp、Math、Object （2）宿主对象：运行环境提供的对象。如Window和Documen、Element、form、image。 （3）自定义对象：开发人员定义的对象。</li></ol><h3 id="三-对象的操作"><a href="#三-对象的操作" class="headerlink" title="(三) 对象的操作"></a>(三) 对象的操作</h3><h4 id="1-创建对象"><a href="#1-创建对象" class="headerlink" title="(1) 创建对象"></a>(1) 创建对象</h4><h5 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h5><blockquote><p>利用new Object（构造函数）创建对象</p></blockquote><p>语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 变量名 = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">obj.<span class="property">name</span> = <span class="string">&#x27;zs&#x27;</span>;</span><br><span class="line">obj.<span class="property">age</span> = <span class="number">19</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">name</span>);<span class="comment">// zs</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">age</span>);<span class="comment">// 19</span></span><br></pre></td></tr></table></figure><h5 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h5><blockquote><p>利用对象字面量创建对象 <strong>（推荐使用）</strong></p></blockquote><p>语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 变量名 = &#123;&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;zs&#x27;</span>, </span><br><span class="line">    <span class="attr">age</span>:<span class="number">18</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>对象内对于 键(属性名 key) 的要求</strong>：</p><ol><li>推荐使用符合变量命名规则和规范的名字</li><li>可以使用纯数字当做键名<blockquote><p>纯数字的键名在展示的时候会排在第一位</p></blockquote></li><li>可以使用任何特殊符号<blockquote><p>要使用特殊符号的时候，需要把键名用引号包裹起来</p></blockquote></li></ol><p><strong>调用对象的属性和方法</strong><br>调用对象属性：对象名.属性名（或对象名[‘属性名’]） 调用对象方法：对象名.方法名()</p><h4 id="2-对象的特点"><a href="#2-对象的特点" class="headerlink" title="(2) 对象的特点"></a>(2) 对象的特点</h4><ol><li>对象的属性名一定是字符串格式，引号可有可无<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;zs&#x27;</span>, <span class="comment">// 等同于&quot;name&quot;:&#x27;zs&#x27;</span></span><br><span class="line">    <span class="attr">age</span>:<span class="number">18</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>对象的属性名如果是变量，必须将变量名写在一个中括号里面，否则变量名当作字符串处理<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> n = <span class="string">&#x27;username&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">n</span>: <span class="string">&#x27;zs&#x27;</span>, <span class="comment">// n是普通的字符串</span></span><br><span class="line">    [n]: <span class="string">&#x27;ls&#x27;</span> <span class="comment">// n是变量</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">n</span>); <span class="comment">// zs</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">username</span>); <span class="comment">// ls</span></span><br></pre></td></tr></table></figure></li><li>读写(获取和设置)对象的属性值可以使用点符号和中括号，点符号后面只能跟字符串(省略引号)，中括号里面可以是变量，字符串，数字等。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;zs&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="number">100</span>: <span class="number">200</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">name</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj<span class="number">.100</span>); <span class="comment">//语法错误</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj[<span class="number">100</span>]); <span class="comment">//ok  200</span></span><br></pre></td></tr></table></figure></li><li>对象的值是固定的，输出[object Object]<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;zhangsan&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">19</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> obj2 = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;lisi&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">alert</span>(obj1); <span class="comment">//[object Object]</span></span><br><span class="line"><span class="title function_">alert</span>(obj2); <span class="comment">//[object Object]</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="3-对象的增删改查"><a href="#3-对象的增删改查" class="headerlink" title="(3) 对象的增删改查"></a>(3) 对象的增删改查</h4><h5 id="1-向对象中添加属性"><a href="#1-向对象中添加属性" class="headerlink" title="1. 向对象中添加属性"></a>1. 向对象中添加属性</h5><p>语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.对象.属性名 = 属性值;</span></span><br><span class="line"><span class="comment">// 2.对象[&quot;属性名&quot;] = 属性值;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">obj.<span class="property">name</span> = <span class="string">&#x27;zs&#x27;</span>;</span><br><span class="line">obj.<span class="property">age</span> = <span class="number">19</span>;</span><br></pre></td></tr></table></figure><ul><li>对象的属性名没有任何要求，不需要遵守标识符的规范，但是在开发中，尽量按照标识符的要求去写。</li><li>属性值也可以任意的数据类型。</li></ul><h5 id="2-删除对象中的属性"><a href="#2-删除对象中的属性" class="headerlink" title="2. 删除对象中的属性"></a>2. 删除对象中的属性</h5><p>语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> 对象.属性名</span><br><span class="line"><span class="keyword">delete</span> 对象[<span class="string">&quot;属性名&quot;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> obj.<span class="property">name</span>;</span><br><span class="line"><span class="keyword">delete</span> obj[<span class="string">&#x27;name&#x27;</span>];</span><br></pre></td></tr></table></figure><h5 id="3-修改对象中的属性"><a href="#3-修改对象中的属性" class="headerlink" title="3. 修改对象中的属性"></a>3. 修改对象中的属性</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">obj.<span class="property">name</span> = <span class="string">&#x27;zs&#x27;</span>;</span><br><span class="line">obj[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;ls&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">name</span>); <span class="comment">// zs</span></span><br></pre></td></tr></table></figure><h5 id="4-查看对象中的属性"><a href="#4-查看对象中的属性" class="headerlink" title="4. 查看对象中的属性"></a>4. 查看对象中的属性</h5><p>语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.对象.属性名</span></span><br><span class="line"><span class="comment">// 2.对象[&quot;属性名&quot;]</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">obj.<span class="property">name</span> = <span class="string">&#x27;zs&#x27;</span>;</span><br><span class="line">obj[<span class="string">&#x27;age&#x27;</span>] = <span class="number">18</span>;</span><br></pre></td></tr></table></figure><blockquote><p>如果读取一个对象中没有的属性，它不会报错，而是返回一个undefined。</p></blockquote><h4 id="4-使用in检查对象中是否含有指定属性"><a href="#4-使用in检查对象中是否含有指定属性" class="headerlink" title="(4). 使用in检查对象中是否含有指定属性"></a>(4). 使用in检查对象中是否含有指定属性</h4><p>语法：”属性名” in 对象</p><ul><li>如果在对象中含有该属性，则返回true</li><li>如果没有则返回false</li></ul><h4 id="5-对象名-键名-和对象名-键名的区别"><a href="#5-对象名-键名-和对象名-键名的区别" class="headerlink" title="(5). 对象名[&quot;键名&quot;]和对象名.键名的区别"></a>(5). <code>对象名[&quot;键名&quot;]</code>和<code>对象名.键名</code>的区别</h4><ul><li>当键名是符合变量规则和规范的时候，两个语法没有区别</li><li>操作不符合变量规则和规范的键名的时候，只能用数组关联语法</li><li>涉及变量相关的时候，只能用数组关联语法<br><strong>注意</strong>：<code>对象名[&quot;键名&quot;]</code>方式中：[] 中没有写引号的时候，就表示一个变量，此刻 obj[a] 中会把变量a的值拿过来使用<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;小红&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="string">&quot;a-b&quot;</span>: <span class="string">&quot;哈哈哈&quot;</span>,</span><br><span class="line">    <span class="number">1</span>: <span class="string">&quot;hello world&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//   console.log(obj.1)  // 报错</span></span><br><span class="line"><span class="comment">//   console.log(obj.a-b)   // 报错</span></span><br><span class="line"><span class="comment">//   console.log(obj[&quot;a-b&quot;]) // &#x27;哈哈哈&#x27;</span></span><br><span class="line"><span class="comment">//   console.log(obj[a]) // 报错</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="四-遍历对象"><a href="#四-遍历对象" class="headerlink" title="(四) 遍历对象"></a>(四) 遍历对象</h3><blockquote><p>对象是属性的无序集合，无法利用for循环的遍历</p></blockquote><p>for…in 语句用于对数组或者对象的属性进行循环操作。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(变量 <span class="keyword">in</span> 对象)&#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">    <span class="attr">fn</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(k) <span class="comment">// 所有的属性名</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(obj[k])<span class="comment">// 所有的属性名对应的值，必须使用中括号</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五-变量和属性、函数和方法的区别"><a href="#五-变量和属性、函数和方法的区别" class="headerlink" title="(五) 变量和属性、函数和方法的区别"></a>(五) 变量和属性、函数和方法的区别</h3><ol><li>变量和属性<strong>相同点</strong>：都是用来存储数据的。 </li><li>变量和属性<strong>不同点</strong>： <ul><li>变量：单独声明并赋值，使用的时候直接写属性名</li><li>属性：在对象里面的属性不需要声明，用来描述对象的特征，使用时对象.属性名<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> b = &#123;</span><br><span class="line">    <span class="attr">age</span>: <span class="number">28</span>,</span><br><span class="line">    <span class="attr">fn</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b.<span class="property">age</span>); <span class="comment">// 28</span></span><br></pre></td></tr></table></figure></li></ul></li><li>函数和方法的<strong>相同点</strong>：都是实现某种功能 2.函数和方法的<strong>不同点</strong>： 函数时单独声明的并且调用方式：函数名() 方法在对象中不需要声明，用来描述该对象的行为和功能，调用的时候：对象.方法()</li></ol><h2 id="二-字符串对象概述及常用方法详解"><a href="#二-字符串对象概述及常用方法详解" class="headerlink" title="二. 字符串对象概述及常用方法详解"></a>二. 字符串对象概述及常用方法详解</h2><h3 id="一-字符串的创建"><a href="#一-字符串的创建" class="headerlink" title="(一) 字符串的创建"></a>(一) 字符串的创建</h3><h4 id="1-字面量方式创建"><a href="#1-字面量方式创建" class="headerlink" title="(1) 字面量方式创建"></a>(1) 字面量方式创建</h4><ul><li>单引号<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 变量名 = <span class="string">&#x27;内容&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li>双引号<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 变量名 = <span class="string">&quot;内容&quot;</span>;</span><br></pre></td></tr></table></figure></li><li>反引号 模板字符串<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 变量名 = <span class="string">`内容`</span>;</span><br></pre></td></tr></table></figure><strong>反引号的特点</strong>：</li></ul><ol><li>可以直接书写回车</li><li>可以直接放置变量</li></ol><h4 id="2-内置构造函数方式创建"><a href="#2-内置构造函数方式创建" class="headerlink" title="(2) 内置构造函数方式创建"></a>(2) 内置构造函数方式创建</h4><ul><li>语法：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 变量名 = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&#x27;内容&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ul><h3 id="二-字符串的基本操作"><a href="#二-字符串的基本操作" class="headerlink" title="(二) 字符串的基本操作"></a>(二) 字符串的基本操作</h3><h4 id="1-length属性"><a href="#1-length属性" class="headerlink" title="(1) length属性"></a>(1) length属性</h4><p>表示字符串的长度，该字符串由多少字符组成。</p><blockquote><p>是一个 <strong>只读</strong> 属性</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;Today is sun day&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="property">length</span>); <span class="comment">// 16</span></span><br></pre></td></tr></table></figure><h4 id="2-索引属性"><a href="#2-索引属性" class="headerlink" title="(2) 索引属性"></a>(2) 索引属性</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;Today is sun day&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str[<span class="number">2</span>]); <span class="comment">// 2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str[<span class="number">100</span>]); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><h4 id="3-遍历"><a href="#3-遍历" class="headerlink" title="(3) 遍历"></a>(3) 遍历</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;Today is sun day&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三-字符串常见方法"><a href="#三-字符串常见方法" class="headerlink" title="(三) 字符串常见方法"></a>(三) 字符串常见方法</h3><h4 id="1-charAt"><a href="#1-charAt" class="headerlink" title="(1) charAt()"></a>(1) charAt()</h4><p><strong>charAt()</strong> 方法从一个字符串中返回指定的字符。<br><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.<span class="title function_">charAt</span>(index)</span><br></pre></td></tr></table></figure><p><strong>参数</strong>：<code>index</code>一个介于 0 和字符串长度减 1 之间的整数。(0~length-1) 如果没有提供索引，charAt() 将使用 0。<br><strong>描述</strong>：字符串中的字符从左向右索引，第一个字符的索引值为 0，最后一个字符（假设该字符位于字符串 stringName 中）的索引值为 <code>stringName.length - 1</code>。如果指定的 index 值超出了该范围，则返回一个空字符串。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">charAt</span>()); <span class="comment">// h</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">charAt</span>(<span class="number">4</span>)); <span class="comment">// o</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">charAt</span>(<span class="number">10</span>)); <span class="comment">// 空字符串</span></span><br></pre></td></tr></table></figure><h4 id="2-charCodeAt"><a href="#2-charCodeAt" class="headerlink" title="(2) charCodeAt()"></a>(2) charCodeAt()</h4><p><strong><code>charCodeAt()</code></strong> 方法返回 <code>0</code> 到 <code>65535</code> 之间的整数，表示给定索引处的 UTF-16 代码单元<br><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.<span class="title function_">charCodeAt</span>(index)</span><br></pre></td></tr></table></figure><p><strong>参数</strong>：<code>index</code>一个大于等于 <code>0</code>，小于字符串长度的整数。如果不是一个数值，则默认为 <code>0</code>。<br><strong>返回值</strong>：指定 <code>index</code> 处字符的 UTF-16 代码单元值的一个数字；如果 <code>index</code> 超出范围，<code>charCodeAt()</code> 返回<code>NaN</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">charCodeAt</span>()); <span class="comment">// 104</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">charCodeAt</span>(<span class="number">4</span>)); <span class="comment">// 111</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">charCodeAt</span>(<span class="number">10</span>)); <span class="comment">// NaN</span></span><br></pre></td></tr></table></figure><p><strong>常见的字母和数字对应的Unicode编码</strong>：</p><blockquote><p>0-9：48-57 A-Z：65-90 a-z：97-122</p></blockquote><h4 id="3-toUpperCase"><a href="#3-toUpperCase" class="headerlink" title="(3) toUpperCase()"></a>(3) toUpperCase()</h4><p><strong><code>toUpperCase()</code></strong> 方法将调用该方法的字符串转为大写形式并返回（如果调用该方法的值不是字符串类型会被强制转换）。<br><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.<span class="title function_">toUpperCase</span>()</span><br></pre></td></tr></table></figure><p><strong>返回值</strong>：一个新的字符串，表示转换为大写的调用字符串。<br><strong>描述</strong>：<code>toUpperCase()</code> 返回转为大写形式的字符串。此方法不会影响原字符串本身的值，因为 JavaScript 中字符串的值是不可改变的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">toUpperCase</span>()); <span class="comment">// HELLO</span></span><br></pre></td></tr></table></figure><h4 id="4-toLowerCase"><a href="#4-toLowerCase" class="headerlink" title="(4) toLowerCase()"></a>(4) toLowerCase()</h4><p><strong><code>toLowerCase()</code></strong> 会将调用该方法的字符串值转为小写形式，并返回。<br><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.<span class="title function_">toLowerCase</span>()</span><br></pre></td></tr></table></figure><p><strong>返回值</strong>：一个新的字符串，表示转换为小写的调用字符串。<br><strong>描述</strong>：<code>toLowerCase</code> 会将调用该方法的字符串值转为小写形式，并返回。<code>toLowerCase</code> 不会影响字符串本身的值。</p><h4 id="5-substr"><a href="#5-substr" class="headerlink" title="(5) substr()"></a>(5) substr()</h4><blockquote><p>注：此方法官方没有严格被废弃，可以使用 <code>substring()</code> 替代它。</p></blockquote><p><strong><code>substr()</code></strong> 方法返回一个字符串中从指定位置开始到指定字符数的字符。<br><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.<span class="title function_">substr</span>(start[, length])</span><br></pre></td></tr></table></figure><p><strong>返回值</strong> ：截取后的字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;2022-12-28&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">substr</span>(<span class="number">0</span>, <span class="number">7</span>)); <span class="comment">// 2022-12</span></span><br></pre></td></tr></table></figure><h4 id="6-substring"><a href="#6-substring" class="headerlink" title="(6) substring()"></a>(6) substring()</h4><p><strong><code>substring()</code></strong> 方法返回一个字符串在开始索引到结束索引之间的一个子集，或从开始索引直到字符串的末尾的一个子集。<br><strong>特点</strong>：包括开始索引，不包括结束索引。<br><strong>参数</strong>：<br><code>indexStart</code></p><blockquote><p>需要截取的第一个字符的索引，该索引位置的字符作为返回的字符串的首字母。</p></blockquote><p><code>indexEnd</code></p><blockquote><p>可选。一个 0 到字符串长度之间的整数，以该数字为索引的字符不包含在截取的字符串内。</p></blockquote><p><strong>返回值</strong>：包含给定字符串的指定部分的新字符串。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;abcdefg&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">4</span>));</span><br></pre></td></tr></table></figure><h4 id="7-slice"><a href="#7-slice" class="headerlink" title="(7) slice()"></a>(7) slice()</h4><p><strong><code>slice()</code></strong> 方法提取某个字符串的一部分，并返回一个新的字符串，且不会改动原字符串。<br><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.<span class="title function_">slice</span>(beginIndex[, endIndex])</span><br></pre></td></tr></table></figure><p><strong>参数</strong>：<br><code>beginIndex</code><br>从该索引（以 0 为基数）处开始提取原字符串中的字符。如果值为负数，会被当做 <code>strLength + beginIndex</code> 看待，这里的<code>strLength</code> 是字符串的长度。<br><code>endIndex</code><br>可选。在该索引（以 0 为基数）处结束提取字符串。如果省略该参数，<code>slice()</code> 会一直提取到字符串末尾。如果该参数为负数，则被看作是 strLength + endIndex，这里的 strLength 就是字符串的长度。<br><strong>返回值</strong>：返回一个从原字符串中提取出来的<strong>新字符串</strong><br><strong>特点</strong>：包含开始索引，不包括结束索引，<strong>可以为负值</strong>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;hello&#x27;</span>;      </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">slice</span>(<span class="number">2</span>, <span class="number">4</span>)); <span class="comment">// ll</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">slice</span>(<span class="number">1</span>, -<span class="number">1</span>)); <span class="comment">// ell</span></span><br></pre></td></tr></table></figure><h4 id="8-split"><a href="#8-split" class="headerlink" title="(8) split()"></a>(8) split()</h4><p><strong><code>split()</code></strong> 方法使用指定的分隔符字符串将一个<code>String</code>对象分割成子字符串数组，以一个指定的分割字串来决定每个拆分的位置。<br><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.<span class="title function_">split</span>([separator[, limit]])</span><br></pre></td></tr></table></figure><p><strong>返回值</strong>：返回原字符串以分隔符出现位置分隔而成的一个 <code>Array</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;2022-12-28&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">split</span>(<span class="string">&quot;-&quot;</span>));[<span class="string">&#x27;2022&#x27;</span>, <span class="string">&#x27;12&#x27;</span>, <span class="string">&#x27;28&#x27;</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>)); <span class="comment">// [&#x27;2&#x27;, &#x27;0&#x27;, &#x27;2&#x27;, &#x27;2&#x27;, &#x27;-&#x27;, &#x27;1&#x27;, &#x27;2&#x27;, &#x27;-&#x27;, &#x27;2&#x27;, &#x27;8&#x27;]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">// &quot;2022-12-28&quot;</span></span><br></pre></td></tr></table></figure><h4 id="9-concat"><a href="#9-concat" class="headerlink" title="(9) concat()"></a>(9) concat()</h4><p><strong><code>concat()</code></strong> 方法将一个或多个字符串与原字符串连接合并，形成一个新的字符串并返回。<br><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.<span class="title function_">concat</span>(str2, [, ...strN])</span><br></pre></td></tr></table></figure><p><strong>参数</strong>：str2 [, …strN]需要连接到 <code>str</code> 的字符串。<br><strong>返回值</strong>：一个新的字符串，包含参数所提供的连接字符串。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">concat</span>(<span class="string">&#x27;world&#x27;</span>)); <span class="comment">// helloworld</span></span><br></pre></td></tr></table></figure><h4 id="10-indexOf"><a href="#10-indexOf" class="headerlink" title="(10) indexOf()"></a>(10) indexOf()</h4><p><strong><code>indexOf()</code></strong> 方法，给定一个参数：要搜索的子字符串，搜索整个调用字符串，并返回指定子字符串第一次出现的索引。给定第二个参数：一个数字，该方法将返回指定子字符串在大于或等于指定数字的索引处的第一次出现。<br><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">indexOf</span>(查找的字符)</span><br><span class="line"><span class="title function_">indexOf</span>(查找的字符, 开始的索引)</span><br></pre></td></tr></table></figure><p><strong>返回值</strong>：查找的字符串 <code>searchValue</code> 的第一次出现的索引，如果没有找到，则返回 <code>-1</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;helloworld&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">indexOf</span>(<span class="string">&#x27;ll&#x27;</span>)); <span class="comment">// 2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">indexOf</span>(<span class="string">&#x27;o&#x27;</span>)); <span class="comment">// 4</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">indexOf</span>(<span class="string">&#x27;a&#x27;</span>)); <span class="comment">// -1</span></span><br></pre></td></tr></table></figure><h4 id="11-includes"><a href="#11-includes" class="headerlink" title="(11) includes()"></a>(11) includes()</h4><p><strong><code>includes()</code></strong> 方法执行区分大小写的搜索，以确定是否可以在另一个字符串中找到一个字符串，并根据情况返回 <code>true</code> 或 <code>false</code>。<br><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">includes</span>(searchString)</span><br><span class="line"><span class="title function_">includes</span>(searchString, position)</span><br></pre></td></tr></table></figure><p><strong>参数</strong>：<br><code>searchString</code></p><blockquote><p>要在 <code>str</code> 中搜索的字符串。不能是正则表达式。</p></blockquote><p><code>position</code> 可选</p><blockquote><p>在字符串中开始搜索 <code>searchString</code> 的位置。（默认为 <code>0</code>。）</p></blockquote><p><strong>返回值</strong>：如果当前字符串包含被搜寻的字符串，就返回 **<code>true</code>**，否则返回 **<code>false</code>**。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;helloworld&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">includes</span>(<span class="string">&#x27;ll&#x27;</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">includes</span>(<span class="string">&#x27;o&#x27;</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">includes</span>(<span class="string">&#x27;a&#x27;</span>)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h4 id="12-trim"><a href="#12-trim" class="headerlink" title="(12) trim()"></a>(12) trim()</h4><p><strong><code>trim()</code></strong> 方法从字符串的两端清除空格，返回一个新的字符串，而不修改原始字符串。<br><strong>语法</strong>：str.trim()<br><strong>返回值</strong>：</p><blockquote><p>一个表示 <code>str</code> 去掉了开头和结尾的空白字符后的新字符串。</p></blockquote><p>如果 <code>str</code> 的开头和结尾都没有空白字符，仍然会返回一个新字符串（本质上是 <code>str</code> 的副本），而不会抛出异常。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">`  </span></span><br><span class="line"><span class="string">                hao  de</span></span><br><span class="line"><span class="string">        `</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">//   </span></span><br><span class="line"><span class="comment">//      hao  de</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">trim</span>()); <span class="comment">// hao  de</span></span><br></pre></td></tr></table></figure><h4 id="13-replace"><a href="#13-replace" class="headerlink" title="(13) replace()"></a>(13) replace()</h4><p><strong>语法</strong>：字符串.replace(换下字符, 换上字符)<br><strong>作用</strong> ：替换字符串内容</p><blockquote><p>注：一次只能换一个</p></blockquote><p><strong>返回值</strong>：一个部分或全部匹配由替代模式所取代的新的字符串。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;美好的生活，从写代码开始&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">replace</span>(<span class="string">&#x27;写代码&#x27;</span>, <span class="string">&#x27;一日三餐&#x27;</span>)); <span class="comment">// 美好的生活，从一日三餐开始</span></span><br></pre></td></tr></table></figure><h3 id="四-案例"><a href="#四-案例" class="headerlink" title="(四) 案例"></a>(四) 案例</h3><h4 id="案例一：反转字符串"><a href="#案例一：反转字符串" class="headerlink" title="案例一：反转字符串"></a>案例一：反转字符串</h4><p><strong>方法1</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> origin = <span class="string">&quot;abcde&quot;</span>;  </span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; origin.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    str = origin[i] + str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">// edcba</span></span><br></pre></td></tr></table></figure><p><strong>方法2</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> origin = <span class="string">&quot;abcde&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> r1 = origin.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> r2 = r1.<span class="title function_">reverse</span>();</span><br><span class="line"><span class="keyword">var</span> r3 = r2.<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> res = origin.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">// edcba</span></span><br></pre></td></tr></table></figure><h4 id="案例二：连字符转驼峰"><a href="#案例二：连字符转驼峰" class="headerlink" title="案例二：连字符转驼峰"></a>案例二：连字符转驼峰</h4><blockquote><p>get-element-by-class-name &#x3D;&#x3D;&gt; getElementByClassName</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;get-element-by-class-name&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> arr = str.<span class="title function_">split</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    arr[i] = arr[i].<span class="title function_">substr</span>(<span class="number">0</span>, <span class="number">1</span>).<span class="title function_">toUpperCase</span>() + arr[i].<span class="title function_">slice</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">str = arr.<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">// getElementByClassName</span></span><br></pre></td></tr></table></figure><h4 id="案例三：敏感词变为"><a href="#案例三：敏感词变为" class="headerlink" title="案例三：敏感词变为*"></a>案例三：敏感词变为*</h4><ol><li><strong>改变一种敏感词</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;as小明bdd小明adf小明asdfa小明asdfasdf &quot;</span>;</span><br><span class="line"><span class="keyword">var</span> s = <span class="string">&quot;小明&quot;</span>;</span><br><span class="line">str = str.<span class="title function_">split</span>(s).<span class="title function_">join</span>(<span class="string">&quot;**&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">// as**bdd**adf**asdfa**asdfasdf</span></span><br></pre></td></tr></table></figure></li><li><strong>批量替换敏感词</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;as小明bdd小明adf小明asdfa小明asdfasdf &quot;</span>;</span><br><span class="line"><span class="keyword">var</span> s = [<span class="string">&quot;小明&quot;</span>, <span class="string">&quot;a&quot;</span>];</span><br><span class="line">s.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    str = str.<span class="title function_">split</span>(item).<span class="title function_">join</span>(<span class="string">&quot;**&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">// **s**bdd****df****sdf******sdf**sdf </span></span><br></pre></td></tr></table></figure></li></ol><h4 id="案例四：统计字符串中每一个字符出现的次数"><a href="#案例四：统计字符串中每一个字符出现的次数" class="headerlink" title="案例四：统计字符串中每一个字符出现的次数"></a>案例四：统计字符串中每一个字符出现的次数</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;aaaaabbbbcccdddabacdbdeeedfad&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> item = str[i]; <span class="comment">// 每一个字符</span></span><br><span class="line">    obj[item] ? obj[item]++ : (obj[item] = <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj); <span class="comment">// &#123;a: 8, b: 6, c: 4, d: 7, e: 3, f: 1&#125;</span></span><br></pre></td></tr></table></figure><h2 id="三-查询字符串（URL参数）的处理"><a href="#三-查询字符串（URL参数）的处理" class="headerlink" title="三. 查询字符串（URL参数）的处理"></a>三. 查询字符串（URL参数）的处理</h2><p><strong>查询字符串（URL参数）</strong> 是指在URL的末尾加上用于向服务器发送信息的字符串（变量）。将“？”放在URL的末尾，然后再加上“参数＝值”，想加上多个参数的话，使用“&amp;”。以这个形式，可以将想要发送给服务器的数据添加到URL中。<br><strong>格式</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key=value&amp;key1=value1&amp;key2=value2</span><br></pre></td></tr></table></figure><h3 id="一-查询字符串转为对象"><a href="#一-查询字符串转为对象" class="headerlink" title="(一) 查询字符串转为对象"></a>(一) 查询字符串转为对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 要转换的查询字符串</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;name=zs&amp;age=18&quot;</span>;</span><br><span class="line"><span class="comment">// 封装一个函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">parseQueryString</span>(<span class="params">str</span>) &#123;</span><br><span class="line">    <span class="comment">// 准备一个接收的空对象</span></span><br><span class="line">    <span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line">    <span class="comment">// 将每一个数值分隔开</span></span><br><span class="line">    <span class="keyword">var</span> s1 = str.<span class="title function_">split</span>(<span class="string">&#x27;&amp;&#x27;</span>);</span><br><span class="line">    <span class="comment">// console.log(s1); // [&#x27;name=zs&#x27;, &#x27;age=18&#x27;]</span></span><br><span class="line">    <span class="comment">// 将数组中的值依次放入对象中</span></span><br><span class="line">    s1.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item</span>) &#123;</span><br><span class="line">        <span class="comment">// 将每个数组里面的字符串按照等号分割开,得到若干个数组</span></span><br><span class="line">        <span class="keyword">var</span> t = item.<span class="title function_">split</span>(<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> key = t[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">var</span> value = t[<span class="number">1</span>];</span><br><span class="line">        obj[key] = value;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用函数</span></span><br><span class="line"><span class="keyword">var</span> result = <span class="title function_">parseQueryString</span>(str);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// &#123;name: &#x27;zs&#x27;, age: &#x27;18&#x27;&#125;</span></span><br></pre></td></tr></table></figure><h3 id="二-将对象转换为查询字符串"><a href="#二-将对象转换为查询字符串" class="headerlink" title="(二) 将对象转换为查询字符串"></a>(二) 将对象转换为查询字符串</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 要转换的对象：&#123;name:&#x27;ls&#x27;,age:20&#125;</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;ls&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">20</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 封装一个函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">queryStringify</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">    <span class="comment">// 创建一个空字符串</span></span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="comment">// 对对象进行遍历</span></span><br><span class="line">    <span class="keyword">for</span> (key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        <span class="comment">// 利用模板字符串进行拼接</span></span><br><span class="line">        str += <span class="string">`<span class="subst">$&#123;key&#125;</span>=<span class="subst">$&#123;obj[key]&#125;</span>&amp;`</span>;</span><br><span class="line">        <span class="comment">// console.log(str); // name=ls&amp;age=20&amp;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 将最后多一个&amp;，截取掉</span></span><br><span class="line">    str = str.<span class="title function_">slice</span>(<span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> str = <span class="title function_">queryStringify</span>(obj);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">// name=ls&amp;age=20</span></span><br></pre></td></tr></table></figure><h2 id="四-JSON-格式字符串相关处理"><a href="#四-JSON-格式字符串相关处理" class="headerlink" title="四. JSON 格式字符串相关处理"></a>四. JSON 格式字符串相关处理</h2><h3 id="一-JSON对象"><a href="#一-JSON对象" class="headerlink" title="(一) JSON对象"></a>(一) JSON对象</h3><h4 id="1-概念"><a href="#1-概念" class="headerlink" title="(1) 概念"></a>(1) 概念</h4><p>JSON使用JavaScript语法来描述数据对象，但是 JSON 仍然独立于语言和平台， JSON 解析器和 JSON 库支持许多不同的编程语言。</p><ol><li>JSON描述数据对象 - 前后端交互最好的数据格式。</li><li>JSON独立于语言和平台 - JSON是一种文件的格式，扩展名。</li><li>JSON不是JavaScript独有的。<br><strong>json字符串格式</strong>：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;<span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;zs&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18&quot;</span><span class="punctuation">&#125;</span>&#x27;</span><br><span class="line">&#x27;<span class="punctuation">[</span> <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;zs&quot;</span><span class="punctuation">&#125;</span> <span class="punctuation">,</span> <span class="punctuation">&#123;</span><span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18&quot;</span><span class="punctuation">&#125;</span> <span class="punctuation">]</span>&#x27;</span><br></pre></td></tr></table></figure></li></ol><h4 id="2-JSON的特点"><a href="#2-JSON的特点" class="headerlink" title="(2) JSON的特点"></a>(2) JSON的特点</h4><ol><li>json里面字符串需要添加双引号，<strong>数字</strong> 和 <strong>布尔</strong> 可以不包裹</li><li>json不能包含JavaScript相关的语法。</li><li>json使用类似JavaScript语法来描述数据,由简单值+’对象’+’数组’组成。</li><li>是一种轻量级的数据交换格式，不是js独有的。</li><li>不接受函数</li></ol><h4 id="3-在线json检查的网站"><a href="#3-在线json检查的网站" class="headerlink" title="(3) 在线json检查的网站"></a>(3) 在线json检查的网站</h4><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.bejson.com/</span><br></pre></td></tr></table></figure><h3 id="二-json字符串格式转为js对象格式"><a href="#二-json字符串格式转为js对象格式" class="headerlink" title="(二) json字符串格式转为js对象格式"></a>(二) json字符串格式转为js对象格式</h3><p><strong>方法</strong>：JSON.parse(json格式字符串)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="string">&#x27;&#123;&quot;name&quot;: &quot;zs&quot;, &quot;age&quot;: &quot;18&quot;&#125;&#x27;</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(s);      </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">// &#123;username: &#x27;zs&#x27;, age: &#x27;18&#x27;&#125;</span></span><br></pre></td></tr></table></figure><h3 id="三-js对象格式转为-json字符串格式"><a href="#三-js对象格式转为-json字符串格式" class="headerlink" title="(三) js对象格式转为 json字符串格式"></a>(三) js对象格式转为 json字符串格式</h3><p><strong>方法</strong>：JSON.stringify(js格式字符串);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;ls&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> res = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(str);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">// &#123;&quot;name&quot;:&quot;ls&quot;,&quot;age&quot;:18&#125;</span></span><br></pre></td></tr></table></figure><h2 id="五-Math-对象常见方法详解"><a href="#五-Math-对象常见方法详解" class="headerlink" title="五. Math 对象常见方法详解"></a>五. Math 对象常见方法详解</h2><p>Math属于一个工具类，它不需要我们创建对象，它里边封装了属性运算相关的常量和方法，我们可以直接使用它来进行数学运算相关的操作。</p><h4 id="Math常见的方法"><a href="#Math常见的方法" class="headerlink" title="Math常见的方法"></a>Math常见的方法</h4><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>Math.random()</td><td>生成一个 <code>[0-1)</code> 之间的随机数；生成一个x-y之间的随机数</td></tr><tr><td>Math.round()</td><td>给定数字的值四舍五入到最接近的整数</td></tr><tr><td>Math.ceil()</td><td>向上取整</td></tr><tr><td>Math.floor()</td><td>向下取整</td></tr><tr><td>Math.abs()</td><td>绝对值运算</td></tr><tr><td>Math.max()</td><td>求多个数中最大值</td></tr><tr><td>Math.min()</td><td>求多个数中的最小值</td></tr><tr><td>Math.pow(x,y)</td><td>求x的y次幂</td></tr><tr><td>Math.sqrt()</td><td>对一个数进行开方</td></tr><tr><td>Math.PI</td><td>常量，圆周率</td></tr></tbody></table><blockquote><p>下面分别讲述以上的一些重要方法的使用</p></blockquote><h4 id="1-Math-random"><a href="#1-Math-random" class="headerlink" title="(1) Math.random()"></a>(1) Math.random()</h4><p><strong><code>Math.random()</code></strong> 函数返回一个浮点数，伪随机数在范围从<strong>0 到</strong>小于<strong>1</strong>，也就是说，从 0（包括 0）往上，但是不包括 1（排除 1），然后您可以缩放到所需的范围。实现将初始种子选择到随机数生成算法;它不能被用户选择或重置。<br><strong>语法</strong>：Math.random()<br><strong>返回值</strong>：一个浮点型伪随机数字，在<code>0</code>（包括 0）和<code>1</code>（不包括）之间。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成  0 ~ 9 的随机整数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseInt</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span>)); <span class="comment">// 0 ~ 9.9999999</span></span><br><span class="line"><span class="comment">// 生成 1 ~ 10 的随机整数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseInt</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span>) + <span class="number">1</span>);</span><br></pre></td></tr></table></figure><h4 id="2-Math-round"><a href="#2-Math-round" class="headerlink" title="(2) Math.round()"></a>(2) Math.round()</h4><p><strong><code>Math.round()</code></strong> 函数返回一个数字四舍五入后最接近的整数。<br><strong>语法</strong>：Math.round(x)<br><strong>参数</strong>：x (一个数字)<br><strong>返回值</strong>：给定数字的值四舍五入到最接近的整数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="number">20.49</span>);   <span class="comment">//20</span></span><br><span class="line">x = <span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="number">20.5</span>);    <span class="comment">//21</span></span><br><span class="line">x = <span class="title class_">Math</span>.<span class="title function_">round</span>(-<span class="number">20.5</span>);   <span class="comment">//-20</span></span><br><span class="line">x = <span class="title class_">Math</span>.<span class="title function_">round</span>(-<span class="number">20.51</span>);  <span class="comment">//-21</span></span><br></pre></td></tr></table></figure><h4 id="3-Math-ceil"><a href="#3-Math-ceil" class="headerlink" title="(3) Math.ceil()"></a>(3) Math.ceil()</h4><p><strong><code>Math.ceil()</code></strong> 函数总是四舍五入并返回大于等于给定数字的最小整数。<br><strong>语法</strong>：Math.ceil(x)<br><strong>参数</strong>：x (一个数字)<br><strong>作用</strong>：对一个浮点数进行向下取整<br><strong>返回值</strong>：大于等于 <code>x</code> 的最小整数。它的值与 <code>-Math.floor(-x)</code>相同。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Math</span>.<span class="title function_">ceil</span>(-<span class="title class_">Infinity</span>); <span class="comment">// -Infinity</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">ceil</span>(-<span class="number">7.004</span>); <span class="comment">// -7</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">ceil</span>(-<span class="number">4</span>); <span class="comment">// -4</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">ceil</span>(-<span class="number">0.95</span>); <span class="comment">// -0</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">ceil</span>(-<span class="number">0</span>); <span class="comment">// -0</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="number">0</span>); <span class="comment">// 0</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="number">0.95</span>); <span class="comment">// 1</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="number">4</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="number">7.004</span>); <span class="comment">// 8</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="title class_">Infinity</span>); <span class="comment">// Infinity</span></span><br></pre></td></tr></table></figure><h4 id="4-Math-floor"><a href="#4-Math-floor" class="headerlink" title="(4) Math.floor()"></a>(4) Math.floor()</h4><p><strong><code>Math.floor()</code></strong> 函数总是返回小于等于一个给定数字的最大整数。<br><strong>语法</strong>：Math.floor(x)<br><strong>参数</strong>：x (一个数字)<br><strong>作用</strong>：对一个浮点数进行向下取整<br><strong>返回值</strong>：小于等于 <code>x</code> 的最大整数。它的值与 <code>-Math.ceil(-x)</code>相同。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Math</span>.<span class="title function_">floor</span>(-<span class="title class_">Infinity</span>); <span class="comment">// -Infinity</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">floor</span>(-<span class="number">45.95</span>); <span class="comment">// -46</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">floor</span>(-<span class="number">45.05</span>); <span class="comment">// -46</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">floor</span>(-<span class="number">0</span>); <span class="comment">// -0</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">0</span>); <span class="comment">// 0</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">4</span>); <span class="comment">//   4</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">45.05</span>); <span class="comment">//  45</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">45.95</span>); <span class="comment">//  45</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Infinity</span>); <span class="comment">// Infinity</span></span><br></pre></td></tr></table></figure><h4 id="5-Math-abs"><a href="#5-Math-abs" class="headerlink" title="(5) Math.abs()"></a>(5) Math.abs()</h4><p><strong><code>Math.abs(x)</code></strong> 函数返回一个数字的绝对值。<br><strong>语法</strong>：Math.abs(x)<br><strong>参数</strong>：x (一个数字)<br><strong>作用</strong>：取一个数的绝对值<br><strong>返回值</strong>：<code>x</code> 的绝对值。如果 <code>x</code> 是负数（包括 <code>-0</code>），则返回 <code>-x</code>。否则，返回 <code>x</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">abs</span>(-<span class="number">10.5</span>)); <span class="comment">// 10.5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = -<span class="number">10</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// -10</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">abs</span>(a)); <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><p><strong>强制转换参数</strong><br><code>Math.abs()</code> 将其参数强制转换为数字。无法强制转换的值将变成 <code>NaN</code>，使 <code>Math.abs()</code> 也返回 <code>NaN</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Math</span>.<span class="title function_">abs</span>(<span class="string">&quot;-1&quot;</span>); <span class="comment">// 1</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">abs</span>(-<span class="number">2</span>); <span class="comment">// 2</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">abs</span>(<span class="literal">null</span>); <span class="comment">// 0</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">abs</span>(<span class="string">&quot;&quot;</span>); <span class="comment">// 0</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">abs</span>([]); <span class="comment">// 0</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">abs</span>([<span class="number">2</span>]); <span class="comment">// 2</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">abs</span>([<span class="number">1</span>, <span class="number">2</span>]); <span class="comment">// NaN</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">abs</span>(&#123;&#125;); <span class="comment">// NaN</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">abs</span>(<span class="string">&quot;string&quot;</span>); <span class="comment">// NaN</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">abs</span>(); <span class="comment">// NaN</span></span><br></pre></td></tr></table></figure><h4 id="6-Math-min"><a href="#6-Math-min" class="headerlink" title="(6) Math.min()"></a>(6) Math.min()</h4><p><strong><code>Math.min()</code></strong> 函数返回作为输入参数的数字中最小的一个，如果没有参数，则返回<code>Infinity</code>。<br><strong>语法</strong>：Math.min(数字1，数字2，数字3…)<br><strong>作用</strong>：寻找一组数中的最小值<br><strong>返回值</strong>：给定数值中最小的数。如果任一参数不能转换为数值，则返回 <code>NaN</code>。如果没有提供参数，返回 <code>Infinity</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="number">10</span>, <span class="number">30</span>, <span class="number">50</span>, <span class="number">70</span> ,<span class="number">34</span>)); <span class="comment">// 10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">23</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">34</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">min</span>(...arr)); <span class="comment">// 1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">min</span>()); <span class="comment">// Infinity</span></span><br></pre></td></tr></table></figure><h4 id="7-Math-max"><a href="#7-Math-max" class="headerlink" title="(7) Math.max()"></a>(7) Math.max()</h4><p><code>Math.max()</code> 函数返回作为输入参数的最大数字，如果没有参数，则返回 <code>-Infinity</code>。<br><strong>语法</strong>：Math.max(数字1，数字2，数字3…)<br><strong>作用</strong>：寻找一组数中的最大值<br><strong>返回值</strong>：给定数值中最大的数。如果任一参数不能转换为数值，则返回 <code>NaN</code>。如果没有提供参数，返回 <code>-Infinity</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">48</span>, <span class="number">29</span>, <span class="number">40</span>, <span class="number">28</span>, -<span class="number">29</span>)); <span class="comment">// 48</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">23</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">34</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(...arr)); <span class="comment">// 34</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>()); <span class="comment">// -Infinity</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> max = arr.<span class="title function_">reduce</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> <span class="title class_">Math</span>.<span class="title function_">max</span>(a, b), -<span class="title class_">Infinity</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(max); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><h4 id="8-Math-PI"><a href="#8-Math-PI" class="headerlink" title="(8) Math.PI"></a>(8) Math.PI</h4><p><strong><code>Math.PI</code></strong> 表示一个圆的周长与直径的比例，约为 3.14159<br><strong>语法</strong>：Math.PI<br><strong>作用</strong>：就是一个常量（π），经常当做常量用来参与运算。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="property">PI</span>); <span class="comment">// 3.141592653589793</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">100</span>); <span class="comment">// 314.1592653589793</span></span><br></pre></td></tr></table></figure><p><strong>案例</strong>：使用 Math.PI 计算给定半径的圆周长</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">calcul</span> (radius) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span> * radius;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">calcul</span>(<span class="number">1</span>);  <span class="comment">// 6.283185307179586</span></span><br></pre></td></tr></table></figure><p>了解更多Math对象方法可以观看官方文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/random">Math.random() - JavaScript | MDN (mozilla.org)</a></p><h3 id="重要案例"><a href="#重要案例" class="headerlink" title="重要案例"></a>重要案例</h3><ol><li>得到两个数之间的随机整数并且包含着两个整数<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getRandom</span>(<span class="params">min,max</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*(max - min)) + min;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getRandom</span>(<span class="number">2</span>,<span class="number">6</span>));</span><br></pre></td></tr></table></figure></li><li>封装一个函数， 随机生成一个rgb颜色<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">randNum</span>(<span class="params">min, max</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (max - min)) + min;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">randColor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`rgb(<span class="subst">$&#123;randNum(<span class="number">0</span>, <span class="number">255</span>)&#125;</span>, <span class="subst">$&#123;randNum(<span class="number">0</span>, <span class="number">255</span>)&#125;</span>, <span class="subst">$&#123;randNum(<span class="number">0</span>, <span class="number">255</span>)&#125;</span>)`</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">randColor</span>()); <span class="comment">// rgb(100, 200, 244)</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="六-对象的静态方法"><a href="#六-对象的静态方法" class="headerlink" title="六. 对象的静态方法"></a>六. 对象的静态方法</h2><p><strong>实例用例</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">b</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">c</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">d</span>: <span class="number">4</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Object-keys"><a href="#Object-keys" class="headerlink" title="Object.keys()"></a>Object.keys()</h3><blockquote><p>将对象的key值放到一个数组中返回</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(obj));<span class="comment">// [&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;,&#x27;d&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="Object-values"><a href="#Object-values" class="headerlink" title="Object.values()"></a>Object.values()</h3><blockquote><p>将对象的value值放到一个数组中返回</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">values</span>(obj));<span class="comment">// [1,2,]</span></span><br></pre></td></tr></table></figure><h2 id="七-进制之间的转换方式"><a href="#七-进制之间的转换方式" class="headerlink" title="七. 进制之间的转换方式"></a>七. 进制之间的转换方式</h2><h3 id="一-十进制转为其他进制"><a href="#一-十进制转为其他进制" class="headerlink" title="(一) 十进制转为其他进制"></a>(一) 十进制转为其他进制</h3><p><strong>语法</strong>：十进制数字.toString(要转换的进制);<br><strong>返回值</strong>：一个字符串格式的数字</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">255</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num.<span class="title function_">toString</span>(<span class="number">2</span>)); <span class="comment">// 11111111</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num.<span class="title function_">toString</span>(<span class="number">16</span>                 )); <span class="comment">// ff</span></span><br></pre></td></tr></table></figure><h3 id="二-其他进制转为十进制"><a href="#二-其他进制转为十进制" class="headerlink" title="(二) 其他进制转为十进制"></a>(二) 其他进制转为十进制</h3><p><strong>语法</strong>：parseInt(要转换的数字, 该数字原来是几进制)<br><strong>返回值</strong>：转换好的十进制数字</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseInt</span>(<span class="string">&quot;ff&quot;</span>, <span class="number">16</span>)); <span class="comment">// 255</span></span><br></pre></td></tr></table></figure><h3 id="三-案例：封装一个函数，生成随机十六进制颜色"><a href="#三-案例：封装一个函数，生成随机十六进制颜色" class="headerlink" title="(三) 案例：封装一个函数，生成随机十六进制颜色"></a>(三) 案例：封装一个函数，生成随机十六进制颜色</h3><h4 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">randNum</span>(<span class="params">min, max</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (max - min)) + min;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">randColor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 1. 生成一个 0 ~ 15 的随机数</span></span><br><span class="line">    <span class="comment">// 2. 把这个数字转为十六进制</span></span><br><span class="line">    <span class="comment">// 3. 重复6次</span></span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">&quot;#&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> num = <span class="title function_">randNum</span>(<span class="number">0</span>, <span class="number">15</span>);</span><br><span class="line">        num = num.<span class="title function_">toString</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="comment">//   console.log(num);</span></span><br><span class="line">        str += num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">randColor</span>()); <span class="comment">// #aacbb2</span></span><br></pre></td></tr></table></figure><h4 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成一个0 ~ 255 之间的数字 重复3次</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">randColor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">&quot;#&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// 什么时候需要前面 补 0</span></span><br><span class="line">        <span class="comment">// 在十进制的时候判断这个数字转成十六进制是不是一位，是就前面补0</span></span><br><span class="line">        <span class="keyword">var</span> num = <span class="title function_">randNum</span>(<span class="number">0</span>, <span class="number">255</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (num &lt;= <span class="number">15</span>) &#123;</span><br><span class="line">            <span class="comment">// 前面补0</span></span><br><span class="line">            num = <span class="string">&quot;0&quot;</span> + num.<span class="title function_">toString</span>(<span class="number">16</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            num = num.<span class="title function_">toString</span>(<span class="number">16</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        str += num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">randColor</span>());</span><br></pre></td></tr></table></figure><h2 id="八-定时器"><a href="#八-定时器" class="headerlink" title="八. 定时器"></a>八. 定时器</h2><h3 id="一-定时器分类"><a href="#一-定时器分类" class="headerlink" title="(一) 定时器分类"></a>(一) 定时器分类</h3><ol><li><strong>延迟定时器</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;, 毫秒数)</span><br></pre></td></tr></table></figure><strong>作用</strong>：隔一段时间之后执行</li><li><strong>间隔定时器</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;, 毫秒数)</span><br></pre></td></tr></table></figure><strong>作用</strong>：每隔一段时间执行一次</li><li><strong>关闭定时器</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">clearTimeout</span>(定时器)</span><br><span class="line"><span class="built_in">clearInterval</span>(定时器)</span><br></pre></td></tr></table></figure><strong>注</strong>：虽然关闭定时器的方式有两种，且没什么太大的区别，但是还是建议对应着使用。(如：setInterval &#x3D;&#x3D;&gt; clearInterval(定时器))</li></ol><h3 id="二-定时器的使用"><a href="#二-定时器的使用" class="headerlink" title="(二) 定时器的使用"></a>(二) 定时器的使用</h3><ol><li><strong>延迟定时器</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;执行了。。。&quot;</span>);</span><br><span class="line">&#125;, <span class="number">2000</span>); <span class="comment">// 2s 之后，控制台输出：执行了。。。</span></span><br></pre></td></tr></table></figure></li><li><strong>间隔定时器</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;执行了...&quot;</span>);</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br></pre></td></tr></table></figure></li><li><strong>关闭定时器</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> t1 = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;执行了延迟定时器&quot;</span>);</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br><span class="line"><span class="built_in">clearInterval</span>(t1); <span class="comment">// 关闭定时器</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="三-案例：实现抽奖效果"><a href="#三-案例：实现抽奖效果" class="headerlink" title="(三) 案例：实现抽奖效果"></a>(三) 案例：实现抽奖效果</h3><h4 id="方式一-1"><a href="#方式一-1" class="headerlink" title="方式一"></a>方式一</h4><p><strong>HTML代码</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span>开始抽奖<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>CSS代码</strong>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>JavaScript代码</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 奖品</span></span><br><span class="line"><span class="keyword">var</span> arr = [</span><br><span class="line">    <span class="string">&quot;皮筋一个&quot;</span>,</span><br><span class="line">    <span class="string">&quot;辣条一包&quot;</span>,</span><br><span class="line">    <span class="string">&quot;谢谢惠顾&quot;</span>,</span><br><span class="line">    <span class="string">&quot;包子一个&quot;</span>,</span><br><span class="line">    <span class="string">&quot;卡片一张&quot;</span>,</span><br><span class="line">    <span class="string">&quot;发夹一个&quot;</span>,</span><br><span class="line">    <span class="string">&quot;手机模型&quot;</span>,</span><br><span class="line">    <span class="string">&quot;空头支票&quot;</span>,</span><br><span class="line">    <span class="string">&quot;皮球一个&quot;</span>,</span><br><span class="line">    <span class="string">&quot;果冻一个&quot;</span></span><br><span class="line">];</span><br><span class="line"><span class="comment">// 随机生成 0~arr.length-1 随机数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">randNum</span>(<span class="params">min, max</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (max - min)) + min;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 标记思维</span></span><br><span class="line"><span class="keyword">var</span> flag = <span class="literal">false</span>;</span><br><span class="line">t = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">// 点击开始</span></span><br><span class="line">box.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">        <span class="comment">// 每个一段时间进行内容切换</span></span><br><span class="line">        t = <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="comment">// 调用生成随机数函数</span></span><br><span class="line">            <span class="keyword">var</span> num = <span class="title function_">randNum</span>(<span class="number">0</span>, arr.<span class="property">length</span> - <span class="number">1</span>);</span><br><span class="line">            <span class="comment">// 将生成的随机数当做数组的索引，显示数组的值</span></span><br><span class="line">            <span class="keyword">var</span> res = arr[num];</span><br><span class="line">            <span class="comment">// 将对应的值显示到页面中</span></span><br><span class="line">            box.<span class="property">innerHTML</span> = res;</span><br><span class="line">        &#125;, <span class="number">100</span>);</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(t);</span><br><span class="line">        flag = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><p><img src="/../_resources/%E6%8A%BD%E5%A5%961.gif" class="lazyload placeholder" data-srcset="/../_resources/%E6%8A%BD%E5%A5%961.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/抽奖1.gif"></p><h4 id="方式二-1"><a href="#方式二-1" class="headerlink" title="方式二"></a>方式二</h4><p><strong>HTML代码</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span>开始抽奖<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn1&quot;</span>&gt;</span>开始<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn2&quot;</span>&gt;</span>停止<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>CSS代码</strong>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>JavaScript代码</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 随机生成 0~arr.length-1 随机数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">randNum</span>(<span class="params">min, max</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (max - min)) + min;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 奖品</span></span><br><span class="line"><span class="keyword">var</span> arr = [</span><br><span class="line">    <span class="string">&quot;皮筋一个&quot;</span>,</span><br><span class="line">    <span class="string">&quot;辣条一包&quot;</span>,</span><br><span class="line">    <span class="string">&quot;谢谢惠顾&quot;</span>,</span><br><span class="line">    <span class="string">&quot;包子一个&quot;</span>,</span><br><span class="line">    <span class="string">&quot;卡片一张&quot;</span>,</span><br><span class="line">    <span class="string">&quot;发夹一个&quot;</span>,</span><br><span class="line">    <span class="string">&quot;手机模型&quot;</span>,</span><br><span class="line">    <span class="string">&quot;空头支票&quot;</span>,</span><br><span class="line">    <span class="string">&quot;皮球一个&quot;</span>,</span><br><span class="line">    <span class="string">&quot;果冻一个&quot;</span></span><br><span class="line">];</span><br><span class="line"><span class="comment">// 随机生成 0~arr.length-1 随机数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">randNum</span>(<span class="params">min, max</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (max - min)) + min;</span><br><span class="line">&#125;</span><br><span class="line">t = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">// 点击开始</span></span><br><span class="line">btn1.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 防止点击开始重复触发</span></span><br><span class="line">    <span class="keyword">if</span> (t) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 每个一段时间进行内容切换</span></span><br><span class="line">    t = <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 调用生成随机数函数</span></span><br><span class="line">        <span class="keyword">var</span> num = <span class="title function_">randNum</span>(<span class="number">0</span>, arr.<span class="property">length</span> - <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 将生成的随机数当做数组的索引，显示数组的值</span></span><br><span class="line">        <span class="keyword">var</span> res = arr[num];</span><br><span class="line">        <span class="comment">// 将对应的值显示到页面中</span></span><br><span class="line">        box.<span class="property">innerHTML</span> = res;</span><br><span class="line">    &#125;, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">btn2.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(t);</span><br><span class="line">    t = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><p><img src="/../_resources/%E6%8A%BD%E5%A5%962.gif" class="lazyload placeholder" data-srcset="/../_resources/%E6%8A%BD%E5%A5%962.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/抽奖2.gif"></p><h2 id="九-Date-日期对象概述及相关方法"><a href="#九-Date-日期对象概述及相关方法" class="headerlink" title="九. Date 日期对象概述及相关方法"></a>九. Date 日期对象概述及相关方法</h2><h3 id="一-日期对象的创建"><a href="#一-日期对象的创建" class="headerlink" title="(一) 日期对象的创建"></a>(一) 日期对象的创建</h3><p>Date 日期对象是一个构造函数，必须使用new来调用创建对象。<br>其创建方式类似于数组和对象的创建方式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>();<span class="comment">// 创建一个数组对象</span></span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="title class_">Object</span>();<span class="comment">// 创建了一个实例对象</span></span><br></pre></td></tr></table></figure><p>使用Date 如果没有参数，返回当前系统的当前时间</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date);</span><br></pre></td></tr></table></figure><h3 id="二-日期对象的相关方法"><a href="#二-日期对象的相关方法" class="headerlink" title="(二) 日期对象的相关方法"></a>(二) 日期对象的相关方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br></pre></td></tr></table></figure><table><thead><tr><th>方法名</th><th>说明</th><th>使用</th></tr></thead><tbody><tr><td>getFullYear()</td><td>获取当年</td><td>date.getFullYear()</td></tr><tr><td>getMonth()</td><td>获取当月（0-11）</td><td>date.getMonth()</td></tr><tr><td>getDate()</td><td>获取当天日期</td><td>date.getDate()</td></tr><tr><td>getDay()</td><td>获取星期几（周日(0)到周六(6)）</td><td>date.getDay()</td></tr><tr><td>getHours()</td><td>获取当前小时</td><td>date.getHours()</td></tr><tr><td>getMinutes()</td><td>获取当前分钟</td><td>date.getMinutes()</td></tr><tr><td>getSeconds()</td><td>获取当前秒钟</td><td>date.getSeconds()</td></tr><tr><td>setFullYear()</td><td>设置年份</td><td>date.setFullYear()</td></tr><tr><td>setMonth()</td><td>设置月份</td><td>date.setMonth()</td></tr><tr><td>setDate()</td><td>设置日期</td><td>date.setDate()</td></tr><tr><td>setHours()</td><td>设置小时</td><td>date.setHours()</td></tr><tr><td>setMinutes()</td><td>设置分钟</td><td>date.setMinutes()</td></tr><tr><td>setSeconds()</td><td>设置秒钟</td><td>date.setSeconds()</td></tr></tbody></table><h3 id="三-时间戳"><a href="#三-时间戳" class="headerlink" title="(三) 时间戳"></a>(三) 时间戳</h3><p>从 格林威治时间 到现在的毫秒数</p><blockquote><p>获取1970年01月01日00时00分00秒至现在的总毫秒数</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date.<span class="title function_">getTime</span>()); <span class="comment">// 1672320018445</span></span><br><span class="line"><span class="comment">// 设置</span></span><br><span class="line">date.<span class="title function_">setTime</span>(<span class="number">1000</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date); <span class="comment">// Thu Jan 01 1970 08:00:01 GMT+0800 (香港标准时间)</span></span><br></pre></td></tr></table></figure><p><strong>Date.now（）</strong> 方法返回自1970年1月1日00.00.00UTC到当前时间的毫秒数</p><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><h5 id="案例1：在页面上展示一个时钟，隔1s更新一次"><a href="#案例1：在页面上展示一个时钟，隔1s更新一次" class="headerlink" title="案例1：在页面上展示一个时钟，隔1s更新一次"></a>案例1：在页面上展示一个时钟，隔1s更新一次</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;box&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装一个函数，当数字是一位数的时候，前面补0</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">format</span>(<span class="params">num</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> num &gt;= <span class="number">10</span> ? num : <span class="string">&quot;0&quot;</span> + num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">dateStr</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 定义一个空字符串</span></span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">// 获取终端的日期</span></span><br><span class="line">    <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="comment">// 获取年份</span></span><br><span class="line">    <span class="keyword">var</span> year = date.<span class="title function_">getFullYear</span>();</span><br><span class="line">    <span class="comment">// 获取月份，从0开始所以需要+1</span></span><br><span class="line">    <span class="keyword">var</span> month = date.<span class="title function_">getMonth</span>() + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 获取日期</span></span><br><span class="line">    <span class="keyword">var</span> day = date.<span class="title function_">getDate</span>();</span><br><span class="line">    <span class="comment">// 获取星期</span></span><br><span class="line">    <span class="keyword">var</span> week = date.<span class="title function_">getDay</span>();</span><br><span class="line">    <span class="keyword">var</span> weekStr = <span class="string">&quot;日一二三四五六&quot;</span>;</span><br><span class="line">    week = <span class="string">&quot;星期&quot;</span> + weekStr[week];</span><br><span class="line">    <span class="comment">// 获取小时</span></span><br><span class="line">    <span class="keyword">var</span> h = date.<span class="title function_">getHours</span>();</span><br><span class="line">    <span class="comment">// 获取分钟</span></span><br><span class="line">    <span class="keyword">var</span> m = date.<span class="title function_">getMinutes</span>();</span><br><span class="line">    <span class="comment">// 获取秒数</span></span><br><span class="line">    <span class="keyword">var</span> s = date.<span class="title function_">getSeconds</span>();</span><br><span class="line">    <span class="comment">// 进行拼接</span></span><br><span class="line">    str = <span class="string">`<span class="subst">$&#123;year&#125;</span>年<span class="subst">$&#123;month&#125;</span>月<span class="subst">$&#123;day&#125;</span>日 <span class="subst">$&#123;week&#125;</span>  <span class="subst">$&#123;format(h)&#125;</span>:<span class="subst">$&#123;format(</span></span></span><br><span class="line"><span class="subst"><span class="string">        m</span></span></span><br><span class="line"><span class="subst"><span class="string">    )&#125;</span>:<span class="subst">$&#123;format(s)&#125;</span>`</span>;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 显示在页面上</span></span><br><span class="line">box.<span class="property">innerHTML</span> = <span class="title function_">dateStr</span>();</span><br><span class="line"><span class="comment">// 利用间隔定时器，进行每隔一秒数字变化</span></span><br><span class="line"><span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    box.<span class="property">innerHTML</span> = <span class="title function_">dateStr</span>();</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><p><img src="/../_resources/%E6%97%B6%E9%92%9F%E5%8F%98%E5%8C%96.gif" class="lazyload placeholder" data-srcset="/../_resources/%E6%97%B6%E9%92%9F%E5%8F%98%E5%8C%96.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/时钟变化.gif"></p><h5 id="案例2：距离除夕倒计时"><a href="#案例2：距离除夕倒计时" class="headerlink" title="案例2：距离除夕倒计时"></a>案例2：距离除夕倒计时</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;h4&gt;距离除夕倒计时：&lt;/h4&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="comment">// 封装函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">countDown</span>(<span class="params">date</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// 目标日期</span></span><br><span class="line">    <span class="keyword">var</span> futureTime = <span class="keyword">new</span> <span class="title class_">Date</span>(date);</span><br><span class="line">    <span class="comment">// 当前日期</span></span><br><span class="line">    <span class="keyword">var</span> currentTime = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="comment">// 距离最终日期的剩余时间</span></span><br><span class="line">    <span class="keyword">var</span> time = <span class="built_in">parseInt</span>((futureTime - currentTime) / <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果time&lt;1,关闭定时器</span></span><br><span class="line">    <span class="keyword">if</span> (time &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="built_in">clearInterval</span>(t);</span><br><span class="line">                     <span class="keyword">return</span> <span class="string">&#x27;你设置的时间已经过去&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 依次计算剩余天数、小时数、分钟数、秒钟数</span></span><br><span class="line">    <span class="keyword">var</span> day = <span class="built_in">parseInt</span>(time / (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span>));</span><br><span class="line">    <span class="keyword">var</span> hour = <span class="built_in">parseInt</span>(time % (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span>) / (<span class="number">60</span> * <span class="number">60</span>));</span><br><span class="line">    <span class="keyword">var</span> min = <span class="built_in">parseInt</span>(time % (<span class="number">60</span> * <span class="number">60</span>) / <span class="number">60</span>);</span><br><span class="line">    <span class="keyword">var</span> sec = time % <span class="number">60</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;day&#125;</span>天<span class="subst">$&#123;hour&#125;</span>时<span class="subst">$&#123;min&#125;</span>分<span class="subst">$&#123;sec&#125;</span>秒`</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 设置目标日期</span></span><br><span class="line"><span class="keyword">const</span> date = <span class="string">&quot;2023/1/21&quot;</span>;</span><br><span class="line"><span class="comment">// 利用间隔定时器，进行每隔一秒数字变化</span></span><br><span class="line"><span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    box.<span class="property">innerHTML</span> = <span class="title function_">countDown</span>(date);</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><p><img src="/../_resources/%E9%99%A4%E5%A4%95%E5%A4%9C%E5%80%92%E8%AE%A1%E6%97%B6.gif" class="lazyload placeholder" data-srcset="/../_resources/%E9%99%A4%E5%A4%95%E5%A4%9C%E5%80%92%E8%AE%A1%E6%97%B6.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/除夕夜倒计时.gif"></p>]]></content>
    
    
    <summary type="html">在JavaScript中，对象是一组无序的相关属性（方法）的集合，所有的事物都是对象，例如：字符串、数组、函数等。</summary>
    
    
    
    <category term="前端" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
    <category term="前端" scheme="https://fanxing28.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://fanxing28.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>BOM和DOM</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/JavaScript/%E3%80%90JS%E3%80%91BOM%E5%92%8CDOM/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/JavaScript/%E3%80%90JS%E3%80%91BOM%E5%92%8CDOM/</id>
    <published>2023-11-28T14:32:25.000Z</published>
    <updated>2023-12-02T12:25:03.631Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-本地存储"><a href="#一-本地存储" class="headerlink" title="一. 本地存储"></a>一. 本地存储</h2><h3 id="一-概念"><a href="#一-概念" class="headerlink" title="(一) 概念"></a>(一) 概念</h3><p><strong>HTML5</strong>中增加了两种全新的数据存储方式：</p><blockquote><p><strong>WebStorage</strong>和<strong>WebSQLDatabase</strong>。</p></blockquote><ul><li>WebStorage可用于临时或永久保存客户端的少量数据。</li><li>WebSQLDatabase是客户端本地化的一套数据库系统，可以将大量的数据保存在客户端，无须与服务器端进行交互，极大地减轻了服务器端的压力。</li><li>WebStorage存储是HTML5为数据存储在客户端提供的一项重要功能，分为两种：sessionStorage(保存会话数据)和loaclStorage(在客户端长期保存数据)。</li></ul><h3 id="二-本地存储特性"><a href="#二-本地存储特性" class="headerlink" title="(二) 本地存储特性"></a>(二) 本地存储特性</h3><ol><li>数据存储在用户浏览器中</li><li>设置、读取方便、甚至页面刷新不丢失数据</li><li>容量较大，sessionStorage约5M、localStorage约20M</li><li>只能存储字符串，但对象可以使用<code>JSON.stringify()</code>进行编码后存储</li></ol><h3 id="三-会话级存储"><a href="#三-会话级存储" class="headerlink" title="(三) 会话级存储"></a>(三) 会话级存储</h3><blockquote><p><code>window.sessionStorage</code></p></blockquote><p><strong>特点</strong>：</p><ol><li>生命周期结束为关闭浏览器窗口</li><li>在同一窗口（页面）下数据可以共享（不能跨页面共享）</li><li>以键值对的形式存储使用<br>(1) <strong>存储数据</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">sessionStorage</span>.<span class="title function_">setItem</span>(key,value)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">sessionStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;a&quot;</span>, <span class="number">1000</span>);</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">sessionStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;b&quot;</span>, <span class="number">2000</span>);</span><br></pre></td></tr></table></figure></li></ol><p><img src="/../_resources/session.jpg" class="lazyload placeholder" data-srcset="/../_resources/session.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/session.jpg"></p><p><strong>(2) 获取数据</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">sessionStorage</span>.<span class="title function_">getItem</span>(key)</span><br></pre></td></tr></table></figure><ul><li>如果<code>sessionStorage</code>内有这个key，则获得该key对应的value</li><li>如果<code>sessionStorage</code>内没有这个key， 则输出null<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">sessionStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;a&quot;</span>)); <span class="comment">// 1000</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">sessionStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;c&quot;</span>)); <span class="comment">// null</span></span><br></pre></td></tr></table></figure><strong>(3) 删除数据</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">sessionStorage</span>.<span class="title function_">removeItem</span>(key)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">sessionStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&quot;b&quot;</span>);</span><br></pre></td></tr></table></figure><strong>(4) 删除所有数据</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">sessionStorage</span>.<span class="title function_">clear</span>()</span><br></pre></td></tr></table></figure><strong>实例</strong>：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;set&quot;</span>&gt;</span>存储数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;get&quot;</span>&gt;</span>获取数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;remove&quot;</span>&gt;</span>删除数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;del&quot;</span>&gt;</span>清空所有数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">var</span> ipt = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> set = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.set&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> get = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.get&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> remove = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.remove&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> del = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.del&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    set.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> val = ipt.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">sessionStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;uname&#x27;</span>, val);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">sessionStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;pwd&#x27;</span>, val);</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    get.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">sessionStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;uname&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    remove.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">sessionStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&#x27;uname&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    del.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">sessionStorage</span>.<span class="title function_">clear</span>(<span class="string">&#x27;uname&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="四-持久性存储"><a href="#四-持久性存储" class="headerlink" title="(四) 持久性存储"></a>(四) 持久性存储</h3><blockquote><p><code>window.localStorage</code></p></blockquote><p><strong>特点</strong>：</p><ol><li>生命周期永久生效，除非手动删除否则关闭页面也会存在</li><li>可以多窗口（页面）共享（同一浏览器可以共享）</li><li>以键值对的形式存储使用<br>(1) <strong>存储数据</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(key,value)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;a&quot;</span>, <span class="number">1000</span>);</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;b&quot;</span>, <span class="number">2000</span>);</span><br></pre></td></tr></table></figure></li></ol><p><img src="/../_resources/location.jpg" class="lazyload placeholder" data-srcset="/../_resources/location.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/location.jpg"></p><p>(2) <strong>获取数据</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(key)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;a&quot;</span>)); <span class="comment">// 1000</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;c&quot;</span>)); <span class="comment">// null</span></span><br></pre></td></tr></table></figure><p>(3) <strong>删除数据</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(key)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">sessionStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&quot;b&quot;</span>);</span><br></pre></td></tr></table></figure><p>(4) <strong>删除所有数据</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">clear</span>()</span><br></pre></td></tr></table></figure><p><strong>实例</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;set&quot;</span>&gt;</span>存储数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;get&quot;</span>&gt;</span>获取数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;remove&quot;</span>&gt;</span>删除数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;del&quot;</span>&gt;</span>清空所有数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">var</span> ipt = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> set = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.set&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> get = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.get&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> remove = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.remove&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> del = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.del&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    set.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> val = ipt.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;uname&#x27;</span>, val);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;pwd&#x27;</span>, val);</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    get.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;uname&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    remove.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&#x27;uname&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    del.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">localStorage</span>.<span class="title function_">clear</span>(<span class="string">&#x27;uname&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="五-cookie"><a href="#五-cookie" class="headerlink" title="(五) cookie"></a>(五) cookie</h3><p><strong>(1) cookie的概念</strong><br>cookie又叫<strong>会话跟踪技术</strong>是由Web服务器保存在用户浏览器上的小文本文件，它可以包含相关用户的信息。<br><strong>(2) cookie的特点</strong></p><ol><li>只能存储字符串，并且有自己的固定格式<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key=value;key2=value2;key3=value3</span><br></pre></td></tr></table></figure></li><li>cookie 存储有大小限制（4kb左右）</li><li>存储具有时效性（默认是会话级别，可以手动设置过期时间）</li><li>操作依赖服务器（本地打开的页面不能操作cookie，必须用服务器打开）</li><li>跟随前后端请求自动携带，前后端都可以操作</li><li>存储的时候依赖域名（使用哪个域名存储，就用哪个域名，不能跨域名通讯）<br>在vscode中测试：需要在服务器下打开<blockquote><p>需要开启一个本地服务器，vscode中安装插件：live server 然后使用时：鼠标右键，点击open with live server</p></blockquote></li></ol><p><strong>cook 函数封装</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cookies = &#123;</span><br><span class="line">    <span class="title function_">set</span>(<span class="params">name, value, day</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> d = <span class="keyword">new</span> <span class="title class_">Date</span>(); <span class="comment">//获取当前日期</span></span><br><span class="line">        d.<span class="title function_">setDate</span>(d.<span class="title function_">getDate</span>() + day); <span class="comment">//重新设置日期</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">cookie</span> = <span class="string">`<span class="subst">$&#123;name&#125;</span>=<span class="subst">$&#123;value&#125;</span>;expires=<span class="subst">$&#123;d&#125;</span>;path=/`</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">get</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> arr = <span class="variable language_">document</span>.<span class="property">cookie</span>.<span class="title function_">split</span>(<span class="string">&#x27;; &#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123; <span class="comment">//遍历将三项值的数组变成三个数组。 而且肯定三个数组都是包含两项值，第一项都是键，第二项都是值</span></span><br><span class="line">            <span class="keyword">let</span> newArr = arr[i].<span class="title function_">split</span>(<span class="string">&#x27;=&#x27;</span>); <span class="comment">//newArr[0]:键   newArr[1]:值</span></span><br><span class="line">            <span class="keyword">if</span> (name === newArr[<span class="number">0</span>]) &#123;</span><br><span class="line">                <span class="keyword">return</span> newArr[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">remove</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">set</span>(name, <span class="string">&#x27;&#x27;</span>, -<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>cookie 操作</strong></p><ol><li><strong>设置一条cookie</strong><br> 语法：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">cookie</span> = <span class="string">&#x27;key=value&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">cookie</span> = <span class="string">&quot;a=100&quot;</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">cookie</span> = <span class="string">&quot;b=200&quot;</span>;</span><br></pre></td></tr></table></figure></li><li><strong>设置一条带有过期时间的cookie</strong><br> 语法：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">cookie</span> = <span class="string">&#x27;key=value;expires=时间对象&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：不管我们设置的时候什么时间，都按照世界标准时间计算</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> time = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">cookie</span> = <span class="string">&quot;a=100;expires=&quot;</span> + time;</span><br></pre></td></tr></table></figure></li></ol><p><img src="/../_resources/cookie.jpg" class="lazyload placeholder" data-srcset="/../_resources/cookie.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/cookie.jpg"></p><p><strong>要想设置一个30s之后过期的cookie</strong></p><blockquote><p>要先拿到当前的时间，向前调整8小时，</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> time = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="comment">// 向前调整8小时, 再向后推30s</span></span><br><span class="line">time.<span class="title function_">setTime</span>(time.<span class="title function_">getTime</span>() - <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">8</span> + <span class="number">30</span> * <span class="number">1000</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">cookie</span> = <span class="string">&quot;a=100;expires=&quot;</span> + time;</span><br></pre></td></tr></table></figure><p>再向后设置需要过期的时间就可以。<br><strong>案例</strong>：将获取到的cookie的值转换为对象形式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getCookie</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 1. 先拿到cookie</span></span><br><span class="line">    <span class="keyword">var</span> cookie = <span class="variable language_">document</span>.<span class="property">cookie</span>;</span><br><span class="line">    <span class="comment">// 2. 准备一个空对象</span></span><br><span class="line">    <span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line">    <span class="keyword">var</span> arr = cookie.<span class="title function_">split</span>(<span class="string">&quot;;&quot;</span>); <span class="comment">//&amp;nbsp;[&#x27;b=200&#x27;, &#x27; a=100&#x27;]</span></span><br><span class="line">    arr.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">        <span class="comment">// item  b=200</span></span><br><span class="line">        <span class="keyword">var</span> t = item.<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>); <span class="comment">// [&#x27;b&#x27;, 100]</span></span><br><span class="line">        <span class="keyword">var</span> key = t[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">var</span> value = t[<span class="number">1</span>];</span><br><span class="line">        obj[key] = value;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(obj);</span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getCookie</span>();</span><br></pre></td></tr></table></figure><h3 id="六-本地存储的区别"><a href="#六-本地存储的区别" class="headerlink" title="(六) 本地存储的区别"></a>(六) 本地存储的区别</h3><h4 id="1-cookie和storage的区别"><a href="#1-cookie和storage的区别" class="headerlink" title="(1) cookie和storage的区别"></a>(1) cookie和storage的区别</h4><ol><li><strong>出现时间</strong><blockquote><p>cookie 在JavaScript刚出现的时候就有了 storage 是H5新增的新特性</p></blockquote></li><li><strong>存储大小</strong><blockquote><p>cookie 4kb storage 20M</p></blockquote></li><li><strong>前后端交互</strong><blockquote><p>storage 存储的数据不会跟随页面携带 cookie 存储的数据会跟随页面请求自动携带</p></blockquote></li><li><strong>前后端操作</strong><blockquote><p>storage 只能利用JavaScript操作 cookie 前后端都可以操作</p></blockquote></li><li><strong>过期时间</strong><blockquote><p>cookie 默认是会话级，可以手动设置过期时间 storage 不能手动设置过期时间</p></blockquote></li></ol><h4 id="2-localStorage和sessionStorage的区别"><a href="#2-localStorage和sessionStorage的区别" class="headerlink" title="(2) localStorage和sessionStorage的区别"></a>(2) localStorage和sessionStorage的区别</h4><ol><li><strong>过期时间</strong><blockquote><p>localStorage 永久存储</p></blockquote></li></ol><p>sessionStorage 临时存储<br>2. <strong>跨页面通讯</strong></p><blockquote><p>localStorage 直接跨页面（<strong>同一个域名下</strong>共享数据）</p></blockquote><p>sessionStorage 只能是从当前窗口跳转的<br>3. <strong>共同点</strong></p><blockquote><p>只能存字符串，不能存复杂数据类型</p></blockquote><h3 id="七-案例：记住用户名"><a href="#七-案例：记住用户名" class="headerlink" title="(七) 案例：记住用户名"></a>(七) 案例：记住用户名</h3><p>如果勾选记住用户名，下次用户名打开浏览器，就在文本框里面自动显示上次登录的用户名</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">       <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">name</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">id</span>=<span class="string">&quot;remember&quot;</span></span></span><br><span class="line"><span class="tag">       /&gt;</span>记住用户名</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> username = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#username&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> remember = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#remember&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;username&#x27;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">        username.<span class="property">value</span> = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;username&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        remember.<span class="property">checked</span> = <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    remember.<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">checked</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;username&#x27;</span>, username.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&#x27;username&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图：</p><p><img src="https://imagesfx.oss-cn-shanghai.aliyuncs.com/img/JavaScript/%E8%AE%B0%E4%BD%8F%E7%94%A8%E6%88%B7%E5%90%8D.jpg" class="lazyload placeholder" data-srcset="https://imagesfx.oss-cn-shanghai.aliyuncs.com/img/JavaScript/%E8%AE%B0%E4%BD%8F%E7%94%A8%E6%88%B7%E5%90%8D.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="https://imagesfx.oss-cn-shanghai.aliyuncs.com/img/JavaScript/%E8%AE%B0%E4%BD%8F%E7%94%A8%E6%88%B7%E5%90%8D.jpg"></p><h2 id="二-BOM-概念及相关操作"><a href="#二-BOM-概念及相关操作" class="headerlink" title="二. BOM 概念及相关操作"></a>二. BOM 概念及相关操作</h2><h3 id="一-BOM概念"><a href="#一-BOM概念" class="headerlink" title="(一) BOM概念"></a>(一) BOM概念</h3><p>BOM（Browser Object Model）是浏览器对象模型，用于访问浏览器的功能，这些功能与任何网页内容无关。</p><blockquote><p>其实就是可以操作浏览器的一些功能</p></blockquote><h4 id="BOM可以操作的内容"><a href="#BOM可以操作的内容" class="headerlink" title="BOM可以操作的内容"></a>BOM可以操作的内容</h4><ul><li>获取一些浏览器的相关信息（窗口的大小）</li><li>操作浏览器进行页面跳转</li><li>获取当前浏览器地址栏的信息</li><li>操作浏览器的滚动条</li><li>浏览器的信息（浏览器的版本）</li><li>让浏览器出现一个弹出框（<code>alert</code> &#x2F; <code>confirm</code> &#x2F; <code>prompt</code>）<br><strong>注</strong>：<code>BOM</code> 的核心就是 <code>window</code> 对象<blockquote><p><code>window</code> 是浏览器内置的一个对象，里面包含着操作浏览器的方法</p></blockquote></li></ul><h3 id="二-window内置对象和属性"><a href="#二-window内置对象和属性" class="headerlink" title="(二) window内置对象和属性"></a>(二) window内置对象和属性</h3><h4 id="1-获取浏览器窗口的尺寸"><a href="#1-获取浏览器窗口的尺寸" class="headerlink" title="(1) 获取浏览器窗口的尺寸"></a>(1) 获取浏览器窗口的尺寸</h4><p><strong>相关方法</strong>： <code>innerHeight</code> 和 <code>innerWidth</code></p><blockquote><p>这两个方法分别是用来获取浏览器窗口的宽度和高度</p></blockquote><p><strong>需要注意的点</strong>：这两个方法获取的尺寸是<strong>包含滚动条</strong>在内的尺寸</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 高度</span></span><br><span class="line"><span class="keyword">var</span> windowHeight = <span class="variable language_">window</span>.<span class="property">innerHeight</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(windowHeight);</span><br><span class="line"><span class="comment">// 宽度</span></span><br><span class="line"><span class="keyword">var</span> windowWidth = <span class="variable language_">window</span>.<span class="property">innerWidth</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(windowWidth);</span><br></pre></td></tr></table></figure><h4 id="2-获取文档窗口的尺寸"><a href="#2-获取文档窗口的尺寸" class="headerlink" title="(2) 获取文档窗口的尺寸"></a>(2) 获取文档窗口的尺寸</h4><p><strong>相关方法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 宽度</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span></span><br><span class="line"><span class="comment">// 高度</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span></span><br></pre></td></tr></table></figure><p><strong>需要注意的点</strong>：获取的尺寸<strong>不包含</strong>滚动条的，滚动条是浏览器的内容。</p><h4 id="3-浏览器的常见事件"><a href="#3-浏览器的常见事件" class="headerlink" title="(3) 浏览器的常见事件"></a>(3) 浏览器的常见事件</h4><ol><li><code>window.onload</code><br> <strong>语法</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;执行了onload&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>作用</strong>：当页面所有外部资源（img、js、音频、视频等）加载完毕之后触发。</li><li><code>window.onresize</code><br> <strong>语法</strong>：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onresize</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onresize</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;页面尺寸变化了&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>作用</strong>：当页面尺寸发生变化的时候触发。<br>3. <code>window.onscroll</code><br>    <strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onscroll</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onscroll</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;滚&quot;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>作用</strong>：当页面滚动条发生改变的时候触发。</p><h4 id="4-浏览器的历史记录"><a href="#4-浏览器的历史记录" class="headerlink" title="(4) 浏览器的历史记录"></a>(4) 浏览器的历史记录</h4><ol><li><strong>浏览历史回退一级</strong><br> <strong>语法</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">history</span>.<span class="title function_">back</span>();</span><br></pre></td></tr></table></figure><strong>作用</strong>：回到上一级历史记录，相当于浏览器中的 <code>←</code>。</li><li><strong>浏览历史前进一级</strong><br> <strong>语法</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">history</span>.<span class="title function_">forward</span>();</span><br></pre></td></tr></table></figure><strong>作用</strong>：去到下一级历史记录，相当于浏览器中的 <code>→</code> 。</li><li><strong>浏览历史指定跳转级数</strong><br> <strong>语法</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">history</span>.<span class="title function_">go</span>(参数);</span><br></pre></td></tr></table></figure><strong>作用</strong>：指定跳转到历史记录的级数<br><strong>参数</strong>：<blockquote><p>正整数 前进</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">history</span>.<span class="title function_">go</span>(-<span class="number">2</span>); <span class="comment">// 后退两个</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">history</span>.<span class="title function_">go</span>(<span class="number">1</span>); <span class="comment">// 前进一个</span></span><br></pre></td></tr></table></figure>0 刷新页面<br>负整数 回退</li><li><strong>history.length属性</strong><br> <strong>作用</strong>：history对象中缓存了多少级历史<br> <strong>注</strong>：length必须大于1，且新开启的窗口没有。</li></ol><h4 id="5-浏览器的标签页"><a href="#5-浏览器的标签页" class="headerlink" title="(5) 浏览器的标签页"></a>(5) 浏览器的标签页</h4><ol><li><code>open()</code><br> <strong>语法</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&#x27;地址&#x27;</span>);</span><br></pre></td></tr></table></figure><strong>作用</strong>：新打开一个标签页<br><strong>参数</strong>：新打开的标签页的地址<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;button id=<span class="string">&quot;btn1&quot;</span>&gt;新打开一个标签页&lt;/button&gt;</span><br><span class="line">&lt;!-- 分割符 --&gt;</span><br><span class="line">btn1.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;   </span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&#x27;https://blog.csdn.net/qq_45867247?spm=1000.2115.3001.5343&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>注</strong>：该方法类似于a标签中添加了<code>target = &quot;_blank&quot;</code>属性，会打开一个窗口。</li><li><code>close()</code><br> <strong>语法</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">close</span>()</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;button id=<span class="string">&quot;btn2&quot;</span>&gt;关闭当前标签页&lt;/button&gt;</span><br><span class="line">&lt;!-- 分割符 --&gt;</span><br><span class="line">btn2.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>作用</strong>：关闭当前标签页<br><strong>注</strong>：如果浏览器只打开了这一个标签页，则点击关闭时，会将浏览器一并关掉。</li></ol><h4 id="6-浏览器卷去的尺寸"><a href="#6-浏览器卷去的尺寸" class="headerlink" title="(6) 浏览器卷去的尺寸"></a>(6) 浏览器卷去的尺寸</h4><ol><li><strong>卷去的高度</strong><blockquote><p>大体作用就是测算当浏览器向下或向下滚动时，在页面顶部隐藏的高度。</p></blockquote></li></ol><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onscroll</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123; </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>卷去的宽度</strong><blockquote><p>大体作用就是测算当浏览器向左或向右滚动时，在页面左边隐藏的宽度。</p></blockquote></li></ol><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollLeft</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onscroll</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123; </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollLeft</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="7-浏览器滚动到的位置"><a href="#7-浏览器滚动到的位置" class="headerlink" title="(7) 浏览器滚动到的位置"></a>(7) 浏览器滚动到的位置</h4><blockquote><p>专门用来进行浏览器滚动条定位</p></blockquote><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">scrollTo</span>();</span><br></pre></td></tr></table></figure><ul><li><strong>参数类型1</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(x,y);</span><br></pre></td></tr></table></figure><blockquote><p>x：横向滚动条的位置 y：竖向滚动条的位置</p></blockquote></li></ul><p><strong>注</strong>：这两个参数都<code>必须写</code>，不写会报错。</p><ul><li><strong>参数类型2</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(&#123;<span class="attr">left</span>: xxx, <span class="attr">top</span>: xxx&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>可以选择其中一个方向填写</p></blockquote></li></ul><p><strong>注</strong>：如果只是单单书写以上代码，滚动的效果会是默认的瞬间移动到对应的位置。<br>如果想要平滑的滚动到相应的位置，可以添加<code>behavior: &#39;smooth&#39;</code>属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;button id=<span class="string">&quot;btn1&quot;</span>&gt;去到底部&lt;/button&gt;</span><br><span class="line">ul&gt;li&#123;$&#125;*<span class="number">100</span></span><br><span class="line">&lt;button id=<span class="string">&quot;btn2&quot;</span>&gt;回到顶部&lt;/button&gt; </span><br><span class="line">&lt;!-- 分割线 --&gt;</span><br><span class="line">btn1.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// window.scrollTo(0, 1000);</span></span><br><span class="line">    <span class="comment">// window.scrollTo(&#123; top: 1000 &#125;);</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(&#123;</span><br><span class="line">        <span class="attr">top</span>: <span class="number">1000</span>,</span><br><span class="line">        <span class="attr">behavior</span>: <span class="string">&quot;smooth&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">btn2.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(&#123;</span><br><span class="line">        <span class="attr">top</span>: <span class="number">0</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="浏览器滚动到的位置案例"><a href="#浏览器滚动到的位置案例" class="headerlink" title="浏览器滚动到的位置案例"></a>浏览器滚动到的位置案例</h5><blockquote><p>需求 ：</p></blockquote><ol><li>滚动条高度&gt;&#x3D;350，<strong>头部</strong>和<strong>回到底部</strong>出现（监听滚动条高度：window.onscroll）</li><li>点击回到顶部，页面向上滚动到0（window.scrollTo({})）<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#header</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transition</span>: all <span class="number">0.5s</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: -<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#toTop</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">5px</span> double <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: linen;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">bottom</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">right</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;header&quot;</span>&gt;</span>网页头部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    ul&gt;li&#123;$&#125;*100</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;toTop&quot;</span>&gt;</span>回到顶部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">onscroll</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> scroll = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (scroll &gt;= <span class="number">350</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            toTop.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;block&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            header.<span class="property">style</span>.<span class="property">top</span> = <span class="string">&quot;0px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            toTop.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;none&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            header.<span class="property">style</span>.<span class="property">top</span> = <span class="string">&quot;-100px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        toTop.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(&#123; <span class="attr">top</span>: <span class="number">0</span>, <span class="attr">behavior</span>: <span class="string">&quot;smooth&quot;</span> &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><strong>效果图</strong>：</li></ol><p><img src="/../_resources/%E6%BB%9A%E5%8A%A8%E5%88%B0.gif" class="lazyload placeholder" data-srcset="/../_resources/%E6%BB%9A%E5%8A%A8%E5%88%B0.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/滚动到.gif"></p><h4 id="8-浏览器的地址栏"><a href="#8-浏览器的地址栏" class="headerlink" title="(8) 浏览器的地址栏"></a>(8) 浏览器的地址栏</h4><p><strong>浏览器地址栏的组成</strong>：</p><ol><li>协议：两台电脑要通讯，必须添加协议(http&#x2F;https&#x2F;ftp&#x2F;file等)，浏览器自动补全协议。</li><li>域名：电脑的唯一标识是ip地址，由于ip地址不方便记忆的，所以产生了域名(用户或者公司都可以通过第三方机构购买注册)。</li><li>端口：服务器就是一台昂贵的电脑，电脑只有一个ip地址，如果想存放多套程序，需要分配不同的端口找不同的程序。<blockquote><p>http:默认端口是80</p></blockquote></li></ol><p>https:默认端口是443<br>4. 路径：找到文件的地址，用&#x2F;进行分割<br>5. 数据：地址栏可以携带数据，数据通过?拼接在地址栏后面，如果多条数据，使用&amp;符号进行连接。<br>6. 哈希值：地址栏后面可以携带哈希值(#拼接在地址栏后面)，进行单页面跳转。<br><strong>注意</strong>：地址栏中文会自定义编码，不影响浏览器，地址一般忽略大小写。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//baike.baidu.com/item/%E6%AF%9B%E6%B3%BD%E4%B8%9C/113835?fr=kg_general#4</span></span><br></pre></td></tr></table></figure><p><strong>操作地址栏</strong>(location对象)：<br>7. <strong>href 属性</strong></p><blockquote><p>读写地址栏的内容</p></blockquote><p><strong>读</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>);</span><br></pre></td></tr></table></figure><p><strong>写</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&#x27;地址&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;button id=<span class="string">&quot;btn1&quot;</span>&gt;跳转&lt;/button&gt;</span><br><span class="line">&lt;!-- 分割线 --&gt;</span><br><span class="line">btn1.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&#x27;https://www.baidu.com&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>相当于a标签的作用<br>8. <strong>search 属性</strong><br>获取地址栏上面的数据，包括问号。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>);</span><br></pre></td></tr></table></figure><ol start="9"><li><strong>hash 属性</strong><blockquote><p>获取地址栏上面的hash值，包括#。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">hash</span>);</span><br></pre></td></tr></table></figure></li><li><strong>reload(true)方法</strong><blockquote><p>刷新页面,如果参数为true,通过缓存刷新。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.<span class="title function_">reload</span>(); <span class="comment">//刷新页面，重新加载</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;button id=<span class="string">&quot;btn2&quot;</span>&gt;刷新页面&lt;/button&gt;</span><br><span class="line">&lt;!-- 分割线 --&gt;</span><br><span class="line">btn2.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="title function_">reload</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="三-DOM-的概念、获取DOM元素和操作元素属性"><a href="#三-DOM-的概念、获取DOM元素和操作元素属性" class="headerlink" title="三. DOM 的概念、获取DOM元素和操作元素属性"></a>三. DOM 的概念、获取DOM元素和操作元素属性</h2><h3 id="一-概念-1"><a href="#一-概念-1" class="headerlink" title="(一) 概念"></a>(一) 概念</h3><p>DOM(Document Object Model)文档对象模型，是W3C组织推荐的处理可扩展标记语言的标准$\color{red}{编程接口}$，通过DOM可以来任意来修改网页中各个内容。<br><strong>(1) 文档（document）</strong><br>文档指的是网页，一个网页就是一个文档。DOM中使用document表示<br><strong>(2) 元素（element）</strong><br>页面中的所有标签都是元素，DOM中使用element表示<br><strong>(3) 对象（Object）</strong></p><blockquote><p>对象指将网页中的每一个节点都转换为对象； 转换完对象以后，就可以以一种纯面向对象的形式来操作网页了。</p></blockquote><p><strong>(4) 模型（Model）</strong><br>模型用来表示节点和节点之间的关系，方便操作页面。<br><strong>(5) 节点（Node）</strong><br>节点是构成网页的最基本的单元，网页中的每一个部分都可以称为是一个节点（标签、属性、文本、注释等）。虽然都是节点，但是节点的类型却是不同的。<br><strong>常用的节点</strong></p><blockquote><p>文档节点 （Document），代表整个网页 元素节点（Element），代表网页中的标签 属性节点（Attribute），代表标签中的属性 文本节点（Text），代表网页中的文本内容</p></blockquote><h3 id="二-DOM-操作"><a href="#二-DOM-操作" class="headerlink" title="(二) DOM 操作"></a>(二) DOM 操作</h3><h4 id="1-获取DOM元素的方式"><a href="#1-获取DOM元素的方式" class="headerlink" title="(1) 获取DOM元素的方式"></a>(1) 获取DOM元素的方式</h4><p>在网页中浏览器已经为我们提供了document对象；它代表的是整个网页，它是window对象的属性，可以在页面中直接使用。</p><h5 id="1-document-获取元素方法"><a href="#1-document-获取元素方法" class="headerlink" title="1. document 获取元素方法"></a>1. document 获取元素方法</h5><ul><li>根据<strong>元素的id属性</strong>获取页面元素<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;id属性值&quot;</span>);</span><br><span class="line"><span class="comment">// 返回的是一个元素对象</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box1&quot;</span>&gt;</span>第一块内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分隔符 --&gt;</span></span><br><span class="line">console.log(box1); <span class="comment">&lt;!-- &lt;div id=&quot;box1&quot;&gt;第一块内容&lt;/div&gt; --&gt;</span></span><br></pre></td></tr></table></figure></li><li>根据<strong>标签名</strong>来获取页面元素<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;标签名&quot;</span>);</span><br><span class="line"><span class="comment">// 返回的是带有指定标签的对象的集合【以伪数组形式存储】</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>第二块内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>第三块内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分隔符 --&gt;</span></span><br><span class="line">console.log(document.getElementsByTagName(&#x27;div&#x27;)); <span class="comment">&lt;!-- &lt;div class=&quot;box2&quot;&gt;第二块内容&lt;/div&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 可以通过类似数组中，利用下标的方式获取对应的元素 --&gt;</span></span><br><span class="line">console.log(document.getElementsByTagName(&#x27;div&#x27;)[1]); <span class="comment">&lt;!-- &lt;div class=&quot;box2&quot;&gt;第三块内容&lt;/div&gt; --&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="2-通过-HTML5-新增的方法获取"><a href="#2-通过-HTML5-新增的方法获取" class="headerlink" title="2. 通过 HTML5 新增的方法获取"></a>2. 通过 HTML5 新增的方法获取</h5><ul><li>根据<strong>类名</strong>获取某些元素的集合<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;类名&quot;</span>);</span><br><span class="line"><span class="comment">// 根据类名返回元素对象集合</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>第二块内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>第三块内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分隔符 --&gt;</span></span><br><span class="line">console.log(document.getElementsByClassName(&#x27;box2&#x27;)[0]); <span class="comment">&lt;!-- &lt;div class=&quot;box2&quot;&gt;第二块内容&lt;/div&gt; --&gt;</span></span><br></pre></td></tr></table></figure></li><li>根据<strong>指定选择器</strong>返回第一个元素对象<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;选择器&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>第二块内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>第三块内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分隔符 --&gt;</span></span><br><span class="line">var a = document.querySelector(&#x27;.box2&#x27;);</span><br><span class="line">console.log(a); <span class="comment">&lt;!-- &lt;div class=&quot;box2&quot;&gt;第二块内容&lt;/div&gt; --&gt;</span></span><br></pre></td></tr></table></figure><strong>注意事项</strong>：里面的选择器需要加符号（class：<code>.</code>，id：<code>#</code>）</li><li>根据<strong>指定选择器</strong>返回所有元素对象<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;选择器&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1111111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2222222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2222222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2222222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分隔符 --&gt;</span></span><br><span class="line">var list = document.querySelectorAll(&#x27;.box li&#x27;);</span><br><span class="line">console.log(list[0]); <span class="comment">&lt;!-- &lt;li&gt;1111111&lt;/li&gt; --&gt;</span></span><br><span class="line">console.log(list[1]); <span class="comment">&lt;!-- &lt;li&gt;2222222&lt;/li&gt; --&gt;</span></span><br></pre></td></tr></table></figure><strong>console.dir</strong> ：返回元素的对象，更好的查看里面的属性和方法。<br><strong>注</strong>：日常获取DOM元素的时候一般使用<code>querySelector</code>和<code>querySelectorAll</code>来获取元素。</li></ul><h5 id="案例：登录界面密码显示与隐藏"><a href="#案例：登录界面密码显示与隐藏" class="headerlink" title="案例：登录界面密码显示与隐藏"></a>案例：登录界面密码显示与隐藏</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.box</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">360px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.box</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">top</span>: <span class="number">2px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">right</span>: <span class="number">2px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/close.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;eye&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pwd&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> eye = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;eye&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> pwd = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;pwd&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> flag = <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">            eye.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    pwd.<span class="property">type</span> = <span class="string">&#x27;text&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    eye.<span class="property">src</span> = <span class="string">&#x27;images/open.png&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    flag = <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    pwd.<span class="property">type</span> = <span class="string">&#x27;password&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    eye.<span class="property">src</span> = <span class="string">&#x27;images/close.png&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    flag = <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图：</strong></p><ul><li>显示：<br>  <img src="https://imagesfx.oss-cn-shanghai.aliyuncs.com/img/JavaScript/%E5%AF%86%E7%A0%81%E6%98%BE%E7%A4%BA.jpg?x-oss-process=style/imagesfx" class="lazyload placeholder" data-srcset="https://imagesfx.oss-cn-shanghai.aliyuncs.com/img/JavaScript/%E5%AF%86%E7%A0%81%E6%98%BE%E7%A4%BA.jpg?x-oss-process=style/imagesfx" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="https://imagesfx.oss-cn-shanghai.aliyuncs.com/img/JavaScript/%E5%AF%86%E7%A0%81%E6%98%BE%E7%A4%BA.jpg?x-oss-process=style/imagesfx"></li><li>隐藏：<br>  <img src="https://imagesfx.oss-cn-shanghai.aliyuncs.com/img/JavaScript/%E5%AF%86%E7%A0%81%E9%9A%90%E8%97%8F.jpg?x-oss-process=style/imagesfx" class="lazyload placeholder" data-srcset="https://imagesfx.oss-cn-shanghai.aliyuncs.com/img/JavaScript/%E5%AF%86%E7%A0%81%E9%9A%90%E8%97%8F.jpg?x-oss-process=style/imagesfx" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="https://imagesfx.oss-cn-shanghai.aliyuncs.com/img/JavaScript/%E5%AF%86%E7%A0%81%E9%9A%90%E8%97%8F.jpg?x-oss-process=style/imagesfx"><br>图片获取：[<a href="https://www.iconfont.cn/search/index?searchType=icon&q=%E7%9C%BC%E7%9D%9B&page=1&fromCollection=-1&fills=&tag=">iconfont-阿里巴巴矢量图标库</a>]</li></ul><h4 id="2-读写元素内部的结构内容"><a href="#2-读写元素内部的结构内容" class="headerlink" title="(2) 读写元素内部的结构内容"></a>(2) 读写元素内部的结构内容</h4><blockquote><p>利用DOM操作元素来改变里面的内容、属性等。</p></blockquote><h5 id="1-改变元素节点里的内容"><a href="#1-改变元素节点里的内容" class="headerlink" title="1. 改变元素节点里的内容"></a>1. 改变元素节点里的内容</h5><blockquote><p>读写元素节点里的内容，从节点起始位置到终止位置全部内容,包括内部的元素。</p></blockquote><p><code>element.innerHTML</code></p><blockquote><p>获取从起始位置到终止位置的全部内容，不包括外层标签，同时保留空格和换行，会解析html标签。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>111111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>222222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>333333<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>444444<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分隔符 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    console.log(box1.innerHTML); </span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    /*</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>111111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>222222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>333333<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>444444<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    */</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>element.outerHTML</code></p><blockquote><p>获取从起始位置到终止位置的全部内容，包括外层element自身标签，会解析html标签。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    你好</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>123<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分隔符 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;p&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="property">outerHTML</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">&lt;p&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        你好</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        &lt;span&gt;123&lt;/span&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    &lt;/p&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    */</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>element.innerHTML</code>和<code>element.outerHTML</code>的区别：</p><ul><li><code>element.innerHTML</code>：包含开始标签</li><li><code>element.outerHTML</code>：不包含开始标签<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    你好</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>123<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分隔符 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;p&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="property">innerHTML</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        你好</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        &lt;span&gt;123&lt;/span&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;p&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="property">outerHTML</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">&lt;p&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        你好</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        &lt;span&gt;123&lt;/span&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    &lt;/p&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    */</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="2-改变元素节点的文本内容"><a href="#2-改变元素节点的文本内容" class="headerlink" title="2. 改变元素节点的文本内容"></a>2. 改变元素节点的文本内容</h5><blockquote><p>读写某个元素节点的文本内容。</p></blockquote><p><code>element.innerText</code></p><blockquote><p>获取从起始位置到终止位置的文本内容，它会去除html标签，同时空格和换行也会去掉。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    你好</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>123<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分隔符 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;p&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="property">innerText</span>);<span class="comment">// 你好 123</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>innerHTML和innerText比较</strong><br><strong>相同点</strong></p><ul><li>这两个属性并没有在DOM标准定义，但是大部分浏览器都支持这两个属性。</li><li>两个属性作用类似，都可以获取到标签内部的内容。<br><strong>不同点</strong></li><li>innerHTML会获取到html标签，而innerText会自动去除标签。</li><li>如果使用这两个属性来设置标签内部的内容时，没有任何区别的。</li></ul><h5 id="3-操作表单元素中的value"><a href="#3-操作表单元素中的value" class="headerlink" title="3. 操作表单元素中的value"></a>3. 操作表单元素中的value</h5><p><strong>获取</strong>：元素.value<br><strong>设置</strong>：元素.value &#x3D; ‘值’</p><h4 id="3-DOM-操作元素的属性"><a href="#3-DOM-操作元素的属性" class="headerlink" title="(3) DOM 操作元素的属性"></a>(3) DOM 操作元素的属性</h4><h5 id="属性的概述"><a href="#属性的概述" class="headerlink" title="属性的概述"></a>属性的概述</h5><p><strong>(1) 属性的格式</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">元素名</span> <span class="attr">属性</span> = <span class="string">&#x27;属性值&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">元素名</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><strong>(2) 属性的分类</strong>：</p><ol><li><p><strong>原生属性</strong>：w3c 标准内存在的属性。</p><blockquote><p>eg: class id style border target href src</p></blockquote></li><li><p><strong>自定义属性</strong>：没有特殊意义，有我们人为设置的属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">aaa</span> = <span class="string">&#x27;zs&#x27;</span> <span class="attr">bbb</span> = <span class="string">&#x27;ls&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>H5 自定义属性</strong>：H5之后官方提供的以 data-开头的属性</p><blockquote><p>data-border、data-href等等。</p></blockquote></li></ol><h5 id="对应操作每种属性方式"><a href="#对应操作每种属性方式" class="headerlink" title="对应操作每种属性方式"></a>对应操作每种属性方式</h5><ol start="4"><li><strong>操作原生属性</strong><blockquote><p>直接使用属性名操作就可以</p></blockquote></li></ol><ul><li><strong>读</strong>：<br>  <strong>语法</strong>：  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.属性名 <span class="comment">// 或 元素[&quot;属性名&quot;]</span></span><br></pre></td></tr></table></figure>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> /&gt;</span><br><span class="line">&lt;!-- 分隔符 --&gt;</span><br><span class="line"><span class="keyword">var</span> ipt = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line"><span class="comment">// 利用点符号操作</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ipt.<span class="property">type</span>); <span class="comment">// text</span></span><br><span class="line"><span class="comment">// 或 利用中括号操作</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ipt[<span class="string">&quot;type&quot;</span>]); <span class="comment">// text</span></span><br></pre></td></tr></table></figure></li><li><strong>写</strong>：<br>  <strong>语法</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.属性名 = <span class="string">&quot;值&quot;</span> <span class="comment">// 或 元素[&quot;属性名&quot;] = &quot;值&quot;  </span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> /&gt;</span><br><span class="line">&lt;!-- 分隔符 --&gt;</span><br><span class="line"><span class="keyword">var</span> ipt = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line">ipt.<span class="property">type</span> = <span class="string">&quot;checkbox&quot;</span>;</span><br></pre></td></tr></table></figure></li></ul><ol start="5"><li><strong>利用系统提供的方法操作默认和自定义的属性</strong></li></ol><ul><li>getAttribute() <strong>获取</strong>特定元素节点属性的值,包括自定义属性和原生属性<br>  <strong>语法</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="title function_">getAttribute</span>(<span class="string">&quot;属性名&quot;</span>) </span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> bbb=<span class="string">&quot;12&quot;</span> /&gt;</span><br><span class="line">&lt;!-- 分隔符 --&gt;</span><br><span class="line"><span class="keyword">var</span> ipt = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ipt.<span class="title function_">getAttribute</span>(<span class="string">&#x27;type&#x27;</span>)); <span class="comment">// text</span></span><br></pre></td></tr></table></figure></li><li>setAttribute() <strong>设置</strong>特定元素节点属性的值,包括自定义属性和原生属性<br>  <strong>语法</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="title function_">setAttribute</span>(<span class="string">&quot;属性名&quot;</span>,值)   </span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> bbb=<span class="string">&quot;12&quot;</span> /&gt;</span><br><span class="line">&lt;!-- 分隔符 --&gt;</span><br><span class="line"><span class="keyword">var</span> ipt = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ipt.<span class="title function_">setAttribute</span>(<span class="string">&#x27;aaa&#x27;</span>, <span class="string">&#x27;111&#x27;</span>)); <span class="comment">// &lt;input type=&quot;text&quot; bbb=&quot;12&quot; aaa=&quot;111&quot; /&gt;</span></span><br></pre></td></tr></table></figure></li><li>removeAttribute() <strong>移除</strong>特定元素节点属性,包括自定义属性和原生属性<br>  <strong>语法</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="title function_">removeAttribute</span>(<span class="string">&quot;属性名&quot;</span>)  </span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> bbb=<span class="string">&quot;12&quot;</span> /&gt;</span><br><span class="line">&lt;!-- 分隔符 --&gt;</span><br><span class="line"><span class="keyword">var</span> ipt = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ipt.<span class="title function_">removeAttribute</span>(<span class="string">&#x27;bbb&#x27;</span>)); <span class="comment">// &lt;input type=&quot;text&quot; /&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ol start="6"><li><strong>操作h5自定义属性</strong><blockquote><p>利用<strong>dataset属性</strong>操作h5自定义属性</p></blockquote></li></ol><p>3.1 <strong>增</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="property">dataset</span>[<span class="string">&quot;属性名&quot;</span>] = 值;</span><br><span class="line"><span class="comment">// 或</span></span><br><span class="line">元素.<span class="property">dataset</span>.属性名 = 值;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> bbb=<span class="string">&quot;12&quot;</span> data-a=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">&lt;!-- 分隔符 --&gt;</span><br><span class="line"><span class="keyword">var</span> ipt = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line"><span class="comment">// 增加h5自定义属性</span></span><br><span class="line">ipt.<span class="property">dataset</span>[<span class="string">&quot;b&quot;</span>] = <span class="number">2000</span>; <span class="comment">// &lt;input type=&quot;text&quot; bbb=&quot;12&quot; data-a=&quot;200&quot; data-b=&quot;2000&quot;/&gt;</span></span><br></pre></td></tr></table></figure><p>3.2 <strong>删</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> 元素.<span class="property">dataset</span>[<span class="string">&quot;属性名&quot;</span>]</span><br><span class="line"><span class="comment">// 或</span></span><br><span class="line"><span class="keyword">delete</span> 元素.<span class="property">dataset</span>.属性名</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> bbb=<span class="string">&quot;12&quot;</span> data-a=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">&lt;!-- 分隔符 --&gt;</span><br><span class="line"><span class="keyword">var</span> ipt = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line"><span class="comment">// 删除h5自定义属性</span></span><br><span class="line"><span class="keyword">delete</span> ipt.<span class="property">dataset</span>.<span class="property">a</span>;</span><br></pre></td></tr></table></figure><p>3.3 <strong>改</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="property">dataset</span>[<span class="string">&quot;属性名&quot;</span>] = 值</span><br><span class="line"><span class="comment">// 或</span></span><br><span class="line">元素.<span class="property">dataset</span>.属性名 = 值</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> bbb=<span class="string">&quot;12&quot;</span> data-a=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">&lt;!-- 分隔符 --&gt;</span><br><span class="line"><span class="keyword">var</span> ipt = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line"><span class="comment">// 删除h5自定义属性</span></span><br><span class="line">ipt.<span class="property">dataset</span>.<span class="property">a</span> = <span class="number">255</span>; <span class="comment">// &lt;input type=&quot;text&quot; bbb=&quot;12&quot; data-a=&quot;255&quot;/&gt;</span></span><br></pre></td></tr></table></figure><p>3.4 <strong>查</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="property">dataset</span>[<span class="string">&quot;属性名&quot;</span>]</span><br><span class="line"><span class="comment">// 或</span></span><br><span class="line">元素.<span class="property">dataset</span>.属性名</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> bbb=<span class="string">&quot;12&quot;</span> data-a=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">&lt;!-- 分隔符 --&gt;</span><br><span class="line"><span class="keyword">var</span> ipt = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line"><span class="comment">// 查看h5自定义属性</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ipt.<span class="property">dataset</span>.<span class="property">a</span>); <span class="comment">// 200</span></span><br></pre></td></tr></table></figure><h3 id="三-案例：全选"><a href="#三-案例：全选" class="headerlink" title="(三) 案例：全选"></a>(三) 案例：全选</h3><h4 id="1-方式一：利用计数器"><a href="#1-方式一：利用计数器" class="headerlink" title="(1) 方式一：利用计数器"></a>(1) 方式一：利用计数器</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>请选择你的兴趣爱好：<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;all&quot;</span> /&gt;</span>全选 <span class="tag">&lt;<span class="name">br</span> /&gt;</span> ----------- <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span>看书<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span>踢足球<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span>打篮球<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span>打游戏<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span>看电视<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span>跑步<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取全选框</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> all = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#all&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取复选框所有元素</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> ipt = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;input:not(#all)&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 全选框点击事件</span></span></span><br><span class="line"><span class="language-javascript">    all.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        ipt.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 点击全选按钮的状态赋给所有的复选框</span></span></span><br><span class="line"><span class="language-javascript">            item.<span class="property">checked</span> = all.<span class="property">checked</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 复选框点击事件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 定义一个计数器</span></span></span><br><span class="line"><span class="language-javascript">    ipt.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">element</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        element.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> count = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">            ipt.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">itm</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 判断每个复选框是否是选中状态</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (itm.<span class="property">checked</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    count++;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">            all.<span class="property">checked</span> = count === ipt.<span class="property">length</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-方式二：利用数组的every-方法"><a href="#2-方式二：利用数组的every-方法" class="headerlink" title="(2) 方式二：利用数组的every()方法"></a>(2) 方式二：利用数组的every()方法</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取全选框</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> all = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#all&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取复选框所有元素，并转换为真数组</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> ipt = [...<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;input:not(#all)&quot;</span>)];</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(ipt);</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 全选框点击事件</span></span></span><br><span class="line"><span class="language-javascript">    all.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        ipt.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 点击全选按钮的状态赋给所有的复选框</span></span></span><br><span class="line"><span class="language-javascript">            item.<span class="property">checked</span> = all.<span class="property">checked</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 复选框点击事件</span></span></span><br><span class="line"><span class="language-javascript">    ipt.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">itm</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        itm.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 判断是不是所有的复选框都处于选中</span></span></span><br><span class="line"><span class="language-javascript">            all.<span class="property">checked</span> = ipt.<span class="title function_">every</span>(<span class="keyword">function</span>(<span class="params">checkbox</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> checkbox.<span class="property">checked</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-效果图"><a href="#3-效果图" class="headerlink" title="(3) 效果图"></a>(3) 效果图</h4><p><img src="/../_resources/%E5%85%A8%E9%80%89.gif" class="lazyload placeholder" data-srcset="/../_resources/%E5%85%A8%E9%80%89.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/全选.gif"></p><h2 id="四-DOM-操作元素样式和类名"><a href="#四-DOM-操作元素样式和类名" class="headerlink" title="四. DOM 操作元素样式和类名"></a>四. DOM 操作元素样式和类名</h2><h3 id="一-操作元素样式"><a href="#一-操作元素样式" class="headerlink" title="(一) 操作元素样式"></a>(一) 操作元素样式</h3><h4 id="1-操作行内元素"><a href="#1-操作行内元素" class="headerlink" title="(1) 操作行内元素"></a>(1) 操作行内元素</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px; height: 100px; border: 1px solid red;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="1-获取元素的样式"><a href="#1-获取元素的样式" class="headerlink" title="1. 获取元素的样式"></a>1. 获取元素的样式</h5><p><strong>语法</strong>：元素.style.样式名<br><strong>返回值</strong>：对应元素样式的属性值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">style</span>.<span class="property">height</span>); <span class="comment">// 100px</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">style</span>.<span class="property">border</span>); <span class="comment">// 1px solid red</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">style</span>[<span class="string">&quot;width&quot;</span>]); <span class="comment">// 100px</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：当样式名中带有连字符，必须使用<strong>数组关联语法或驼峰命名</strong></p><h5 id="2-设置元素的样式"><a href="#2-设置元素的样式" class="headerlink" title="2. 设置元素的样式"></a>2. 设置元素的样式</h5><p><strong>语法</strong>：元素.style.样式名 &#x3D; 值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">box.<span class="property">style</span>.<span class="property">textAlign</span> = <span class="string">&#x27;center&#x27;</span>;</span><br><span class="line">box.<span class="property">style</span>[<span class="string">&quot;background-color&quot;</span>] = <span class="string">&#x27;blue&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：只能给行内样式设置样式</p><h4 id="2-操作非行内元素"><a href="#2-操作非行内元素" class="headerlink" title="(2) 操作非行内元素"></a>(2) 操作非行内元素</h4><h5 id="获取元素的样式"><a href="#获取元素的样式" class="headerlink" title="获取元素的样式"></a>获取元素的样式</h5><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(元素).样式名</span><br></pre></td></tr></table></figure><p><strong>返回值</strong>：对应元素样式的属性值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">opacity</span>: <span class="number">0.5</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px; height: 100px; border: 1px solid red;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getComputedStyle</span>(box)[<span class="string">&quot;background-color&quot;</span>]); <span class="comment">// rgb(255, 0, 0)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getComputedStyle</span>(box).<span class="property">opacity</span>); <span class="comment">// 0.5</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以操作行内元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(box).<span class="property">height</span>); <span class="comment">// 100px</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(box)[<span class="string">&quot;font-size&quot;</span>]); <span class="comment">// 16px</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(box)[<span class="string">&quot;color&quot;</span>]); <span class="comment">// rgb(0, 0, 0)</span></span><br></pre></td></tr></table></figure><p><strong>注</strong>：不能设置非行内元素的样式。</p><h3 id="二-操作元素类名"><a href="#二-操作元素类名" class="headerlink" title="(二) 操作元素类名"></a>(二) 操作元素类名</h3><h4 id="1-className"><a href="#1-className" class="headerlink" title="(1) className"></a>(1) className</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>操作类名<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="1-获取元素的类名"><a href="#1-获取元素的类名" class="headerlink" title="1. 获取元素的类名"></a>1. 获取元素的类名</h5><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="property">className</span></span><br></pre></td></tr></table></figure><p><strong>返回值：</strong> 返回该元素的完整类名</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">className</span>); <span class="comment">// box</span></span><br></pre></td></tr></table></figure><h5 id="2-设置元素的类名"><a href="#2-设置元素的类名" class="headerlink" title="2. 设置元素的类名"></a>2. 设置元素的类名</h5><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="property">className</span> = <span class="string">&#x27;类名&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：这样写会将原来的类名完全替换</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">div.<span class="property">className</span> = <span class="string">&quot;div1&quot;</span>; <span class="comment">// &lt;div class=&quot;div1&quot;&gt;操作类名&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-追加元素的类名"><a href="#3-追加元素的类名" class="headerlink" title="3. 追加元素的类名"></a>3. 追加元素的类名</h5><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="property">className</span> += <span class="string">&#x27; 类名&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>注</strong>：此方法不会覆盖元素原来的类名，而是在其后面追加类名。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">div.<span class="property">className</span> += <span class="string">&quot; div2&quot;</span>; <span class="comment">// &lt;div class=&quot;box div2&quot;&gt;操作类名&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-classList"><a href="#2-classList" class="headerlink" title="(2) classList"></a>(2) classList</h4><p>每一个元素天生自带一个属性classList, 放置了所有类名</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.change</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">5px</span> solid red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>操作类名<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="1-获取元素的类名-1"><a href="#1-获取元素的类名-1" class="headerlink" title="1. 获取元素的类名"></a>1. 获取元素的类名</h5><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="property">classList</span></span><br></pre></td></tr></table></figure><p><strong>返回值</strong>：返回该元素的完整类名</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">classList</span>); <span class="comment">// box</span></span><br></pre></td></tr></table></figure><h5 id="2-追加元素类名"><a href="#2-追加元素类名" class="headerlink" title="2. 追加元素类名"></a>2. 追加元素类名</h5><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;类名&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">div.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;tom&quot;</span>); <span class="comment">// &lt;div class=&quot;box tom&quot;&gt;操作类名&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-删除元素类名"><a href="#3-删除元素类名" class="headerlink" title="3. 删除元素类名"></a>3. 删除元素类名</h5><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;类名&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">div.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;box&quot;</span>); <span class="comment">// &lt;div class=&quot;tom&quot;&gt;操作类名&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-切换元素类名"><a href="#3-切换元素类名" class="headerlink" title="3. 切换元素类名"></a>3. 切换元素类名</h5><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&quot;类名&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">div.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    div.<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&quot;change&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><p><img src="/../_resources/%E7%B1%BB%E5%90%8D%E5%88%87%E6%8D%A2.gif" class="lazyload placeholder" data-srcset="/../_resources/%E7%B1%BB%E5%90%8D%E5%88%87%E6%8D%A2.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/类名切换.gif"></p><h3 id="三-案例"><a href="#三-案例" class="headerlink" title="(三) 案例"></a>(三) 案例</h3><h4 id="案例1：选项卡"><a href="#案例1：选项卡" class="headerlink" title="案例1：选项卡"></a>案例1：选项卡</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">504px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">50px</span> auto <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ol</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">504px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ol</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.click</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.show</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.border0</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;border0&quot;</span>&gt;</span>Tab1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;border0&quot;</span>&gt;</span>Tab2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Tab3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>Tab1的内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>Tab2的内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>Tab3的内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> list = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;ul li&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> list2 = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;ol li&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        list.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item, index</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            item.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 先删除所有的无序列表项的名为click的类</span></span></span><br><span class="line"><span class="language-javascript">                list.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">tab</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    tab.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;click&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 给当前点击项添加click类</span></span></span><br><span class="line"><span class="language-javascript">                item.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;click&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                list2.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">element</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    element.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;show&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">                list2[index].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;show&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><p><img src="/../_resources/%E9%80%89%E9%A1%B9%E5%8D%A1.gif" class="lazyload placeholder" data-srcset="/../_resources/%E9%80%89%E9%A1%B9%E5%8D%A1.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/选项卡.gif"></p><h4 id="案例2：验证码倒计时"><a href="#案例2：验证码倒计时" class="headerlink" title="案例2：验证码倒计时"></a>案例2：验证码倒计时</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点击获取验证码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 使用：间隔定时器、标记思维</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 获取按钮</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.btn&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> flag = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 防止重复点击</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (flag === <span class="literal">true</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            flag = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 定义一个计数器</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> count = <span class="number">6</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 使用间隔定时器</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> t = <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 每隔一秒递减1</span></span></span><br><span class="line"><span class="language-javascript">                count--;</span></span><br><span class="line"><span class="language-javascript">                btn.<span class="property">innerHTML</span> = <span class="string">`<span class="subst">$&#123;count&#125;</span>s后重新获取`</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 到0s时关闭定时器</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (count &lt;= <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="built_in">clearInterval</span>(t);</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 重新显示点击验证码</span></span></span><br><span class="line"><span class="language-javascript">                    btn.<span class="property">innerHTML</span> = <span class="string">&quot;点击获取验证码&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                    flag = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><p><img src="/../_resources/%E9%AA%8C%E8%AF%81%E7%A0%81%E5%80%92%E8%AE%A1%E6%97%B6.gif" class="lazyload placeholder" data-srcset="/../_resources/%E9%AA%8C%E8%AF%81%E7%A0%81%E5%80%92%E8%AE%A1%E6%97%B6.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/验证码倒计时.gif"></p><h4 id="案例3：分页器"><a href="#案例3：分页器" class="headerlink" title="案例3：分页器"></a>案例3：分页器</h4><p><strong>效果图</strong>：</p><p><img src="/../_resources/%E5%88%86%E9%A1%B5%E5%99%A8.gif" class="lazyload placeholder" data-srcset="/../_resources/%E5%88%86%E9%A1%B5%E5%99%A8.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/分页器.gif"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.header</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.footer</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.footer</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-wrap</span>: wrap;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">290px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span>&gt;<span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">278px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pagination</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">10px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pagination</span>&gt;<span class="selector-class">.prev</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pagination</span>&gt;<span class="selector-class">.next</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pagination</span>&gt;<span class="selector-class">.disable</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: not-allowed;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pagination</span>&gt;<span class="selector-class">.total</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pagination</span>&gt;select &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">22px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-left</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span>网页头部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pagination&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;total&quot;</span>&gt;</span>1 / 100<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;8&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;12&quot;</span>&gt;</span>12<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;16&quot;</span>&gt;</span>16<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 内容 需要渲染 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span>网页底部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./dm_list.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取所需的元素</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;ul&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> prev = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.prev&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> tal = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.total&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> select = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;select&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> next = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.next&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 定义所需的变量</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> current = <span class="number">1</span>; <span class="comment">// 当前页码，默认为1</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> pageSize = <span class="number">4</span>; <span class="comment">// 每页的数据条数，默认为4</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> total = list.<span class="property">length</span> / pageSize; <span class="comment">// 总的页码数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 展示页面的函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">dataRander</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 上一页按钮状态</span></span></span><br><span class="line"><span class="language-javascript">        prev.<span class="property">classList</span> = current === <span class="number">1</span> ? <span class="string">&#x27;prev disable&#x27;</span> : <span class="string">&#x27;prev&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 下一页按钮状态</span></span></span><br><span class="line"><span class="language-javascript">        next.<span class="property">classList</span> = current === total ? <span class="string">&#x27;next disable&#x27;</span> : <span class="string">&#x27;next&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        tal.<span class="property">innerText</span> = <span class="string">`<span class="subst">$&#123;current&#125;</span>/<span class="subst">$&#123;total&#125;</span>`</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 渲染数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> arr = list.<span class="title function_">slice</span>((current - <span class="number">1</span>) * pageSize, current * pageSize);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> str = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        arr.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            str += <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;li&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;img</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        src = <span class="subst">$&#123;item.pic&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        alt=&quot;&quot;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    /&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;p&gt;<span class="subst">$&#123;item.name&#125;</span>&lt;/p&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;p&gt;城市: <span class="subst">$&#123;item.city&#125;</span>&lt;/p&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;p&gt;地址: <span class="subst">$&#123;item.address&#125;</span>&lt;/p&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;p&gt;价格: <span class="subst">$&#123;item.price&#125;</span>&lt;/p&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;p&gt;时间: <span class="subst">$&#123;item.showTime&#125;</span>&lt;/p&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;/li&gt;`</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        ul.<span class="property">innerHTML</span> = str;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">dataRander</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 点击上一页触发事件</span></span></span><br><span class="line"><span class="language-javascript">    prev.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (current === <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        current--;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">dataRander</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 点击上一页触发事件</span></span></span><br><span class="line"><span class="language-javascript">    next.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (current === total) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        current++;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">dataRander</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 切换每页数据条数触发事件</span></span></span><br><span class="line"><span class="language-javascript">    select.<span class="property">onchange</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 获取每页条数</span></span></span><br><span class="line"><span class="language-javascript">        pageSize = select.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 回到第一页</span></span></span><br><span class="line"><span class="language-javascript">        current = <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 重新计算总数</span></span></span><br><span class="line"><span class="language-javascript">        total = total = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(list.<span class="property">length</span> / pageSize);</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">dataRander</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>外链的<code>dm_list.js</code>文件代码</strong>：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br></pre></td><td class="code"><pre><span class="line">var list = <span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">625153951363</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;2020西太湖国际音乐节&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.09.19-09.20&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;199-399&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;常州&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;常州西太湖中国花卉博览景区北门&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i3/2251059038/O1CN01zJEpaN2GdSG1Xvo8y_!!2251059038.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">624506842658</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;2020舟山东海音乐节&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.09.04-09.06&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;200-680&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;舟山&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;舟山市朱家尖南沙景区沙滩&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i4/2251059038/O1CN01L70FVl2GdSG2wpwyE_!!0-item_pic.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">623216520608</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;中国•磐安 2020氧气山水音乐节&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.08.22 周六 16:30&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;280&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;金华&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;金华磐安花溪风景区&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i3/2251059038/O1CN01ECp69h2GdSFpoUPAm_!!2251059038.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">624345993344</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;2020“一生中最爱”七夕演唱会&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.08.25 周二 19:30&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;180-580&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;北京&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;糖果TANGO-雍和宫店三层&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i3/2251059038/O1CN01WGNYBE2GdSFqXJgII_!!0-item_pic.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">624170605605</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;东海五渔节之敢潮音乐节&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.08.22 周六 18:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;198-228&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;舟山&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;舟山嵊泗五龙乡听海广场(原黄沙村船厂)&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i1/2251059038/O1CN01eV5pR32GdSFxJUb0v_!!2251059038.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">624000957041</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;【聚光灯】周四周日爆笑脱口秀剧场&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.08.13-09.27&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;99&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;上海&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;健力士醇黑坊&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i3/2251059038/O1CN01s9Jlz32GdSFv79hIO_!!0-item_pic.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">623838540974</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;2020真世界摇滚演出&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.08.29 周六 20:30&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;120&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;北京&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;糖果TANGO-雍和宫店三层&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i2/2251059038/O1CN01HWbQXk2GdSFxARpRD_!!0-item_pic.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">624699066028</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;开心麻花首部悬疑惊悚喜剧《醉后赢家》&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.08.25-09.06&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;80-1080&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;北京&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;地质礼堂剧场&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i2/2251059038/O1CN01Vv1mQO2GdSFvnmIDs_!!2251059038.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">625219995330</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;开心麻花经典爆笑舞台剧《乌龙山伯爵》&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.08.25-08.30&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;80-1080&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;北京&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;北京展览馆剧场&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i3/2251059038/O1CN01znXuKj2GdSG6ACMMb_!!0-item_pic.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">623454281510</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;开心麻花重磅新戏《贼想得到你》&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.08.12 周三&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;80-1280&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;上海&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;上汽上海文化广场&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i1/2251059038/O1CN013YAyeY2GdSFnXwgnQ_!!0-item_pic.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">625314963280</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;开心麻花重磅新戏《贼想得到你》&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.08.15-08.21&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;100-1180&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;上海&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;虹桥艺术中心&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i3/2251059038/O1CN01Qb8wyX2GdSG30DCl4_!!0-item_pic.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">622815888793</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;开心麻花上海首部原创爆笑舞台剧《皇帝的新娘》&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.08.12-08.16&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;80-1180&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;上海&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;上戏实验剧院&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i2/2251059038/O1CN01uie4Gf2GdSFlp1Rvv_!!0-item_pic.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">624443634831</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;孟京辉戏剧作品《我爱xxx》&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.08.13-08.16&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;100-380&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;北京&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;蜂巢剧场&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i3/2251059038/O1CN01LwdJRL2GdSFtDPtRL_!!2251059038.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">624095704875</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;【8月8日-16日场次周年特惠低至四折】太阳马戏X绮幻之境 - 8月&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.08.12-08.30&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;360-3460&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;杭州&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;杭州新天地太阳剧场&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i3/2251059038/O1CN01iyWOwU2GdSG2iMBsM_!!0-item_pic.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">624163106935</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;高达5公里定向挑战赛&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.09.26 周六&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;108-388&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;上海&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;世纪公园&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i3/2251059038/O1CN01y2n1PI2GdSFtLmEtu_!!2251059038.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">622064265074</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;2020 FORMULA1 中国大奖赛（礼包&amp;福袋）&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.07.04-12.31&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;120-270&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;上海&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;上汽国际赛车场(上海国际赛车场)&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i2/2251059038/O1CN01ZHrnGM2GdSFbZjdUV_!!2251059038.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">623662985515</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;2020ChinaJoy电竞赛事荟萃&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.07.31-10.30&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;北京&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;请到大麦APP和优酷APP观看&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i4/2251059038/O1CN01RpgBQ82GdSFoMD7h8_!!0-item_pic.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">618307700815</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;2020 FORMULA1 中国大奖赛（服装）&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.05.19-12.31&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;248-620&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;上海&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;上汽国际赛车场(上海国际赛车场)&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i2/2251059038/O1CN01scI6Ly2GdSFEYDh7P_!!0-item_pic.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">613334933912</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;2020 FORMULA1 中国大奖赛（周边衍生品）&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.03.11-12.31&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;35-160&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;上海&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;上汽国际赛车场(上海国际赛车场)&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i3/2251059038/O1CN01ZusbUY2GdSENL0iIN_!!2251059038.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">613323173822</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;2020 FORMULA1 中国大奖赛（帽品）&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.03.11-12.31&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;200-335&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;上海&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;上汽国际赛车场(上海国际赛车场)&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i3/2251059038/O1CN01azreXu2GdSF9rIkGV_!!2251059038.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">613940057617</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;加速北京跳伞俱乐部高空跳伞体验&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.08.05-08.31&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;2980&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;北京&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;北京市平谷区马坊镇通航产业基地&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i1/2251059038/O1CN01Ns9MZj2GdSFIp2udB_!!2251059038.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">624453755826</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;《你是演奏家2 · 超级金贝鼓》&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.08.21-08.23&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;180-380&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;上海&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;美琪大戏院&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i4/2251059038/O1CN016u70M62GdSFrTL5GP_!!0-item_pic.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">624211844323</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;正版授权·大型儿童实景舞台剧《奥特曼宇宙之光》&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.09.05 周六&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;180-580&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;海口&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;海南省歌舞剧院&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i2/2251059038/O1CN01ybwkiZ2GdSFy9894v_!!2251059038.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">624672730925</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;全国正版授权大型互动式儿童舞台剧 海底小纵队2—火山大冒险&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.11.15 周日&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;80-480&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;上海&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;黄浦剧场-中剧场&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i1/2251059038/O1CN01mfDv5t2GdSFwbhzvt_!!0-item_pic.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">624868314578</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;大船文化·加拿大原版音乐启蒙全场互动亲子剧《你是演奏家2·超级金贝鼓》&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.09.06 周日&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;180-380&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;天津&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;津湾大剧院大剧场&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i4/2251059038/O1CN01l16ZUE2GdSFzGWSPx_!!2251059038.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">624450522367</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;大船文化·法国艺术启蒙魔术剧《美术馆奇妙夜·星夜》中文版&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.09.06 周日&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;120-280&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;南京&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;江苏大剧院--综艺厅&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i3/2251059038/O1CN01FMizHi2GdSG0AINxP_!!2-item_pic.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">623125350409</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;大船文化 法国艺术启蒙魔术剧《美术馆奇妙夜·星夜》中文版&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.08.27-08.30&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;80-480&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;上海&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;上汽上海文化广场&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i4/2251059038/O1CN01CiAVft2GdSFpIawAw_!!2251059038.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    id<span class="punctuation">:</span> <span class="number">623975390263</span><span class="punctuation">,</span></span><br><span class="line">    name<span class="punctuation">:</span> <span class="string">&quot;正版授权大型实景舞台剧《奥特曼：宇宙之光》（杭州站）&quot;</span><span class="punctuation">,</span></span><br><span class="line">    showTime<span class="punctuation">:</span> <span class="string">&quot;2020.12.13 周日&quot;</span><span class="punctuation">,</span></span><br><span class="line">    price<span class="punctuation">:</span> <span class="string">&quot;68-480&quot;</span><span class="punctuation">,</span></span><br><span class="line">    city<span class="punctuation">:</span> <span class="string">&quot;杭州&quot;</span><span class="punctuation">,</span></span><br><span class="line">    address<span class="punctuation">:</span> <span class="string">&quot;杭州剧院&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pic<span class="punctuation">:</span> <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i4/2251059038/O1CN01fUBSCY2GdSFsbnPPh_!!2251059038.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">]</span>;</span><br></pre></td></tr></table></figure><h2 id="五-DOM-操作元素样式和类名"><a href="#五-DOM-操作元素样式和类名" class="headerlink" title="五. DOM 操作元素样式和类名"></a>五. DOM 操作元素样式和类名</h2><h3 id="一-操作元素样式-1"><a href="#一-操作元素样式-1" class="headerlink" title="(一) 操作元素样式"></a>(一) 操作元素样式</h3><h4 id="1-操作行内元素-1"><a href="#1-操作行内元素-1" class="headerlink" title="(1) 操作行内元素"></a>(1) 操作行内元素</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px; height: 100px; border: 1px solid red;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="1-获取元素的样式-1"><a href="#1-获取元素的样式-1" class="headerlink" title="1. 获取元素的样式"></a>1. 获取元素的样式</h5><p><strong>语法</strong>：元素.style.样式名<br><strong>返回值</strong>：对应元素样式的属性值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);  </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">style</span>.<span class="property">height</span>); <span class="comment">// 100px  </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">style</span>.<span class="property">border</span>); <span class="comment">// 1px solid red  </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">style</span>[<span class="string">&quot;width&quot;</span>]); <span class="comment">// 100px</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：当样式名中带有连字符，必须使用<strong>数组关联语法或驼峰命名</strong></p><h5 id="2-设置元素的样式-1"><a href="#2-设置元素的样式-1" class="headerlink" title="2. 设置元素的样式"></a>2. 设置元素的样式</h5><p><strong>语法</strong>：元素.style.样式名 &#x3D; 值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">box.<span class="property">style</span>.<span class="property">textAlign</span> = <span class="string">&#x27;center&#x27;</span>;  </span><br><span class="line">box.<span class="property">style</span>[<span class="string">&quot;background-color&quot;</span>] = <span class="string">&#x27;blue&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：只能给行内样式设置样式</p><h4 id="2-操作非行内元素-1"><a href="#2-操作非行内元素-1" class="headerlink" title="(2) 操作非行内元素"></a>(2) 操作非行内元素</h4><h5 id="获取元素的样式-1"><a href="#获取元素的样式-1" class="headerlink" title="获取元素的样式"></a>获取元素的样式</h5><p><strong>语法</strong>：<br>window.getComputedStyle(元素).样式名<br><strong>返回值</strong>：对应元素样式的属性值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css">  </span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span> &#123;  </span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: red;  </span></span><br><span class="line"><span class="language-css">        <span class="attribute">opacity</span>: <span class="number">0.5</span>;  </span></span><br><span class="line"><span class="language-css">    &#125;  </span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px; height: 100px; border: 1px solid red;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);  </span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getComputedStyle</span>(box)[<span class="string">&quot;background-color&quot;</span>]); <span class="comment">// rgb(255, 0, 0)  </span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getComputedStyle</span>(box).<span class="property">opacity</span>); <span class="comment">// 0.5  </span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以操作行内元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);  </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(box).<span class="property">height</span>); <span class="comment">// 100px  </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(box)[<span class="string">&quot;font-size&quot;</span>]); <span class="comment">// 16px  </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(box)[<span class="string">&quot;color&quot;</span>]); <span class="comment">// rgb(0, 0, 0)</span></span><br></pre></td></tr></table></figure><p><strong>注</strong>：不能设置非行内元素的样式。</p><h3 id="二-操作元素类名-1"><a href="#二-操作元素类名-1" class="headerlink" title="(二) 操作元素类名"></a>(二) 操作元素类名</h3><h4 id="1-className-1"><a href="#1-className-1" class="headerlink" title="(1) className"></a>(1) className</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>操作类名<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="1-获取元素的类名-2"><a href="#1-获取元素的类名-2" class="headerlink" title="1. 获取元素的类名"></a>1. 获取元素的类名</h5><p><strong>语法</strong>：<br>元素.className<br><strong>返回值：</strong> 返回该元素的完整类名</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);  </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">className</span>); <span class="comment">// box</span></span><br></pre></td></tr></table></figure><h5 id="2-设置元素的类名-1"><a href="#2-设置元素的类名-1" class="headerlink" title="2. 设置元素的类名"></a>2. 设置元素的类名</h5><p><strong>语法</strong>：<br>元素.className &#x3D; ‘类名’<br><strong>注意</strong>：这样写会将原来的类名完全替换</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);  </span><br><span class="line">div.<span class="property">className</span> = <span class="string">&quot;div1&quot;</span>; <span class="comment">// &lt;div class=&quot;div1&quot;&gt;操作类名&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-追加元素的类名-1"><a href="#3-追加元素的类名-1" class="headerlink" title="3. 追加元素的类名"></a>3. 追加元素的类名</h5><p><strong>语法</strong>：<br>元素.className +&#x3D; ‘ 类名’<br><strong>注</strong>：此方法不会覆盖元素原来的类名，而是在其后面追加类名。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);  </span><br><span class="line">div.<span class="property">className</span> += <span class="string">&quot; div2&quot;</span>; <span class="comment">// &lt;div class=&quot;box div2&quot;&gt;操作类名&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-classList-1"><a href="#2-classList-1" class="headerlink" title="(2) classList"></a>(2) classList</h4><p>每一个元素天生自带一个属性classList, 放置了所有类名</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css">  </span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span> &#123;  </span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;  </span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;  </span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;  </span></span><br><span class="line"><span class="language-css">    &#125;  </span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.change</span> &#123;  </span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">40px</span>;  </span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;  </span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">200px</span>;  </span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">5px</span> solid red;  </span></span><br><span class="line"><span class="language-css">    &#125;  </span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>操作类名<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="1-获取元素的类名-3"><a href="#1-获取元素的类名-3" class="headerlink" title="1. 获取元素的类名"></a>1. 获取元素的类名</h5><p><strong>语法</strong>：<br>元素.classList<br><strong>返回值</strong>：返回该元素的完整类名</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);  </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">classList</span>); <span class="comment">// box</span></span><br></pre></td></tr></table></figure><h5 id="2-追加元素类名-1"><a href="#2-追加元素类名-1" class="headerlink" title="2. 追加元素类名"></a>2. 追加元素类名</h5><p><strong>语法</strong>：<br>元素.classList.add(“类名”)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);  </span><br><span class="line">div.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;tom&quot;</span>); <span class="comment">// &lt;div class=&quot;box tom&quot;&gt;操作类名&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-删除元素类名-1"><a href="#3-删除元素类名-1" class="headerlink" title="3. 删除元素类名"></a>3. 删除元素类名</h5><p><strong>语法</strong>：<br>元素.classList.remove(“类名”)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);  </span><br><span class="line">div.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;box&quot;</span>); <span class="comment">// &lt;div class=&quot;tom&quot;&gt;操作类名&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-切换元素类名-1"><a href="#3-切换元素类名-1" class="headerlink" title="3. 切换元素类名"></a>3. 切换元素类名</h5><p><strong>语法</strong>：<br>元素.classList.toggle(“类名”);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);  </span><br><span class="line">div.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;  </span><br><span class="line">    div.<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&quot;change&quot;</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><h3 id="三-案例-1"><a href="#三-案例-1" class="headerlink" title="(三) 案例"></a>(三) 案例</h3><h4 id="案例1：选项卡-1"><a href="#案例1：选项卡-1" class="headerlink" title="案例1：选项卡"></a>案例1：选项卡</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css">  </span></span><br><span class="line"><span class="language-css">        * &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">504px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">50px</span> auto <span class="number">0</span>;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex</span>: <span class="number">1</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">100px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">40px</span>;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ol</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">504px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ol</span> <span class="selector-tag">li</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">400px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top</span>: <span class="number">0</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: none;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">25px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.click</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">0</span>;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.show</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.border0</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-right</span>: <span class="number">0</span>;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;border0&quot;</span>&gt;</span>Tab1<span class="tag">&lt;/<span class="name">li</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;border0&quot;</span>&gt;</span>Tab2<span class="tag">&lt;/<span class="name">li</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Tab3<span class="tag">&lt;/<span class="name">li</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>Tab1的内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>Tab2的内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>Tab3的内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> list = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;ul li&quot;</span>);  </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> list2 = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;ol li&quot;</span>);  </span></span><br><span class="line"><span class="language-javascript">        list.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item, index</span>) &#123;  </span></span><br><span class="line"><span class="language-javascript">            item.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;  </span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 先删除所有的无序列表项的名为click的类  </span></span></span><br><span class="line"><span class="language-javascript">                list.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">tab</span>) &#123;  </span></span><br><span class="line"><span class="language-javascript">                    tab.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;click&quot;</span>);  </span></span><br><span class="line"><span class="language-javascript">                &#125;);  </span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 给当前点击项添加click类  </span></span></span><br><span class="line"><span class="language-javascript">                item.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;click&quot;</span>);  </span></span><br><span class="line"><span class="language-javascript">                list2.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">element</span>) &#123;  </span></span><br><span class="line"><span class="language-javascript">                    element.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;show&quot;</span>);  </span></span><br><span class="line"><span class="language-javascript">                &#125;);  </span></span><br><span class="line"><span class="language-javascript">                list2[index].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;show&quot;</span>);  </span></span><br><span class="line"><span class="language-javascript">            &#125;  </span></span><br><span class="line"><span class="language-javascript">        &#125;);  </span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><h4 id="案例2：验证码倒计时-1"><a href="#案例2：验证码倒计时-1" class="headerlink" title="案例2：验证码倒计时"></a>案例2：验证码倒计时</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点击获取验证码<span class="tag">&lt;/<span class="name">button</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 使用：间隔定时器、标记思维  </span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 获取按钮  </span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.btn&quot;</span>);  </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> flag = <span class="literal">false</span>;  </span></span><br><span class="line"><span class="language-javascript">        btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;  </span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 防止重复点击  </span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (flag === <span class="literal">true</span>) &#123;  </span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span>;  </span></span><br><span class="line"><span class="language-javascript">            &#125;  </span></span><br><span class="line"><span class="language-javascript">            flag = <span class="literal">true</span>;  </span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 定义一个计数器  </span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> count = <span class="number">6</span>;  </span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 使用间隔定时器  </span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> t = <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;  </span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 每隔一秒递减1  </span></span></span><br><span class="line"><span class="language-javascript">                count--;  </span></span><br><span class="line"><span class="language-javascript">                btn.<span class="property">innerHTML</span> = <span class="string">`<span class="subst">$&#123;count&#125;</span>s后重新获取`</span>;  </span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 到0s时关闭定时器  </span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (count &lt;= <span class="number">0</span>) &#123;  </span></span><br><span class="line"><span class="language-javascript">                    <span class="built_in">clearInterval</span>(t);  </span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 重新显示点击验证码  </span></span></span><br><span class="line"><span class="language-javascript">                    btn.<span class="property">innerHTML</span> = <span class="string">&quot;点击获取验证码&quot;</span>;  </span></span><br><span class="line"><span class="language-javascript">                    flag = <span class="literal">false</span>;  </span></span><br><span class="line"><span class="language-javascript">                &#125;  </span></span><br><span class="line"><span class="language-javascript">            &#125;, <span class="number">1000</span>);  </span></span><br><span class="line"><span class="language-javascript">        &#125;  </span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><h4 id="案例3：分页器-1"><a href="#案例3：分页器-1" class="headerlink" title="案例3：分页器"></a>案例3：分页器</h4><p><strong>效果图</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css">  </span></span><br><span class="line"><span class="language-css">        * &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">          </span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.header</span>,  </span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.footer</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1200px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: center;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">120px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">          </span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.footer</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">          </span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span>,  </span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">          </span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1200px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-wrap</span>: wrap;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: space-between;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-top</span>: <span class="number">10px</span>;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">          </span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">290px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#333</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">5px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">          </span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span>&gt;<span class="selector-tag">img</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">278px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">          </span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pagination</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1200px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">10px</span> auto;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">          </span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pagination</span>&gt;<span class="selector-class">.prev</span>,  </span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pagination</span>&gt;<span class="selector-class">.next</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">50px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">30px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">24px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: center;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">          </span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pagination</span>&gt;<span class="selector-class">.disable</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: not-allowed;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">          </span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pagination</span>&gt;<span class="selector-class">.total</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">700</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">20px</span>;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">          </span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pagination</span>&gt;select &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">22px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-left</span>: <span class="number">20px</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">30px</span>;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span>网页头部<span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pagination&quot;</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;total&quot;</span>&gt;</span>1 / 100<span class="tag">&lt;/<span class="name">span</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;8&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">option</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;12&quot;</span>&gt;</span>12<span class="tag">&lt;/<span class="name">option</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;16&quot;</span>&gt;</span>16<span class="tag">&lt;/<span class="name">option</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- 内容 需要渲染 --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span>网页底部<span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./dm_list.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取所需的元素  </span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;ul&quot;</span>);  </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> prev = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.prev&quot;</span>);  </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> tal = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.total&quot;</span>);  </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> select = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;select&quot;</span>);  </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> next = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.next&quot;</span>);  </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 定义所需的变量  </span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> current = <span class="number">1</span>; <span class="comment">// 当前页码，默认为1  </span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> pageSize = <span class="number">4</span>; <span class="comment">// 每页的数据条数，默认为4  </span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> total = list.<span class="property">length</span> / pageSize; <span class="comment">// 总的页码数  </span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 展示页面的函数  </span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">dataRander</span>(<span class="params"></span>) &#123;  </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 上一页按钮状态  </span></span></span><br><span class="line"><span class="language-javascript">        prev.<span class="property">classList</span> = current === <span class="number">1</span> ? <span class="string">&#x27;prev disable&#x27;</span> : <span class="string">&#x27;prev&#x27;</span>;  </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 下一页按钮状态  </span></span></span><br><span class="line"><span class="language-javascript">        next.<span class="property">classList</span> = current === total ? <span class="string">&#x27;next disable&#x27;</span> : <span class="string">&#x27;next&#x27;</span>;  </span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">        tal.<span class="property">innerText</span> = <span class="string">`<span class="subst">$&#123;current&#125;</span>/<span class="subst">$&#123;total&#125;</span>`</span>;  </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 渲染数据  </span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> arr = list.<span class="title function_">slice</span>((current - <span class="number">1</span>) * pageSize, current * pageSize);  </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> str = <span class="string">&quot;&quot;</span>;  </span></span><br><span class="line"><span class="language-javascript">        arr.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item</span>) &#123;  </span></span><br><span class="line"><span class="language-javascript">            str += <span class="string">`  </span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;li&gt;  </span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;img  </span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        src = <span class="subst">$&#123;item.pic&#125;</span>  </span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        alt=&quot;&quot;  </span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    /&gt;  </span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;p&gt;<span class="subst">$&#123;item.name&#125;</span>&lt;/p&gt;  </span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;p&gt;城市: <span class="subst">$&#123;item.city&#125;</span>&lt;/p&gt;  </span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;p&gt;地址: <span class="subst">$&#123;item.address&#125;</span>&lt;/p&gt;  </span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;p&gt;价格: <span class="subst">$&#123;item.price&#125;</span>&lt;/p&gt;  </span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;p&gt;时间: <span class="subst">$&#123;item.showTime&#125;</span>&lt;/p&gt;  </span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;/li&gt;`</span>;  </span></span><br><span class="line"><span class="language-javascript">        &#125;);  </span></span><br><span class="line"><span class="language-javascript">        ul.<span class="property">innerHTML</span> = str;  </span></span><br><span class="line"><span class="language-javascript">    &#125;  </span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">dataRander</span>();  </span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 点击上一页触发事件  </span></span></span><br><span class="line"><span class="language-javascript">    prev.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;  </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (current === <span class="number">1</span>) &#123;  </span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span>;  </span></span><br><span class="line"><span class="language-javascript">        &#125;  </span></span><br><span class="line"><span class="language-javascript">        current--;  </span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">dataRander</span>();  </span></span><br><span class="line"><span class="language-javascript">    &#125;  </span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 点击上一页触发事件  </span></span></span><br><span class="line"><span class="language-javascript">    next.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;  </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (current === total) &#123;  </span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span>;  </span></span><br><span class="line"><span class="language-javascript">        &#125;  </span></span><br><span class="line"><span class="language-javascript">        current++;  </span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">dataRander</span>();  </span></span><br><span class="line"><span class="language-javascript">    &#125;  </span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 切换每页数据条数触发事件  </span></span></span><br><span class="line"><span class="language-javascript">    select.<span class="property">onchange</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;  </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 获取每页条数  </span></span></span><br><span class="line"><span class="language-javascript">        pageSize = select.<span class="property">value</span>;  </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 回到第一页  </span></span></span><br><span class="line"><span class="language-javascript">        current = <span class="number">1</span>;  </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 重新计算总数  </span></span></span><br><span class="line"><span class="language-javascript">        total = total = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(list.<span class="property">length</span> / pageSize);  </span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">dataRander</span>();  </span></span><br><span class="line"><span class="language-javascript">    &#125;  </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>外链的<code>dm_list.js</code>文件代码</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> list = [  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">625153951363</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;2020西太湖国际音乐节&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.09.19-09.20&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;199-399&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;常州&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;常州西太湖中国花卉博览景区北门&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i3/2251059038/O1CN01zJEpaN2GdSG1Xvo8y_!!2251059038.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">624506842658</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;2020舟山东海音乐节&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.09.04-09.06&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;200-680&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;舟山&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;舟山市朱家尖南沙景区沙滩&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i4/2251059038/O1CN01L70FVl2GdSG2wpwyE_!!0-item_pic.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">623216520608</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;中国•磐安 2020氧气山水音乐节&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.08.22 周六 16:30&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;280&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;金华&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;金华磐安花溪风景区&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i3/2251059038/O1CN01ECp69h2GdSFpoUPAm_!!2251059038.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">624345993344</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;2020“一生中最爱”七夕演唱会&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.08.25 周二 19:30&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;180-580&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;北京&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;糖果TANGO-雍和宫店三层&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i3/2251059038/O1CN01WGNYBE2GdSFqXJgII_!!0-item_pic.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">624170605605</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;东海五渔节之敢潮音乐节&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.08.22 周六 18:00&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;198-228&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;舟山&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;舟山嵊泗五龙乡听海广场(原黄沙村船厂)&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i1/2251059038/O1CN01eV5pR32GdSFxJUb0v_!!2251059038.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">624000957041</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;【聚光灯】周四周日爆笑脱口秀剧场&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.08.13-09.27&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;99&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;上海&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;健力士醇黑坊&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i3/2251059038/O1CN01s9Jlz32GdSFv79hIO_!!0-item_pic.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">623838540974</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;2020真世界摇滚演出&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.08.29 周六 20:30&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;120&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;北京&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;糖果TANGO-雍和宫店三层&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i2/2251059038/O1CN01HWbQXk2GdSFxARpRD_!!0-item_pic.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">624699066028</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;开心麻花首部悬疑惊悚喜剧《醉后赢家》&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.08.25-09.06&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;80-1080&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;北京&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;地质礼堂剧场&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i2/2251059038/O1CN01Vv1mQO2GdSFvnmIDs_!!2251059038.png&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">625219995330</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;开心麻花经典爆笑舞台剧《乌龙山伯爵》&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.08.25-08.30&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;80-1080&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;北京&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;北京展览馆剧场&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i3/2251059038/O1CN01znXuKj2GdSG6ACMMb_!!0-item_pic.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">623454281510</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;开心麻花重磅新戏《贼想得到你》&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.08.12 周三&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;80-1280&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;上海&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;上汽上海文化广场&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i1/2251059038/O1CN013YAyeY2GdSFnXwgnQ_!!0-item_pic.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">625314963280</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;开心麻花重磅新戏《贼想得到你》&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.08.15-08.21&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;100-1180&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;上海&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;虹桥艺术中心&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i3/2251059038/O1CN01Qb8wyX2GdSG30DCl4_!!0-item_pic.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">622815888793</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;开心麻花上海首部原创爆笑舞台剧《皇帝的新娘》&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.08.12-08.16&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;80-1180&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;上海&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;上戏实验剧院&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i2/2251059038/O1CN01uie4Gf2GdSFlp1Rvv_!!0-item_pic.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">624443634831</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;孟京辉戏剧作品《我爱xxx》&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.08.13-08.16&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;100-380&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;北京&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;蜂巢剧场&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i3/2251059038/O1CN01LwdJRL2GdSFtDPtRL_!!2251059038.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">624095704875</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;【8月8日-16日场次周年特惠低至四折】太阳马戏X绮幻之境 - 8月&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.08.12-08.30&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;360-3460&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;杭州&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;杭州新天地太阳剧场&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i3/2251059038/O1CN01iyWOwU2GdSG2iMBsM_!!0-item_pic.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">624163106935</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;高达5公里定向挑战赛&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.09.26 周六&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;108-388&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;上海&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;世纪公园&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i3/2251059038/O1CN01y2n1PI2GdSFtLmEtu_!!2251059038.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">622064265074</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;2020 FORMULA1 中国大奖赛（礼包&amp;福袋）&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.07.04-12.31&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;120-270&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;上海&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;上汽国际赛车场(上海国际赛车场)&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i2/2251059038/O1CN01ZHrnGM2GdSFbZjdUV_!!2251059038.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">623662985515</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;2020ChinaJoy电竞赛事荟萃&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.07.31-10.30&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;0&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;北京&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;请到大麦APP和优酷APP观看&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i4/2251059038/O1CN01RpgBQ82GdSFoMD7h8_!!0-item_pic.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">618307700815</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;2020 FORMULA1 中国大奖赛（服装）&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.05.19-12.31&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;248-620&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;上海&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;上汽国际赛车场(上海国际赛车场)&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i2/2251059038/O1CN01scI6Ly2GdSFEYDh7P_!!0-item_pic.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">613334933912</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;2020 FORMULA1 中国大奖赛（周边衍生品）&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.03.11-12.31&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;35-160&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;上海&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;上汽国际赛车场(上海国际赛车场)&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i3/2251059038/O1CN01ZusbUY2GdSENL0iIN_!!2251059038.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">613323173822</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;2020 FORMULA1 中国大奖赛（帽品）&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.03.11-12.31&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;200-335&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;上海&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;上汽国际赛车场(上海国际赛车场)&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i3/2251059038/O1CN01azreXu2GdSF9rIkGV_!!2251059038.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">613940057617</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;加速北京跳伞俱乐部高空跳伞体验&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.08.05-08.31&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;2980&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;北京&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;北京市平谷区马坊镇通航产业基地&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i1/2251059038/O1CN01Ns9MZj2GdSFIp2udB_!!2251059038.png&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">624453755826</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;《你是演奏家2 · 超级金贝鼓》&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.08.21-08.23&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;180-380&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;上海&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;美琪大戏院&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i4/2251059038/O1CN016u70M62GdSFrTL5GP_!!0-item_pic.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">624211844323</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;正版授权·大型儿童实景舞台剧《奥特曼宇宙之光》&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.09.05 周六&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;180-580&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;海口&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;海南省歌舞剧院&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i2/2251059038/O1CN01ybwkiZ2GdSFy9894v_!!2251059038.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">624672730925</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;全国正版授权大型互动式儿童舞台剧 海底小纵队2—火山大冒险&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.11.15 周日&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;80-480&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;上海&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;黄浦剧场-中剧场&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i1/2251059038/O1CN01mfDv5t2GdSFwbhzvt_!!0-item_pic.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">624868314578</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;大船文化·加拿大原版音乐启蒙全场互动亲子剧《你是演奏家2·超级金贝鼓》&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.09.06 周日&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;180-380&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;天津&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;津湾大剧院大剧场&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i4/2251059038/O1CN01l16ZUE2GdSFzGWSPx_!!2251059038.png&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">624450522367</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;大船文化·法国艺术启蒙魔术剧《美术馆奇妙夜·星夜》中文版&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.09.06 周日&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;120-280&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;南京&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;江苏大剧院--综艺厅&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/i3/2251059038/O1CN01FMizHi2GdSG0AINxP_!!2-item_pic.png&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">623125350409</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;大船文化 法国艺术启蒙魔术剧《美术馆奇妙夜·星夜》中文版&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.08.27-08.30&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;80-480&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;上海&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;上汽上海文化广场&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i4/2251059038/O1CN01CiAVft2GdSFpIawAw_!!2251059038.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="attr">id</span>: <span class="number">623975390263</span>,  </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;正版授权大型实景舞台剧《奥特曼：宇宙之光》（杭州站）&quot;</span>,  </span><br><span class="line">    <span class="attr">showTime</span>: <span class="string">&quot;2020.12.13 周日&quot;</span>,  </span><br><span class="line">    <span class="attr">price</span>: <span class="string">&quot;68-480&quot;</span>,  </span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;杭州&quot;</span>,  </span><br><span class="line">    <span class="attr">address</span>: <span class="string">&quot;杭州剧院&quot;</span>,  </span><br><span class="line">    <span class="attr">pic</span>: <span class="string">&quot;https://img.alicdn.com/bao/uploaded/https://img.alicdn.com/imgextra/i4/2251059038/O1CN01fUBSCY2GdSFsbnPPh_!!2251059038.jpg&quot;</span>,  </span><br><span class="line">  &#125;,  </span><br><span class="line">];</span><br></pre></td></tr></table></figure><h2 id="六-DOM-获取元素的偏移量和可视窗口尺寸"><a href="#六-DOM-获取元素的偏移量和可视窗口尺寸" class="headerlink" title="六. DOM 获取元素的偏移量和可视窗口尺寸"></a>六. DOM 获取元素的偏移量和可视窗口尺寸</h2><h3 id="一-获取元素的偏移量"><a href="#一-获取元素的偏移量" class="headerlink" title="(一) 获取元素的偏移量"></a>(一) 获取元素的偏移量</h3><h4 id="1-offset"><a href="#1-offset" class="headerlink" title="(1) offset"></a>(1) offset</h4><h5 id="1-获取偏移量参考元素"><a href="#1-获取偏移量参考元素" class="headerlink" title="1. 获取偏移量参考元素"></a>1. 获取偏移量参考元素</h5><p><strong>语法</strong>：<code>元素.offsetParent</code><br><strong>返回值</strong>：返回该元素偏移量参考的元素。<br><strong>参照物的选取</strong>：</p><ul><li>如果该元素没有定位，参考body</li><li>如果该元素有定位，参考包含块</li></ul><h5 id="2-获取元素偏移量"><a href="#2-获取元素偏移量" class="headerlink" title="2. 获取元素偏移量"></a>2. 获取元素偏移量</h5><p><strong>语法</strong>：</p><ul><li><code>元素.offsetTop</code><blockquote><p>距离参照物顶部的偏移量</p></blockquote></li><li><code>元素.offsetLeft</code><blockquote><p>距离参照物左边的偏移量</p></blockquote></li></ul><p><strong>返回值</strong>：当前元素(外边框)距离其父级参照物的(内边框)偏移距离。</p><h4 id="2-client"><a href="#2-client" class="headerlink" title="(2) client"></a>(2) client</h4><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="property">clientLeft</span></span><br><span class="line">元素.<span class="property">clientTop</span></span><br></pre></td></tr></table></figure><p><strong>返回值</strong>：返回的是元素 (内容+padding) 与 border 左上角的间距（也就是自身元素的边框厚度）</p><h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><h6 id="实例1"><a href="#实例1" class="headerlink" title="实例1"></a>实例1</h6><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css部分 */</span></span><br><span class="line"><span class="selector-tag">h2</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid red; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML部分 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// js部分</span></span><br><span class="line"><span class="keyword">var</span> h2 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;h2&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(h2.<span class="property">clientTop</span>, h2.<span class="property">clientLeft</span>); <span class="comment">// 10 10 （border的宽高）</span></span><br></pre></td></tr></table></figure><h6 id="实例2"><a href="#实例2" class="headerlink" title="实例2"></a>实例2</h6><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css部分 */</span></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: cyan;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML部分 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// js部分</span></span><br><span class="line"><span class="keyword">var</span> span = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;span&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(span.<span class="property">offsetParent</span>); <span class="comment">// &lt;body&gt;...&lt;/body&gt;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(span.<span class="property">offsetTop</span>, span.<span class="property">offsetLeft</span>); <span class="comment">// 90 90（div的margin+p的margin+span的margin）</span></span><br></pre></td></tr></table></figure><h3 id="二-获取元素尺寸"><a href="#二-获取元素尺寸" class="headerlink" title="(二) 获取元素尺寸"></a>(二) 获取元素尺寸</h3><p>尺寸: 指的是该元素在页面中的占地面积</p><h4 id="1-offset-1"><a href="#1-offset-1" class="headerlink" title="(1) offset"></a>(1) offset</h4><p>语法：</p><ul><li>元素.offsetWidth </li><li>元素.offsetHeight<br><strong>返回值</strong>：得到<code>该元素</code>的<code>内容 + padding + border</code></li></ul><h4 id="2-client-1"><a href="#2-client-1" class="headerlink" title="(2) client"></a>(2) client</h4><p>语法：</p><ul><li>元素.clientWidth</li><li>元素.clientHeight<br><strong>返回值</strong>：得到<code>该元素</code>的<code>内容 + padding</code><br>offset和client获取的元素尺寸区别在于：</li><li>offset获取的元素尺寸包含边框border</li><li>client获取的元素尺寸不包含边框border<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">offsetHeight</span>, div.<span class="property">offsetWidth</span>); <span class="comment">// 139 139</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">clientHeight</span>, div.<span class="property">clientWidth</span>); <span class="comment">// 120 120 </span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="三-获取元素的可视窗口尺寸"><a href="#三-获取元素的可视窗口尺寸" class="headerlink" title="(三) 获取元素的可视窗口尺寸"></a>(三) 获取元素的可视窗口尺寸</h3><h4 id="1-BOM级别"><a href="#1-BOM级别" class="headerlink" title="(1) BOM级别"></a>(1) BOM级别</h4><ol><li><strong>获取浏览器的可视窗口宽度</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">innerWidth</span></span><br></pre></td></tr></table></figure></li><li><strong>获取浏览器的可视窗口高度</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">innerHeight</span> </span><br></pre></td></tr></table></figure><strong>注</strong>：浏览器可视窗口的尺寸，<strong>包含滚动条</strong>。</li></ol><h4 id="2-DOM级别"><a href="#2-DOM级别" class="headerlink" title="(2) DOM级别"></a>(2) DOM级别</h4><ol start="3"><li><strong>获取文档的可视窗口宽度</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span></span><br></pre></td></tr></table></figure></li><li><strong>获取文档的可视窗口高度</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span></span><br></pre></td></tr></table></figure><strong>注</strong>：文档可视窗口的尺寸，<strong>不包含滚动条</strong>。</li></ol><h4 id="3-BOM和DOM-获取元素的可视窗口尺寸区别"><a href="#3-BOM和DOM-获取元素的可视窗口尺寸区别" class="headerlink" title="(3) BOM和DOM 获取元素的可视窗口尺寸区别"></a>(3) BOM和DOM 获取元素的可视窗口尺寸区别</h4><p>当可视窗口没有滚动条时，BOM和DOM 获取元素的可视窗口尺寸相同<br>当可视窗口存在滚动条时，</p><ul><li>BOM：浏览器可视窗口的尺寸，<strong>包含滚动条</strong>。（尺寸 &#x3D; DOM获取的尺寸+滚动条尺寸）</li><li>DOM：文档可视窗口的尺寸，<strong>不包含滚动条</strong>。</li></ul><h2 id="七-获取和操作-DOM-节点"><a href="#七-获取和操作-DOM-节点" class="headerlink" title="七. 获取和操作 DOM 节点"></a>七. 获取和操作 DOM 节点</h2><h3 id="一-DOM节点分类"><a href="#一-DOM节点分类" class="headerlink" title="(一) DOM节点分类"></a>(一) DOM节点分类</h3><table><thead><tr><th>DOM 节点</th><th>描述</th></tr></thead><tbody><tr><td>元素节点</td><td>页面上的每一个标签</td></tr><tr><td>属性节点</td><td>书写在标签上的属性</td></tr><tr><td>文本节点</td><td>书写的文本内容(包含空格和回车)</td></tr><tr><td>注释节点</td><td>书写的注释(包含空格和回车)</td></tr><tr><td><strong>实例</strong>：</td><td></td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    hello</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 注释 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    world</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>问：div标签里面一共有多少个子节点，分别是什么？</p><ol><li>文本节点：<code>一个回车 + 4个空格 + hello + 一个回车+ 4个空格</code></li><li>元素节点：<code>&lt;p&gt;你好&lt;/p&gt;</code></li><li>文本节点：<code>一个回车 + 4个空格</code></li><li>注释节点：<code>&lt;!-- 注释 --&gt;</code></li><li>文本节点：<code>一个回车 + 4个空格</code></li><li>元素节点：<code>&lt;p&gt;p2&lt;/p&gt;</code></li><li>文本节点：<code>一个回车 + 4个空格 + world + 一个回车</code></li></ol><h3 id="二-获取节点"><a href="#二-获取节点" class="headerlink" title="(二) 获取节点"></a>(二) 获取节点</h3><h4 id="1-获取元素节点"><a href="#1-获取元素节点" class="headerlink" title="(1) 获取元素节点"></a>(1) 获取元素节点</h4><h5 id="1-非常规元素节点"><a href="#1-非常规元素节点" class="headerlink" title="1. 非常规元素节点"></a>1. 非常规元素节点</h5><ul><li>html：document.documentElement</li><li>body：document.body</li><li>head：document.head</li></ul><h5 id="2-常规元素节点"><a href="#2-常规元素节点" class="headerlink" title="2. 常规元素节点"></a>2. 常规元素节点</h5><ul><li>document.getElementById</li><li>document.getElementsByClassName</li><li>document.getElementsByTagName</li><li>document.querySelector</li><li>document.querySelectorAll</li></ul><h4 id="2-获取节点的方式"><a href="#2-获取节点的方式" class="headerlink" title="(2) 获取节点的方式"></a>(2) 获取节点的方式</h4><table><thead><tr><th>属性或方法</th><th>描述</th></tr></thead><tbody><tr><td>节点.childNodes</td><td>获取该节点所有的子节点</td></tr><tr><td>节点.children</td><td>获取该节点的所有子<strong>元素</strong>节点</td></tr><tr><td>节点.firstChild</td><td>获取该节点的第一个子节点</td></tr><tr><td>节点.firstElementChild</td><td>获取该节点的第一个子<strong>元素</strong>节点</td></tr><tr><td>节点.lastChild</td><td>获取该节点的最后一个子节点</td></tr><tr><td>节点.lastElementChild</td><td>获取该节点的最后一个子<strong>元素</strong>节点</td></tr><tr><td>节点.previousSibling</td><td>获取该节点的上一个兄弟节点</td></tr><tr><td>节点.previousElementSibling</td><td>获取该节点的上一个兄弟<strong>元素</strong>节点</td></tr><tr><td>节点.nextSibling</td><td>获取该节点的下一个兄弟节点</td></tr><tr><td>节点.nextElementSibling</td><td>获取该节点的下一个兄弟<strong>元素</strong>节点</td></tr><tr><td>节点.parentNode</td><td>获取该节点的父节点</td></tr><tr><td>节点.parentElement</td><td>获取该节点的父<strong>元素</strong>节点</td></tr><tr><td>节点.attributes</td><td>获取该元素的所有属性节点</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    ni</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 注释1 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 注释2 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    hao</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>实例</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line"><span class="comment">// 1. childNodes</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">childNodes</span>); <span class="comment">// [text, p, text, comment, text, comment, text, p, text]伪数组</span></span><br><span class="line"><span class="comment">// 2. children</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">children</span>); <span class="comment">// [p, p]</span></span><br><span class="line"><span class="comment">// 3. firstChild</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">firstChild</span>); <span class="comment">// &quot; ni &quot;</span></span><br><span class="line"><span class="comment">// 4. firstElementChild</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">firstElementChild</span>); <span class="comment">// &lt;p&gt;p2&lt;/p&gt;</span></span><br><span class="line"><span class="comment">// 5. lastChild</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">lastChild</span>); <span class="comment">// &quot; hao &quot;</span></span><br><span class="line"><span class="comment">// 6. lastElementChild</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">lastElementChild</span>); <span class="comment">// &lt;p&gt;p3&lt;/p&gt;</span></span><br><span class="line"><span class="comment">// 7. previousSibling</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">previousSibling</span>); <span class="comment">// #text</span></span><br><span class="line"><span class="comment">// 8. previousElementSibling</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">previousElementSibling</span>); <span class="comment">// &lt;p&gt;p1&lt;/p&gt;</span></span><br><span class="line"><span class="comment">// 9. nextSibling</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">nextSibling</span>); <span class="comment">// #text</span></span><br><span class="line"><span class="comment">// 10. nextElementSibling</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">nextElementSibling</span>); <span class="comment">// &lt;p&gt;p4&lt;/p&gt;</span></span><br><span class="line"><span class="comment">// 11. parentNode</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">parentNode</span>); <span class="comment">// &lt;body&gt;...&lt;/body&gt;</span></span><br><span class="line"><span class="comment">// 12. parentElement</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">parentElement</span>); <span class="comment">// &lt;body&gt;...&lt;/body&gt;</span></span><br><span class="line"><span class="comment">// 13. attributes</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">attributes</span>); <span class="comment">// NamedNodeMap&amp;nbsp;&#123;0: class, class: class, length: 1&#125;</span></span><br></pre></td></tr></table></figure><h3 id="三-操作节点"><a href="#三-操作节点" class="headerlink" title="(三) 操作节点"></a>(三) 操作节点</h3><h4 id="1-创建节点"><a href="#1-创建节点" class="headerlink" title="(1) 创建节点"></a>(1) 创建节点</h4><blockquote><p>只是创建不会显示到页面上，要显示到页面上得使用下面的插入节点。</p></blockquote><ol><li><strong>创建元素节点</strong><br> <strong>语法</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;标签名&#x27;</span>)</span><br></pre></td></tr></table></figure><strong>返回值</strong>：创建好的元素节点。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);    </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(div); <span class="comment">// &lt;div&gt;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure></li><li><strong>创建文本节点</strong><br> <strong>语法</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="string">&quot;文本内容&quot;</span>)</span><br></pre></td></tr></table></figure><strong>返回值</strong>：创建好的文本节点。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> text = <span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="string">&quot;好的&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(text); <span class="comment">// &quot;好的&quot;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="2-插入节点"><a href="#2-插入节点" class="headerlink" title="(2) 插入节点"></a>(2) 插入节点</h4><ol start="3"><li><strong>appendChild()</strong><br> <strong>语法</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">父节点.<span class="title function_">appendChild</span>(子节点)</span><br></pre></td></tr></table></figure><strong>作用</strong>：把子节点插入到父节点中，并且是在最后面的位置插入<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;!-- 分割线 --&gt;</span><br><span class="line"><span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.box&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">box.<span class="title function_">appendChild</span>(div);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    &lt;div class=&quot;box&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;span class=&quot;a&quot;&gt;1&lt;/span&gt;</span></span><br><span class="line"><span class="comment">        &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="comment">    &lt;/div&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li><li><strong>insertBefore()</strong><br> <strong>语法</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">父节点.<span class="title function_">insertBefore</span>(子节点, 谁的前面)</span><br></pre></td></tr></table></figure><strong>作用</strong>：把子节点插入到父节点中，并且放到指定一个节点的前面。<br><strong>注意</strong>：第二个参数必须写，但是第二个参数有没有可以忽略。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;!-- 分割线 --&gt;      </span><br><span class="line"><span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.box&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> span1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.a&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> span2 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">box.<span class="title function_">insertBefore</span>(span2, span1);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    &lt;div class=&quot;box&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;span&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="comment">        &lt;span class=&quot;a&quot;&gt;1&lt;/span&gt;</span></span><br><span class="line"><span class="comment">    &lt;/div&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="3-删除节点"><a href="#3-删除节点" class="headerlink" title="(3) 删除节点"></a>(3) 删除节点</h4><ol><li><strong>removeChild()</strong><br> <strong>语法</strong>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">父节点.<span class="title function_">removeChild</span>(子节点)</span><br></pre></td></tr></table></figure><strong>作用</strong>：将子节点从父节点中删除。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">&lt;!-- 分割线 --&gt;  </span><br><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.box&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> p1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;p:first-child&quot;</span>)</span><br><span class="line">div.<span class="title function_">removeChild</span>(p1); </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    &lt;div class=&quot;box&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;p&gt;2&lt;/p&gt;</span></span><br><span class="line"><span class="comment">        &lt;p&gt;3&lt;/p&gt;</span></span><br><span class="line"><span class="comment">    &lt;/div&gt;</span></span><br><span class="line"><span class="comment">*/</span> </span><br></pre></td></tr></table></figure></li><li><strong>remove()</strong><br> <strong>语法</strong>：节点.remove()<br> <strong>作用</strong>：将该节点删除<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;!-- 分割线 --&gt;  </span><br><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.box&quot;</span>);</span><br><span class="line">div.<span class="title function_">remove</span>(); <span class="comment">// &lt;h1&gt;标题&lt;/h1&gt;</span></span><br></pre></td></tr></table></figure><strong>注</strong>：若删除的节点中有子节点会一并删除。</li></ol><h4 id="4-替换节点"><a href="#4-替换节点" class="headerlink" title="(4) 替换节点"></a>(4) 替换节点</h4><blockquote><p>replaceChild()</p></blockquote><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">父节点.<span class="title function_">replaceChild</span>(换上节点, 换下节点)</span><br></pre></td></tr></table></figure><p><strong>作用</strong>：在父节点中，使用换上节点<strong>替换</strong>换下节点</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>点击替换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> h1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;h1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;button&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> h2 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;h2&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    h2.<span class="property">innerHTML</span> = <span class="string">&quot;好的&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 父节点.replaceChild(换上节点, 换下节点)</span></span></span><br><span class="line"><span class="language-javascript">        div.<span class="title function_">replaceChild</span>(h2, h1);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &lt;div&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                &lt;h2&gt;好的&lt;/h2&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &lt;/div&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        */</span></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-克隆节点"><a href="#5-克隆节点" class="headerlink" title="(5) 克隆节点"></a>(5) 克隆节点</h4><blockquote><p>cloneNode()</p></blockquote><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">节点.<span class="title function_">cloneNode</span>(参数)</span><br></pre></td></tr></table></figure><p><strong>参数</strong>：</p><ul><li>true 克隆后代节点</li><li>false 默认 不克隆后代节点<br><strong>作用</strong>：把该节点复制一份一模一样的<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 300px; height: 300px; background-color: pink&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px; height: 100px; background-color: yellow&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;background-color: green&quot;</span>&gt;</span>spanspan<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>复制<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;button&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.box&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> res = box.<span class="title function_">cloneNode</span>(<span class="literal">true</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(res);</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="6-节点属性"><a href="#6-节点属性" class="headerlink" title="(6) 节点属性"></a>(6) 节点属性</h4><p><strong>节点类型（nodeType）</strong></p><table><thead><tr><th>节点</th><th>节点类型</th></tr></thead><tbody><tr><td>元素节点</td><td>1</td></tr><tr><td>属性节点</td><td>2</td></tr><tr><td>文本节点</td><td>3</td></tr><tr><td>注释节点</td><td>8</td></tr><tr><td><strong>节点名称（nodeName）</strong></td><td></td></tr></tbody></table><table><thead><tr><th>节点</th><th>节点名称</th></tr></thead><tbody><tr><td>元素节点</td><td>大写标签名</td></tr><tr><td>属性节点</td><td>属性名</td></tr><tr><td>文本节点</td><td>#text</td></tr><tr><td>注释节点</td><td>#comment</td></tr><tr><td><strong>节点内容（nodeValue）</strong></td><td></td></tr></tbody></table><table><thead><tr><th>节点</th><th>节点内容</th></tr></thead><tbody><tr><td>元素节点</td><td>null</td></tr><tr><td>属性节点</td><td>属性值</td></tr><tr><td>文本节点</td><td>文本内容</td></tr><tr><td>注释节点</td><td>注释内容</td></tr></tbody></table><h3 id="四-案例：微博发布"><a href="#四-案例：微博发布" class="headerlink" title="(四) 案例：微博发布"></a>(四) 案例：微博发布</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">textarea</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            * &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.btnStyle</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>发布<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 获取元素</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;ul&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> textarea = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;textarea&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> btnOrigin = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;button&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            btnOrigin.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 获取文本域内容</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> text = textarea.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 判断文本域的内容是否为空</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (text === <span class="string">&#x27;&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">alert</span>(<span class="string">&#x27;请输入内容&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 创建li标签</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;li&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 创建删除按钮</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;button&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 将文本域内容放入li中</span></span></span><br><span class="line"><span class="language-javascript">                li.<span class="property">innerText</span> = <span class="string">`<span class="subst">$&#123;text&#125;</span>`</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 在页面中ul里最前面显示li标签</span></span></span><br><span class="line"><span class="language-javascript">                ul.<span class="title function_">insertBefore</span>(li, ul.<span class="property">firstElementChild</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// li渲染后清空文本域中的内容</span></span></span><br><span class="line"><span class="language-javascript">                textarea.<span class="property">value</span> = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 在创建的li标签中添加按钮</span></span></span><br><span class="line"><span class="language-javascript">                li.<span class="title function_">appendChild</span>(btn, li);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 给创建的按钮添加类名</span></span></span><br><span class="line"><span class="language-javascript">                btn.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;btnStyle&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 给创建的按钮添加文本</span></span></span><br><span class="line"><span class="language-javascript">                btn.<span class="property">innerText</span> = <span class="string">&quot;x&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// var btn1 = document.querySelector(&quot;.btnStyle&quot;);</span></span></span><br><span class="line"><span class="language-javascript">                btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (<span class="title function_">confirm</span>(<span class="string">&quot;你确定要删除吗？&quot;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">                        li.<span class="title function_">remove</span>();</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图</strong>：</p><p><img src="/../_resources/%E5%BE%AE%E5%8D%9A%E5%8F%91%E5%B8%83.gif" class="lazyload placeholder" data-srcset="/../_resources/%E5%BE%AE%E5%8D%9A%E5%8F%91%E5%B8%83.gif" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="../_resources/微博发布.gif"></p>]]></content>
    
    
    <summary type="html">BOM和DOM的相关操作、本地存储等</summary>
    
    
    
    <category term="前端" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
    <category term="前端" scheme="https://fanxing28.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://fanxing28.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>数组的相关知识</title>
    <link href="https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/JavaScript/%E3%80%90JS%E3%80%91%E6%95%B0%E7%BB%84/"/>
    <id>https://fanxing28.github.io/2023/11/28/%E5%89%8D%E7%AB%AF/JavaScript/%E3%80%90JS%E3%80%91%E6%95%B0%E7%BB%84/</id>
    <published>2023-11-28T14:32:25.000Z</published>
    <updated>2023-12-02T12:31:20.879Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-数组的概述"><a href="#一-数组的概述" class="headerlink" title="一. 数组的概述"></a>一. 数组的概述</h2><p>数组也是一个对象，是一个用来存储数据的对象。和Object类似，但是它的存储效率比普通对象要高。</p><blockquote><p>数组中保存的内容我们称为元素。 数组使用索引（index）来操作元素（索引指由0开始的整数）。</p></blockquote><h2 id="二-数组的操作"><a href="#二-数组的操作" class="headerlink" title="二. 数组的操作"></a>二. 数组的操作</h2><h3 id="1-创建数组"><a href="#1-创建数组" class="headerlink" title="(1) 创建数组"></a>(1) 创建数组</h3><p>1.利用 <code>js</code> 的内置构造函数 <code>Array</code> 创建一个数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个空数组</span></span><br><span class="line"><span class="keyword">var</span> arr1 = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line"><span class="comment">// 创建一个指定长度的数组</span></span><br><span class="line"><span class="keyword">var</span> arr2 = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">10</span>); <span class="comment">// 全部用empty填充</span></span><br><span class="line"><span class="comment">// 创建一个有内容的数组</span></span><br><span class="line"><span class="keyword">var</span> arr3 = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure><p><code>注</code>：如果 () 只有一个值，并且这个值为数字，就认为创建一个指定长度的数组；长度：表示数组里面有多少个数据。<br>2.利用数组字面量创建数组[ ]</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个空数组</span></span><br><span class="line"><span class="keyword">var</span> arr1 = [];</span><br><span class="line"><span class="comment">// 创建一个有内容的数组</span></span><br><span class="line"><span class="keyword">var</span> arr2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br></pre></td></tr></table></figure><h3 id="2-获取数组元素"><a href="#2-获取数组元素" class="headerlink" title="(2) 获取数组元素"></a>(2) 获取数组元素</h3><p><strong>格式</strong>：数组名[索引值]</p><blockquote><p>索引（下标）：用来访问数组元素的序号（数组下标从0开始）。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="string">&#x27;好家伙&#x27;</span>,<span class="literal">true</span>];</span><br><span class="line"><span class="title function_">console</span>(arr[<span class="number">2</span>]);<span class="comment">// 好家伙</span></span><br></pre></td></tr></table></figure><h3 id="3-向数组中添加元素"><a href="#3-向数组中添加元素" class="headerlink" title="(3) 向数组中添加元素"></a>(3) 向数组中添加元素</h3><p><strong>语法</strong>：数组对象[索引] &#x3D; 值;</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line">arr[<span class="number">0</span>] = <span class="number">123</span>;</span><br><span class="line">arr[<span class="number">1</span>] = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);<span class="comment">// 结果：[123, &#x27;hello&#x27;]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr[<span class="number">2</span>]);<span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><h4 id="案例-—-向数组中依次存放（1-10）"><a href="#案例-—-向数组中依次存放（1-10）" class="headerlink" title="案例 — 向数组中依次存放（1~10）"></a>案例 — 向数组中依次存放（1~10）</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    arr[i] = i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);<span class="comment">// [1,2,3,4,5,6,7,8,9,10]</span></span><br></pre></td></tr></table></figure><p>$\color{red}{注意}$：在向数组中添加元素时，如果添加对应下标没有值直接添加，如果有值则将之前的值替换。<br><strong>切记</strong>：不要直接给数组名赋值，否则里面的数组元素会全部被取代。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="string">&#x27;zs&#x27;</span>]</span><br><span class="line">arr = <span class="string">&#x27;ls&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);<span class="comment">// ls</span></span><br></pre></td></tr></table></figure><h3 id="4-创建数组时直接添加元素"><a href="#4-创建数组时直接添加元素" class="headerlink" title="(4) 创建数组时直接添加元素"></a>(4) 创建数组时直接添加元素</h3><p>语法：var arr &#x3D; [元素1,元素2….元素N];</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">123</span>,<span class="string">&quot;hello&quot;</span>,<span class="literal">true</span>,<span class="literal">null</span>];</span><br></pre></td></tr></table></figure><h3 id="5-获取和修改数组的长度"><a href="#5-获取和修改数组的长度" class="headerlink" title="(5) 获取和修改数组的长度"></a>(5) 获取和修改数组的长度</h3><blockquote><p>可以使用<code>length</code>属性来操作数组的长度</p></blockquote><p><strong>获取长度</strong></p><blockquote><p>数组名.length</p></blockquote><ul><li><p>length获取到的是数组的最大索引+1</p></li><li><p>对于连续的数组，length获取到的就是数组中元素的个数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="string">&#x27;zs&#x27;</span>,<span class="literal">true</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="property">length</span>); <span class="comment">// 3 </span></span><br></pre></td></tr></table></figure><p><strong>修改数组的长度</strong></p><blockquote><p>数组.length &#x3D; 新长度</p></blockquote></li><li><p>如果修改后的length大于原长度，则多出的部分会用empty补齐</p></li><li><p>如果修改后的length小于原长度，则原数组中多出的元素会被删除<br>向数组的最后添加元素</p><blockquote><p>数组[数组.length] &#x3D; 值;</p></blockquote></li></ul><h2 id="三-遍历数组"><a href="#三-遍历数组" class="headerlink" title="三. 遍历数组"></a>三. 遍历数组</h2><p>遍历数组就是将数组中元素都获取到（一般情况我们都是使用for循环来遍历数组）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; 数组.<span class="property">length</span>; i++)&#123;</span><br><span class="line">    <span class="comment">// console.log(数组[i]);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;关羽&#x27;</span>, <span class="string">&#x27;吕布&#x27;</span>, <span class="string">&#x27;张飞&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">关羽</span></span><br><span class="line"><span class="comment">吕布</span></span><br><span class="line"><span class="comment">张飞</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="案例一-—-数组求和及平均值"><a href="#案例一-—-数组求和及平均值" class="headerlink" title="案例一 — 数组求和及平均值"></a>案例一 — 数组求和及平均值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">2</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">4</span>];</span><br><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> average;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i&lt;arr.<span class="property">length</span>;i++)&#123;</span><br><span class="line">    sum += arr[i];</span><br><span class="line">&#125;</span><br><span class="line">average = sum / arr.<span class="property">length</span> </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;所有数组的和：&#x27;</span> + sum);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;所有数组的平均数：&#x27;</span>+average);</span><br></pre></td></tr></table></figure><h3 id="案例二-—-求数组的最大值"><a href="#案例二-—-求数组的最大值" class="headerlink" title="案例二 — 求数组的最大值"></a>案例二 — 求数组的最大值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">2</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">77</span>, <span class="number">52</span>, <span class="number">25</span>, <span class="number">7</span>];</span><br><span class="line"><span class="keyword">var</span> <span class="title class_">Max</span> = arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Max</span> &lt; arr[i]) &#123;</span><br><span class="line">        <span class="title class_">Max</span> = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;该数组里面的最大值是：&#x27;</span>+<span class="title class_">Max</span>);</span><br></pre></td></tr></table></figure><h3 id="案例三-—-将数组转换为字符串，并且用-或其他符号分割"><a href="#案例三-—-将数组转换为字符串，并且用-或其他符号分割" class="headerlink" title="案例三 — 将数组转换为字符串，并且用 | 或其他符号分割"></a>案例三 — 将数组转换为字符串，并且用 | 或其他符号分割</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;green&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>,<span class="string">&#x27;pink&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.<span class="property">length</span>;i++)&#123;</span><br><span class="line">    str = str + arr[i] + <span class="string">&#x27;|&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br></pre></td></tr></table></figure><h3 id="使用forEach-方法来遍历数组（不兼容IE8）"><a href="#使用forEach-方法来遍历数组（不兼容IE8）" class="headerlink" title="使用forEach()方法来遍历数组（不兼容IE8）"></a>使用<code>forEach()</code>方法来遍历数组（不兼容IE8）</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">数组.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">value , index , obj</span>)&#123;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><code>forEach()</code>方法需要一个回调函数作为参数，数组中有几个元素，回调函数就会被调用几次，每次调用时，都会将遍历到的信息以实参的形式传递进来，我们可以定义形参来获取这些信息。</p><blockquote><p>value:正在遍历的元素 index:正在遍历元素的索引 obj:被遍历对象</p></blockquote><h2 id="四-数组案例"><a href="#四-数组案例" class="headerlink" title="四. 数组案例"></a>四. 数组案例</h2><h4 id="1-在限定条件下筛选数组"><a href="#1-在限定条件下筛选数组" class="headerlink" title="(1) 在限定条件下筛选数组"></a>(1) 在限定条件下筛选数组</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">2</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">77</span>,<span class="number">0</span>,<span class="number">52</span>,<span class="number">0</span>,<span class="number">25</span>,<span class="number">7</span>];</span><br><span class="line"><span class="keyword">var</span> newArr = [];</span><br><span class="line"><span class="keyword">var</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.<span class="property">length</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(arr[i] &gt;= <span class="number">10</span>)&#123;</span><br><span class="line">        <span class="comment">// newArr[j] = arr[i]; // 或</span></span><br><span class="line">        newArr[newArr.<span class="property">length</span>] = arr[i]</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArr);<span class="comment">// [77,52,25]</span></span><br></pre></td></tr></table></figure><h4 id="2-删除数组指定元素（数组去重）"><a href="#2-删除数组指定元素（数组去重）" class="headerlink" title="(2) 删除数组指定元素（数组去重）"></a>(2) 删除数组指定元素（数组去重）</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> newArr = []</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">2</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">77</span>, <span class="number">0</span>, <span class="number">52</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">7</span>]</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] !== <span class="number">0</span>) &#123;</span><br><span class="line">        newArr[newArr.<span class="property">length</span>] = arr[i]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArr);</span><br></pre></td></tr></table></figure><h4 id="3-数组翻转"><a href="#3-数组翻转" class="headerlink" title="(3) 数组翻转"></a>(3) 数组翻转</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;pink&#x27;</span>, <span class="string">&#x27;purple&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> newArr = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = arr.<span class="property">length</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    newArr[newArr.<span class="property">length</span>] = arr[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArr);</span><br><span class="line"><span class="comment">// [&#x27;purple&#x27;, &#x27;pink&#x27;, &#x27;blue&#x27;, &#x27;green&#x27;, &#x27;red&#x27;]</span></span><br></pre></td></tr></table></figure><h4 id="4-数组排序（冒泡排序）"><a href="#4-数组排序（冒泡排序）" class="headerlink" title="(4) 数组排序（冒泡排序）"></a>(4) 数组排序（冒泡排序）</h4><p>冒泡排序：是一种算法，把一系列的数据按照一定的顺序进行排列显示（从小到大或从大到小）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; arr.<span class="property">length</span> - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">var</span> temp = arr[j];</span><br><span class="line">            arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">            arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);<span class="comment">// 1,2,3,4,5</span></span><br></pre></td></tr></table></figure><p><strong>解析</strong>：外层循环控制比较的趟数，里层循环控制每趟需比较的次数。</p><h2 id="五-检测是否为数组"><a href="#五-检测是否为数组" class="headerlink" title="五. 检测是否为数组"></a>五. 检测是否为数组</h2><ol><li>instanceof 运算符<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr <span class="keyword">instanceof</span> <span class="title class_">Array</span>);<span class="comment">// true</span></span><br></pre></td></tr></table></figure></li><li>Array.isArray(参数)<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(arr));<span class="comment">// true</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="六-数组的方法"><a href="#六-数组的方法" class="headerlink" title="六. 数组的方法"></a>六. 数组的方法</h2><h3 id="一-栈方法"><a href="#一-栈方法" class="headerlink" title="(一) 栈方法"></a>(一) 栈方法</h3><blockquote><p>push()、pop() 特点：后进先出</p></blockquote><h4 id="1-push"><a href="#1-push" class="headerlink" title="(1). push()"></a>(1). push()</h4><p>用来向数组的<strong>末尾</strong>添加一个或多个元素，并<strong>返回数组新的长度</strong>。</p><ul><li>特点：会修改原数组</li><li>作用：在原数组的最后面添加该元素</li><li>返回值：追加元素后数组的长度<blockquote><p>语法：数组.push(元素1,元素2,元素N)</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">12</span>,<span class="literal">true</span>,<span class="string">&#x27;zs&#x27;</span>,<span class="number">78</span>,<span class="string">&#x27;万物&#x27;</span>];</span><br><span class="line"><span class="comment">// 返回值：追加元素后新数组的长度</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">push</span>(<span class="string">&#x27;ls&#x27;</span>,<span class="number">23</span>));<span class="comment">// 7(数组的长度)</span></span><br><span class="line"><span class="comment">// 特点：会修改原数组</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);<span class="comment">// [12, true, &#x27;zs&#x27;, 78, &#x27;万物&#x27;, &#x27;ls&#x27;, 23]</span></span><br></pre></td></tr></table></figure><strong>案例</strong>：生成一个数组，里面是2开始的偶数，总共30项<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">30</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        arr.<span class="title function_">push</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在上方输出结果的arr,每5个求平均值,输入新数组中</span></span><br><span class="line"><span class="keyword">var</span> newArr = [],</span><br><span class="line">    sum = <span class="number">0</span>,</span><br><span class="line">    average = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; arr.<span class="property">length</span>; j++) &#123;</span><br><span class="line">    sum += arr[j];</span><br><span class="line">    <span class="keyword">if</span> ((j + <span class="number">1</span>) % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        average = sum / <span class="number">5</span>;</span><br><span class="line">        newArr.<span class="title function_">push</span>(average);</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArr);<span class="comment">// [6,16,26] </span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-pop"><a href="#2-pop" class="headerlink" title="(2). pop()"></a>(2). pop()</h4><p>用来删除数组的<strong>最后一个元素</strong>，并返回<strong>被删除的元素</strong>。</p><ul><li>特点：会修改原数组</li><li>作用：将原数组最后一位元素数删除</li><li>返回值：被删除的元素<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">12</span>,<span class="literal">true</span>,<span class="string">&#x27;zs&#x27;</span>,<span class="number">78</span>,<span class="string">&#x27;万物&#x27;</span>];</span><br><span class="line"><span class="comment">// 返回值：被删除的元素</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">pop</span>()); <span class="comment">// 万物</span></span><br><span class="line"><span class="comment">// 特点：会修改原数组</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// [12,true,&#x27;zs&#x27;,78]</span></span><br></pre></td></tr></table></figure><strong>案例</strong>：清空任意数据项<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">12</span>,<span class="literal">true</span>,<span class="string">&#x27;zs&#x27;</span>,<span class="number">78</span>,<span class="string">&#x27;万物&#x27;</span>];</span><br><span class="line">newLen = arr.<span class="property">length</span>; <span class="comment">// 提前存储数组的长度，保证arr.length不会发生改变</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>,newLen = arr.<span class="property">length</span>; i &lt; newLen; i++) &#123;</span><br><span class="line">    arr.<span class="title function_">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);<span class="comment">// []</span></span><br></pre></td></tr></table></figure>上述案例注意问题：<blockquote><p>数组塌陷：每次pop改变原数组之后，数组的length属性发生改变，下一次使用arr.length出现问题。</p></blockquote></li></ul><h3 id="二-队列方法"><a href="#二-队列方法" class="headerlink" title="(二) 队列方法"></a>(二) 队列方法</h3><blockquote><p>unshift()、shift() 特点先进先出</p></blockquote><h4 id="1-unshift"><a href="#1-unshift" class="headerlink" title="(1). unshift()"></a>(1). unshift()</h4><p>向数组的<strong>最前面</strong>添加一个或多个元素 ，并返回数组新的长度。</p><ul><li>特点：会修改原数组</li><li>作用：在原数组最前面添加一个数</li><li>返回值：修改后数组的长度<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">12</span>,<span class="literal">true</span>,<span class="string">&#x27;zs&#x27;</span>,<span class="number">78</span>,<span class="string">&#x27;万物&#x27;</span>];</span><br><span class="line"><span class="comment">// 返回值：修改后新数组的长度</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">unshift</span>(<span class="string">&#x27;ls&#x27;</span>,<span class="number">23</span>));<span class="comment">// 7(数组的长度)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);<span class="comment">// [&#x27;ls&#x27;, 23, 12, true, &#x27;zs&#x27;, 78, &#x27;万物&#x27;]</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-shift"><a href="#2-shift" class="headerlink" title="(2). shift()"></a>(2). shift()</h4><p>删除数组<strong>最前边</strong>的一个元素，并返回被删除的元素。</p><ul><li>特点：会修改原数组</li><li>作用：删除原数组中第一个元素</li><li>返回值：被删除的元素<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">12</span>,<span class="literal">true</span>,<span class="string">&#x27;zs&#x27;</span>,<span class="number">78</span>,<span class="string">&#x27;万物&#x27;</span>];</span><br><span class="line"><span class="comment">// 返回值：被删除的元素</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">shift</span>());<span class="comment">// 12</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);<span class="comment">// [true,&#x27;zs&#x27;,78,&#x27;万物&#x27;]</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="三-重排序方法"><a href="#三-重排序方法" class="headerlink" title="(三) 重排序方法"></a>(三) 重排序方法</h3><h4 id="1-reverse"><a href="#1-reverse" class="headerlink" title="(1). reverse()"></a>(1). reverse()</h4><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数组.<span class="title function_">reverse</span>()</span><br></pre></td></tr></table></figure><ul><li>作用：用来将数组里面的内容进行反转</li><li>特点：它会对原数组产生影响</li><li>返回值：反转后的数组<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">12</span>, <span class="literal">true</span>, <span class="string">&#x27;zs&#x27;</span>, <span class="number">78</span>, <span class="string">&#x27;万物&#x27;</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">reverse</span>()); <span class="comment">// [&#x27;万物&#x27;, 78, &#x27;zs&#x27;, true, 12]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// [&#x27;万物&#x27;, 78, &#x27;zs&#x27;, true, 12]</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-sort"><a href="#2-sort" class="headerlink" title="(2). sort()"></a>(2). sort()</h4><p>可以对一个数组中的内容进行排序，<strong>默认是按照Unicode编码</strong>进行排序；调用以后，会直接<strong>修改原数组</strong>。可以自己指定排序的规则，需要一个回调函数作为参数<br><strong>常见的Unicode编码</strong>：</p><blockquote><p>0-9：48-57 A-Z：65-90 a-z：97-122</p></blockquote><p><strong>语法格式</strong>：</p><ol><li>数组.sort()</li><li>数组.sort( function(a, b) { return a-b } )<blockquote><p>按照数字大小进行升序排序</p></blockquote></li><li>数组.sort( function(a,b) { return b-a } )<blockquote><p>按照数字大小进行降序排序</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;z&#x27;</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">sort</span>());<span class="comment">// [&#x27;a&#x27;, &#x27;c&#x27;, &#x27;d&#x27;, &#x27;g&#x27;, &#x27;z&#x27;]// 默认升序</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);<span class="comment">// [&#x27;a&#x27;, &#x27;c&#x27;, &#x27;d&#x27;, &#x27;g&#x27;, &#x27;z&#x27;]</span></span><br></pre></td></tr></table></figure><strong>返回值</strong>：排序后的数组。<br><strong>对数字进行升序或降序排列</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">100</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">58</span>, <span class="number">2</span>];</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">compare</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="comment">//升序排列</span></span><br><span class="line">    <span class="comment">//return a - b;</span></span><br><span class="line">    <span class="comment">//降序排列</span></span><br><span class="line">    <span class="keyword">return</span> b - a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">sort</span>(compare));<span class="comment">// [100, 58, 12, 3, 2]</span></span><br></pre></td></tr></table></figure><strong>简洁写法</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">100</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">58</span>, <span class="number">2</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">    arr.<span class="title function_">sort</span>(<span class="keyword">function</span> (<span class="params">a, b</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> a - b;</span><br><span class="line">    &#125;)</span><br><span class="line">);<span class="comment">// [2, 3, 12, 58, 100]</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="四-操作方法"><a href="#四-操作方法" class="headerlink" title="(四) 操作方法"></a>(四) 操作方法</h3><h4 id="1-concat"><a href="#1-concat" class="headerlink" title="(1). concat()"></a>(1). concat()</h4><p>可以连接两个或多个数组，它不会影响原数组，而是<strong>新数组</strong>作为返回值返回</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;zs&#x27;</span>, <span class="string">&#x27;lisi&#x27;</span>, <span class="string">&#x27;red&#x27;</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">concat</span>([<span class="string">&#x27;weifu&#x27;</span>, <span class="string">&#x27;jiayu&#x27;</span>])); <span class="comment">// (5) [&#x27;zs&#x27;, &#x27;lisi&#x27;, &#x27;red&#x27;, &#x27;weifu&#x27;, &#x27;jiayu&#x27;]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// (3) [&#x27;zs&#x27;, &#x27;lisi&#x27;, &#x27;red&#x27;]</span></span><br></pre></td></tr></table></figure><p><strong>和push()方法的区别</strong>：</p><ol><li>是否修改原数组<blockquote><p>push() 修改原数组<br>concat() 不修改原数组</p></blockquote></li><li>插入数据（如果插入的数据是数组）<blockquote><p>push() ：直接以数组的形式插入<br>concat() ：把数组拆开，将数组中的每一项依次放入</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line"><span class="comment">// 1.使用concat()拼接数组</span></span><br><span class="line"><span class="comment">// const newArr = arr.concat([4 ,5]);</span></span><br><span class="line"><span class="comment">// 不会修改原数组：</span></span><br><span class="line"><span class="comment">// console.log(arr); // [1 ,2]</span></span><br><span class="line"><span class="comment">// 如果插入的数据是数组，把数组拆开，把每一项依次放入</span></span><br><span class="line"><span class="comment">// console.log(newArr); // [1 ,2 ,4 ,5]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.使用push()拼接数组</span></span><br><span class="line">arr.<span class="title function_">push</span>([<span class="number">2</span>, <span class="number">3</span>]);</span><br><span class="line"><span class="comment">// 会修改原数组，并且如果插入的数据是数组：直接以数组的形式插入</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// [1 ,2 ,[3 ,4]]</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="2-slice"><a href="#2-slice" class="headerlink" title="(2). slice()"></a>(2). slice()</h4><p>可以从一个数组中截取指定的元素</p><ul><li><strong>语法</strong>：数组.slice(开始索引, 结束索引)</li><li><strong>作用</strong>：截取数组的部分内容</li><li><strong>返回值</strong>：数组内部就是截取出的内容</li><li><strong>特点</strong>：不会影响原数组<br><strong>参数</strong>：</li></ul><ol><li>截取开始位置的索引（包括开始位置）</li><li>截取结束位置的索引（不包括结束位置）  </li><li>第二个参数可以省略不写，如果不写则一直截取到最后。</li><li>参数可以传递一个负值，如果是负值，则从后往前数。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">10</span>, <span class="number">30</span>, <span class="number">50</span>, <span class="number">44</span>, <span class="number">33</span>, <span class="number">66</span>];</span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">slice</span>(<span class="number">2</span>, <span class="number">4</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">// [50,44]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// [10, 30, 50, 44, 33, 66]</span></span><br></pre></td></tr></table></figure><strong>注</strong>：如果两个参数都不写，会将截取整个数组<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">let</span> brr = arr.<span class="title function_">slice</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr, brr); <span class="comment">// [1, 2, 3] [1, 2, 3]</span></span><br><span class="line">brr[<span class="number">1</span>] = <span class="string">&#x27;a&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr, brr); <span class="comment">// [1, 2, 3] [1, a, 3]（不会影响原数组）</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="3-splice"><a href="#3-splice" class="headerlink" title="(3). splice()"></a>(3). splice()</h4><p>可以用来删除数组中指定元素，并使用新的元素替换（该方法会将删除的元素封装到新数组中返回）</p><blockquote><p>注：splice()此方法在效果实现上可以取代许多方法</p></blockquote><p><strong>语法</strong>：</p><ol><li>数组.splice(开始索引, 删除的个数)</li><li>数组.splice(开始索引, 删除的个数, 插入的数据1, 插入的数据2….)<br><strong>作用</strong>：截取从开始索引的位置开始，向后截取指定个数的内容<br><strong>返回值</strong>：<strong>新数组</strong>里面包含截取出来的部分<br><strong>参数</strong>：</li><li>删除开始位置的索引</li><li>删除的个数</li><li>三个以后，都是替换的元素，这些元素将会插入到开始位置索引的前边<br><strong>特点</strong>：会影响原数组。<br><strong>案例</strong>：</li><li>需求1. 删除数组最后一个元素<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">20</span>, <span class="number">30</span>, <span class="number">50</span>, <span class="number">10</span>, <span class="number">80</span>, <span class="number">55</span>];</span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">splice</span>(arr.<span class="property">length</span> - <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">// [55]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// [20, 30, 50, 10, 80]</span></span><br></pre></td></tr></table></figure></li><li>需求2. 删除数组的第一个元素<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">20</span>, <span class="number">30</span>, <span class="number">50</span>, <span class="number">10</span>, <span class="number">80</span>, <span class="number">55</span>]; </span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">splice</span>(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">// [20] </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// [30, 50, 10, 80, 55]</span></span><br></pre></td></tr></table></figure></li><li>需求3. 在数组最前面插入<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">20</span>, <span class="number">30</span>, <span class="number">50</span>, <span class="number">10</span>, <span class="number">80</span>, <span class="number">55</span>];</span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">splice</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;插入的元素&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">// []</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// [&quot;插入的元素&quot; , 20, 30, 50, 10, 80, 55]</span></span><br></pre></td></tr></table></figure></li><li>需求4. 在数组最后面插入<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">20</span>, <span class="number">30</span>, <span class="number">50</span>, <span class="number">10</span>, <span class="number">80</span>, <span class="number">55</span>];</span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">splice</span>(arr.<span class="property">length</span>, <span class="number">0</span>, <span class="string">&quot;插入的元素&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">// []</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);[<span class="number">20</span>, <span class="number">30</span>, <span class="number">50</span>, <span class="number">10</span>, <span class="number">80</span>, <span class="number">55</span>, <span class="string">&quot;插入的元素&quot;</span>]</span><br></pre></td></tr></table></figure></li></ol><h3 id="五-位置方法"><a href="#五-位置方法" class="headerlink" title="(五) 位置方法"></a>(五) 位置方法</h3><h4 id="1-indexOf"><a href="#1-indexOf" class="headerlink" title="(1). indexOf()"></a>(1). indexOf()</h4><p><strong>语法</strong>：</p><ul><li>数组.indexOf(数据)</li><li>数组.indexOf(数据，开始索引)<br><strong>作用</strong>：<code>从前向后查找</code>该数据在数组中第一次出现的位置<br><strong>返回值</strong>：</li><li>如果数组中找到了该数据，那么<strong>返回第一次出现的索引</strong></li><li>如果没找到, 那么<strong>返回-1</strong><br><strong>注</strong>：如果判断的数组中有NaN，则用indexOf判断时得到的也是-1<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">10</span>, <span class="number">30</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">44</span>, <span class="number">20</span>, <span class="number">40</span>, <span class="number">33</span>, <span class="number">66</span>, <span class="number">30</span>];</span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">indexOf</span>(<span class="number">20</span>, <span class="number">3</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">// 5</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// [10, 30, 20, 50, 44, 20, 40, 33, 66, 30]</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-lastIndexOf"><a href="#2-lastIndexOf" class="headerlink" title="(2). lastIndexOf()"></a>(2). lastIndexOf()</h4><p><strong>语法</strong>：</p><ul><li>数组.lastIndexOf(数据)</li><li>数组.lastIndexOf(数据, 开始索引)<br><strong>作用</strong>：<code>从后向前查找</code>数据第一次在该数组中出现的位置<br><strong>返回值</strong>：</li><li>如果数组中找到了该数据，那么返回第一次出现的索引</li><li>如果没找到, 那么返回-1<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">10</span>, <span class="number">30</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">44</span>, <span class="number">20</span>, <span class="number">40</span>, <span class="number">33</span>, <span class="number">66</span>, <span class="number">30</span>];</span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">lastIndexOf</span>(<span class="number">20</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">// 5</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// [10, 30, 20, 50, 44, 20, 40, 33, 66, 30]</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="3-includes"><a href="#3-includes" class="headerlink" title="(3). includes()"></a>(3). includes()</h4><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数组.<span class="title function_">includes</span>(数据)</span><br></pre></td></tr></table></figure><p><strong>作用</strong>：查找该数据在不在数组中。<br><strong>返回值</strong>：</p><blockquote><p>如果在数组中找到该数据，则返回true； 如果没有找到，则返回false。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="number">500</span>];</span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">includes</span>(<span class="number">300</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h3 id="六-迭代方法"><a href="#六-迭代方法" class="headerlink" title="(六) 迭代方法"></a>(六) 迭代方法</h3><p>迭代是重复反馈过程的活动，其目的通常是为了逼近所需目标或结果。</p><blockquote><p>每一次对过程的重复称为一次“迭代”，而每一次迭代得到的结果会作为下一次迭代的初始值。</p></blockquote><h4 id="1-forEach"><a href="#1-forEach" class="headerlink" title="(1). forEach()"></a>(1). forEach()</h4><blockquote><p>forEach()和for循环一个作用，就是用来<strong>遍历数组</strong>的。</p></blockquote><p><strong>语法格式</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">数组项的值,数组的索引,数组本身</span>)&#123;&#125;);</span><br></pre></td></tr></table></figure><p><strong>参数</strong>：函数做参数，默认每一个数组项都会执行一次函数，而且做参数的函数拥有三个参数。</p><ul><li>第一个参数：数组项的值</li><li>第二个参数：数组项的索引</li><li>第三个参数：数组本身<br><code>注意</code>：forEach没有返回值，无法中断遍历(break无法使用)<br><strong>案例：数组去重</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">34</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">1</span>];</span><br><span class="line"><span class="keyword">var</span> newArr = [];</span><br><span class="line">arr.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="comment">// 判断新数组中是否存在该数组项</span></span><br><span class="line">    <span class="keyword">if</span> (newArr.<span class="title function_">indexOf</span>(value) === -<span class="number">1</span>) &#123;</span><br><span class="line">        newArr.<span class="title function_">push</span>(value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;去重后:&#x27;</span>, newArr); <span class="comment">//[1, 4, 6, 34, 7, 2, 5]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;原数组:&#x27;</span>, arr); <span class="comment">//  [1, 4, 6, 34, 6, 7, 2, 2, 5, 6, 1]</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-map"><a href="#2-map" class="headerlink" title="(2). map()"></a>(2). map()</h4><blockquote><p>映射(一 一对应关系)，它可以对数组中的每一项进行操作，返回一个新的数组。</p></blockquote><p><strong>语法格式</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">数组项的值,数组的索引,数组本身</span>)&#123;&#125;);</span><br></pre></td></tr></table></figure><p><strong>参数</strong>：函数做参数，默认每一个数组项都会执行一次函数，而且做参数的函数拥有三个参数。</p><ul><li>第一个参数：数组项的值</li><li>第二个参数：数组项的索引</li><li>第三个参数：数组本身<br><strong>返回值</strong>：返回原数组映射后得到的<strong>新数组</strong><br><strong>案例：每一项都乘以10</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">34</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">1</span>];</span><br><span class="line"><span class="keyword">var</span> newArr = arr.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> value * <span class="number">10</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArr); <span class="comment">// [10, 40, 60, 340, 60, 70, 20, 20, 50, 60, 10]</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="3-filter"><a href="#3-filter" class="headerlink" title="(3). filter()"></a>(3). filter()</h4><blockquote><p>通俗理解其作用是：过滤(筛选)，它可以对数组中的每一项进行操作，返回需要的数组项组成的新数组。</p></blockquote><p><strong>语法格式</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">数组项的值,数组的索引,数组本身</span>)&#123;&#125;);</span><br></pre></td></tr></table></figure><p><strong>参数</strong>：函数做参数，默认每一个数组项都会执行一次函数，而且做参数的函数拥有三个参数。</p><ul><li>第一个参数：数组项的值</li><li>第二个参数：数组项的索引</li><li>第三个参数：数组本身<br><strong>返回值</strong>：返回原数组过滤后得到的<strong>新数组</strong>。<br><strong>案例：筛选大于等于5的数字</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">34</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">1</span>];</span><br><span class="line"><span class="keyword">var</span> newArr = arr.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> value &gt;= <span class="number">5</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArr); <span class="comment">// [6, 34, 6, 7, 5, 6]</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="4-every"><a href="#4-every" class="headerlink" title="(4). every()"></a>(4). every()</h4><blockquote><p>判断数组内是否每一个都满足条件</p></blockquote><p><strong>返回值</strong>：一个布尔值（true或false）<br><strong>语法格式</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">every</span>(<span class="keyword">function</span>(<span class="params">数组项的值,数组的索引,数组本身</span>)&#123;&#125;);</span><br></pre></td></tr></table></figure><p><strong>参数</strong>：函数做参数，默认每一个数组项都会执行一次函数，而且做参数的函数拥有三个参数。</p><ul><li>第一个参数：数组项的值</li><li>第二个参数：数组项的索引</li><li>第三个参数：数组本身<br><strong>案例</strong>：判断数组中的数字是否全是数字型<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">34</span>, <span class="number">6</span>, <span class="string">&#x27;7&#x27;</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">1</span>];</span><br><span class="line"><span class="keyword">var</span> result = arr.<span class="title function_">every</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">typeof</span> value === <span class="string">&#x27;number&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="5-some"><a href="#5-some" class="headerlink" title="(5). some()"></a>(5). some()</h4><blockquote><p>判断数组内是否有一个满足条件</p></blockquote><p><strong>返回值</strong>：一个布尔值（true或false）<br><strong>语法格式</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">some</span>(<span class="keyword">function</span>(<span class="params">数组项的值,数组的索引,数组本身</span>)&#123;&#125;);</span><br></pre></td></tr></table></figure><p><strong>参数</strong>：函数做参数，默认每一个数组项都会执行一次函数，而且做参数的函数拥有三个参数。</p><ul><li>第一个参数：数组项的值</li><li>第二个参数：数组项的索引</li><li>第三个参数：数组本身<br><strong>案例</strong>：判断数组中的数字是否含有字符串型<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="string">&#x27;6&#x27;</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"><span class="keyword">var</span> result = arr.<span class="title function_">some</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">typeof</span> value === <span class="string">&#x27;string&#x27;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// true</span></span><br></pre></td></tr></table></figure>every()和some()这两个方法的<strong>区别</strong>：</li><li>every()是判断数组内是否每一个都满足条件<blockquote><p>简单的说就是要数组内所有项都满足条件才返回true，但凡有一个不满足返回的都是false</p></blockquote></li><li>some(判断数组内是否有一个满足条件<blockquote><p>简单的说就是要数组内所有项至少有一个满足条件就返回true</p></blockquote></li></ul><h4 id="6-find"><a href="#6-find" class="headerlink" title="(6). find()"></a>(6). find()</h4><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数组.<span class="title function_">find</span>(<span class="keyword">function</span>(<span class="params"> item, index, origin </span>)&#123;&#125;)</span><br></pre></td></tr></table></figure><p><strong>参数</strong>：</p><ul><li>item 数组的每一项</li><li>index 数组每一项的索引</li><li>origin 原始数组<br><strong>作用</strong>：在原始数组中查找<strong>满足条件的第一项</strong><br><strong>返回值</strong>：<blockquote><p>如果找到满足条件的，则<strong>返回该值</strong>。 如果没有找到，则<strong>返回undefined</strong>。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="number">500</span>];</span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">find</span>(<span class="keyword">function</span>(<span class="params">item, index</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> item &gt; <span class="number">300</span>;  <span class="comment">// 400</span></span><br><span class="line">    <span class="comment">// return item &gt; 3000; // undefined</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br></pre></td></tr></table></figure></li></ul><h4 id="7-findIndex"><a href="#7-findIndex" class="headerlink" title="(7). findIndex()"></a>(7). findIndex()</h4><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数组.<span class="title function_">findIndex</span>(<span class="keyword">function</span>(<span class="params">item, index, origin</span>)&#123;&#125;)</span><br></pre></td></tr></table></figure><p><strong>参数</strong>：</p><ul><li>item 数组的每一项</li><li>index 数组每一项的索引</li><li>origin 原始数组<br><strong>作用</strong>：查找数组满足条件的第一项的索引<br><strong>返回值</strong>：<blockquote><p>找到相应的数据，则返回该数据<strong>对应的索引值</strong>。 如果没有找到，则返回**-1**。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="number">500</span>];</span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">findIndex</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="comment">// return item &gt; 300; // 3</span></span><br><span class="line">    <span class="keyword">return</span> item &gt; <span class="number">3000</span>; <span class="comment">// -1</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br></pre></td></tr></table></figure></li></ul><h3 id="七-归并方法-reduce"><a href="#七-归并方法-reduce" class="headerlink" title="(七) 归并方法 reduce()"></a>(七) 归并方法 reduce()</h3><p><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数组.<span class="title function_">reduce</span>(<span class="keyword">function</span>(<span class="params">prev, item, index, origin</span>)&#123;&#125;, init)</span><br></pre></td></tr></table></figure><p><strong>参数</strong>：</p><ul><li>prev 迭代的结果</li><li>item 数组的每一项</li><li>index 数组每一项的索引</li><li>origin 原始数组</li><li>init 迭代的初始值(可选)<blockquote><p><strong>prev的值</strong>，如果书写了init，prev第一次就是init的值； 如果没有书写init，prev第一次就是数组索引为0项对应的值； <strong>init的值</strong>，如果书写了init，循环执行了length次；如果没有书写init，循环执行length-1次，从索引值为1项开始循环。</p></blockquote></li></ul><p><strong>作用</strong>：迭代，把整个数组迭代为一个结果<br><strong>返回值</strong>：最终迭代的结果<br><strong>注</strong>：迭代的条件使用return形式书写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="number">500</span>];</span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">reduce</span>(<span class="keyword">function</span>(<span class="params">prev, item</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> prev + item * item;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">// 540100</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="number">500</span>];</span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">reduce</span>(<span class="keyword">function</span>(<span class="params">prev, item</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> prev + item * item;</span><br><span class="line">&#125;,<span class="number">100</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">// 550100</span></span><br></pre></td></tr></table></figure><h3 id="八-数组扁平化-flat"><a href="#八-数组扁平化-flat" class="headerlink" title="(八) 数组扁平化 flat()"></a>(八) 数组扁平化 flat()</h3><blockquote><p>数组扁平化通俗来讲就是将多维数组转化为一维数组</p></blockquote><h4 id="方式一：使用flat-方法"><a href="#方式一：使用flat-方法" class="headerlink" title="方式一：使用flat()方法"></a>方式一：使用flat()方法</h4><blockquote><p><strong><code>flat()</code></strong> 方法会按照一个可指定的深度递归遍历数组，并将所有元素与遍历到的子数组中的元素合并为一个新数组返回。 ()里的数字表示指定递归遍历数组的深度，<code>默认值为1</code>（递归遍历数组1次）。</p></blockquote><p><strong>返回值</strong>：一个包含将数组与子数组中所有元素的<strong>新数组</strong>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = arr.<span class="title function_">flat</span>(<span class="title class_">Infinity</span>); <span class="comment">// ()里的数字表示指定递归遍历数组的深度 Infinity(无穷)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// [1, 3, 4, 5, 6, 7, 8]</span></span><br></pre></td></tr></table></figure><h4 id="方式二：使用递归"><a href="#方式二：使用递归" class="headerlink" title="方式二：使用递归"></a>方式二：使用递归</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">flatten</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> result = [];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(arr)) &#123;</span><br><span class="line">        arr.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(item)) &#123;</span><br><span class="line">                result = result.<span class="title function_">concat</span>(<span class="title function_">flatten</span>(item));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                result.<span class="title function_">push</span>(item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        result.<span class="title function_">push</span>(arr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">flatten</span>(arr)); <span class="comment">// [1, 3, 4, 5, 6, 7, 8]</span></span><br></pre></td></tr></table></figure><h4 id="方式三：使用reduce-方式处理"><a href="#方式三：使用reduce-方式处理" class="headerlink" title="方式三：使用reduce()方式处理"></a>方式三：使用reduce()方式处理</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, [<span class="number">4</span>, <span class="number">5</span>, [<span class="number">2</span>, <span class="number">6</span>]]]];</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flatten</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="comment">// 返回值：最终迭代的结果</span></span><br><span class="line">    <span class="keyword">return</span> arr.<span class="title function_">reduce</span>(<span class="keyword">function</span> (<span class="params">prev, item</span>) &#123;</span><br><span class="line">        <span class="comment">// concat() 如果遇到数组，会把数组拆开，把每一项依次放入</span></span><br><span class="line">        <span class="keyword">return</span> prev.<span class="title function_">concat</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(item) ? <span class="title function_">flatten</span>(item) : item);</span><br><span class="line">    &#125;, []); <span class="comment">// 初始值：[]</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">flatten</span>(arr));  <span class="comment">// [1, 2, 3, 4, 5, 2, 6]</span></span><br></pre></td></tr></table></figure><h3 id="九-转换方法"><a href="#九-转换方法" class="headerlink" title="(九) 转换方法"></a>(九) 转换方法</h3><h4 id="1-join"><a href="#1-join" class="headerlink" title="(1). join()"></a>(1). join()</h4><p>可以将一个数组转换为一个字符串</p><ul><li><strong>语法</strong>：数组.join(‘连接符’)</li><li><strong>作用</strong>：使用连接符，把数组里面的每一个数据都连接起来，变成一个字符串, (连接符不写，<strong>默认：逗号</strong>)</li><li><strong>返回值</strong>：拼接好的字符串。</li><li><strong>特点</strong>：不会影响原数组。<br><strong>参数</strong>：需要一个字符串作为参数，这个字符串将会作为连接符来连接数组中的元素，如果不指定连接符则默认使用。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1 = [<span class="number">2022</span>, <span class="number">12</span>, <span class="number">21</span>];</span><br><span class="line"><span class="keyword">var</span> res1 = arr1.<span class="title function_">join</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res1); <span class="comment">// 2022-12-21</span></span><br><span class="line"><span class="keyword">var</span> arr2 = [<span class="number">16</span>, <span class="number">28</span>, <span class="number">30</span>];</span><br><span class="line"><span class="keyword">var</span> res2 = arr2.<span class="title function_">join</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res2); <span class="comment">// 16:28:30</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1, arr2); <span class="comment">// [2022, 12, 21] [16, 28, 30]</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-toString"><a href="#2-toString" class="headerlink" title="(2). toString()"></a>(2). toString()</h4><p><strong><code>toString()</code></strong> 方法返回一个字符串，表示指定的数组及其元素。<br><strong>语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数组.<span class="title function_">toString</span>()</span><br></pre></td></tr></table></figure><p><strong>返回值</strong>：一个表示数组所有元素的字符串。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// eg:</span></span><br><span class="line"><span class="keyword">const</span> array1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;1a&#x27;</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array1.<span class="title function_">toString</span>()); <span class="comment">// &quot;1,2,a,1a&quot;</span></span><br></pre></td></tr></table></figure><h2 id="七-多维数组及数组扁平化"><a href="#七-多维数组及数组扁平化" class="headerlink" title="七. 多维数组及数组扁平化"></a>七. 多维数组及数组扁平化</h2><h3 id="一-概念"><a href="#一-概念" class="headerlink" title="(一) 概念"></a>(一) 概念</h3><p>(1) <strong>一维数组</strong>：数组中只有数据的时候就是一维数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">10</span>,<span class="number">12</span>,<span class="number">23</span>,<span class="number">45</span>];</span><br></pre></td></tr></table></figure><p>(2) <strong>多维数组</strong>：字面理解就是数组中嵌套了数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,[<span class="number">2</span>,[<span class="number">3</span>]]];</span><br></pre></td></tr></table></figure><p><strong>案例</strong>：生成一个多维数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 要生成的数组样式</span></span><br><span class="line"><span class="keyword">var</span> arr = [</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">    [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>],</span><br><span class="line">    [<span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>],</span><br><span class="line">    [<span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>],</span><br><span class="line">    [<span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>, <span class="number">25</span>]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>方式：使用双重for循环</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = []; <span class="comment">// 定义一个存放的数组</span></span><br><span class="line">num = <span class="number">1</span>; <span class="comment">// 初始化存放的数字</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    arr[i] = []; <span class="comment">// 内部的数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">        arr[i][j] = num;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br></pre></td></tr></table></figure><h3 id="二-数组扁平化"><a href="#二-数组扁平化" class="headerlink" title="(二) 数组扁平化"></a>(二) 数组扁平化</h3><blockquote><p>数组扁平化通俗来讲就是将多维数组转化为一维数组</p></blockquote><h4 id="方式一：使用flat-方法-1"><a href="#方式一：使用flat-方法-1" class="headerlink" title="方式一：使用flat()方法"></a>方式一：使用flat()方法</h4><blockquote><p><strong><code>flat()</code></strong> 方法会按照一个可指定的深度递归遍历数组，并将所有元素与遍历到的子数组中的元素合并为一个新数组返回。 ()里的数字表示指定递归遍历数组的深度，<code>默认值为1</code>（递归遍历数组1次）。</p></blockquote><p><strong>返回值</strong>：一个包含将数组与子数组中所有元素的<strong>新数组</strong>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = arr.<span class="title function_">flat</span>(<span class="title class_">Infinity</span>); <span class="comment">// ()里的数字表示指定递归遍历数组的深度 Infinity(无穷)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// [1, 3, 4, 5, 6, 7, 8]</span></span><br></pre></td></tr></table></figure><h4 id="方式二：使用递归-1"><a href="#方式二：使用递归-1" class="headerlink" title="方式二：使用递归"></a>方式二：使用递归</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">flatten</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> result = [];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(arr)) &#123;</span><br><span class="line">        arr.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(item)) &#123;</span><br><span class="line">                result = result.<span class="title function_">concat</span>(<span class="title function_">flatten</span>(item));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                result.<span class="title function_">push</span>(item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        result.<span class="title function_">push</span>(arr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">flatten</span>(arr)); <span class="comment">// [1, 3, 4, 5, 6, 7, 8]</span></span><br></pre></td></tr></table></figure><h4 id="方式三：使用reduce-方式处理-1"><a href="#方式三：使用reduce-方式处理-1" class="headerlink" title="方式三：使用reduce()方式处理"></a>方式三：使用reduce()方式处理</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, [<span class="number">4</span>, <span class="number">5</span>, [<span class="number">2</span>, <span class="number">6</span>]]]];</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flatten</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="comment">// 返回值：最终迭代的结果</span></span><br><span class="line">    <span class="keyword">return</span> arr.<span class="title function_">reduce</span>(<span class="keyword">function</span> (<span class="params">prev, item</span>) &#123;</span><br><span class="line">        <span class="comment">// concat() 如果遇到数组，会把数组拆开，把每一项依次放入</span></span><br><span class="line">        <span class="keyword">return</span> prev.<span class="title function_">concat</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(item) ? <span class="title function_">flatten</span>(item) : item);</span><br><span class="line">    &#125;, []); <span class="comment">// 初始值：[]</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">flatten</span>(arr));  <span class="comment">// [1, 2, 3, 4, 5, 2, 6]</span></span><br></pre></td></tr></table></figure><h4 id="方式四：使用toString"><a href="#方式四：使用toString" class="headerlink" title="方式四：使用toString()"></a>方式四：使用toString()</h4><p>toString()：将对象转换成字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, [<span class="number">4</span>, <span class="number">5</span>, [<span class="number">2</span>, <span class="number">6</span>]]]];</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flatten</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> arr1 = arr.<span class="title function_">toString</span>().<span class="title function_">split</span>(<span class="string">&quot;,&quot;</span>).<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> +item);</span><br><span class="line">    <span class="keyword">return</span> arr1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">flatten</span>(arr));  <span class="comment">// [1, 2, 3, 4, 5, 2, 6]</span></span><br></pre></td></tr></table></figure><h3 id="三-对象数组的联合操作"><a href="#三-对象数组的联合操作" class="headerlink" title="(三) 对象数组的联合操作"></a>(三) 对象数组的联合操作</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">table</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    var arr = [&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        id: 1,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        cScore: 100,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        mScore: 69,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        eScore: 98</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;, &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        id: 2,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        cScore: 78,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        mScore: 78,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        eScore: 34</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;, &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        id: 3,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        cScore: 34,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        mScore: 56,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        eScore: 56</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;, &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        id: 4,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        cScore: 89,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        mScore: 34,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        eScore: 96</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;, &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        id: 5,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        cScore: 90,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        mScore: 67,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        eScore: 67</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;, &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        id: 6,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        cScore: 23,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        mScore: 90,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        eScore: 45</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;, ]</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    // 计算各科成绩的总分和对总分进行评级</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    arr.forEach(function(item) &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        item[&quot;total&quot;] = item[&quot;cScore&quot;] + item[&quot;eScore&quot;] + item[&quot;mScore&quot;];</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        item[&quot;remark&quot;] = item[&quot;total&quot;] &gt; 200 ? &quot;优秀&quot; : &quot;一般&quot;;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    arr.sort(function(a, b) &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        return b.total - a.total;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    // 表格的表头</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    var str = `<span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>id<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>英语<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>总分<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>评级<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span>`;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    // 循环渲染数据到页面上</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    arr.forEach(function(item) &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        str += `<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;item.id&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;item.cScore&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;item.mScore&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;item.eScore&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;item.total&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;item.remark&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span>`;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    str += &quot;<span class="tag">&lt;/<span class="name">table</span>&gt;</span>&quot;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    box.innerHTML = str;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="八-数组塌陷"><a href="#八-数组塌陷" class="headerlink" title="八. 数组塌陷"></a>八. 数组塌陷</h2><blockquote><p>当用数组的长度进行循环的时候，使用一些修改数组长度的方法（pop、splice），引起原数组的变化。</p></blockquote><p>例如：<br>需求：每次删除一个数据，把数组清空</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;原数组&quot;</span>, arr); <span class="comment">// 原数组 [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    arr.<span class="title function_">pop</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;删除后&quot;</span>, arr); <span class="comment">// 删除后 [1, 2, 3, 4, 5, 6, 7]</span></span><br></pre></td></tr></table></figure><p>分析过程：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">i === <span class="number">0</span>  arr.<span class="property">length</span> = <span class="number">14</span> ===&gt;  arr.<span class="property">pop</span> ====&gt; arr.<span class="property">length</span> = <span class="number">13</span></span><br><span class="line">i === <span class="number">1</span>  arr.<span class="property">length</span> = <span class="number">13</span> ===&gt;  arr.<span class="property">pop</span> ====&gt; arr.<span class="property">length</span> = <span class="number">12</span></span><br><span class="line">i === <span class="number">2</span>  arr.<span class="property">length</span> = <span class="number">12</span> ===&gt;  arr.<span class="property">pop</span> ====&gt; arr.<span class="property">length</span> = <span class="number">11</span></span><br><span class="line">i === <span class="number">3</span>  arr.<span class="property">length</span> = <span class="number">11</span> ===&gt;  arr.<span class="property">pop</span> ====&gt; arr.<span class="property">length</span> = <span class="number">10</span></span><br><span class="line">i === <span class="number">4</span>  arr.<span class="property">length</span> = <span class="number">10</span> ===&gt;  arr.<span class="property">pop</span> ====&gt; arr.<span class="property">length</span> = <span class="number">9</span></span><br><span class="line">i === <span class="number">5</span>  arr.<span class="property">length</span> = <span class="number">9</span> ===&gt;  arr.<span class="property">pop</span> ====&gt; arr.<span class="property">length</span> = <span class="number">8</span></span><br><span class="line">i === <span class="number">6</span>  arr.<span class="property">length</span> = <span class="number">8</span> ===&gt;  arr.<span class="property">pop</span> ====&gt; arr.<span class="property">length</span> = <span class="number">7</span></span><br><span class="line">i === <span class="number">7</span>  arr.<span class="property">length</span> = <span class="number">7</span> ===&gt;  arr.<span class="property">pop</span> ====&gt; arr.<span class="property">length</span> = <span class="number">7</span></span><br></pre></td></tr></table></figure><blockquote><p>循环从0开始 ，到arr.length结束， i &#x3D;&#x3D;&#x3D; 7 的时候， arr.length也等于7，循环结束 因为 删除的时候修改了数组长度，影响了循环的结束条件</p></blockquote><p><strong>解决方式</strong>：让数组长度不要变化， 提前设置一个变量，把长度保存在这个变量里面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>];</span><br><span class="line"><span class="keyword">var</span> len = arr.<span class="property">length</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    arr.<span class="title function_">pop</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;删除后&quot;</span>, arr); <span class="comment">// []</span></span><br></pre></td></tr></table></figure><p><strong>新问题</strong>：用splice()方法删除（删除的时候，会缩短数组，循环也会向后进行）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>];</span><br><span class="line"><span class="keyword">var</span> len = arr.<span class="property">length</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    arr.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// [2, 4, 6, 8, 10, 12, 14]</span></span><br></pre></td></tr></table></figure><p><strong>解决方法1</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = arr.<span class="property">length</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    arr.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// []</span></span><br></pre></td></tr></table></figure><p><strong>解决方法2</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    arr.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">    i--;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// []</span></span><br></pre></td></tr></table></figure><h2 id="九-数组去重常用的方法"><a href="#九-数组去重常用的方法" class="headerlink" title="九. 数组去重常用的方法"></a>九. 数组去重常用的方法</h2><h3 id="方法一：利用排序和比较相邻两个数是否相同"><a href="#方法一：利用排序和比较相邻两个数是否相同" class="headerlink" title="方法一：利用排序和比较相邻两个数是否相同"></a>方法一：利用排序和比较相邻两个数是否相同</h3><p><strong>步骤</strong>：</p><ol><li>先将数组进行排序</li><li>将排序后的数组进行相邻之间的比较，判断他们是否相同<blockquote><p>如果相同，则删除其中一个。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">78</span>, <span class="number">34</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">56</span>, <span class="number">7</span>];</span><br><span class="line"><span class="comment">// 1.排序</span></span><br><span class="line">arr.<span class="title function_">sort</span>();</span><br><span class="line"><span class="comment">// 2.进行相邻比较</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] === arr[i + <span class="number">1</span>]) &#123;</span><br><span class="line">        arr.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">        i--; <span class="comment">// 防止数组塌陷</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;去重后:&#x27;</span>, arr); <span class="comment">// 去重后：[1, 4, 7, 78, 34, 3, 56]</span></span><br></pre></td></tr></table></figure><strong>该方法缺点</strong>：</li><li>会修改原数组</li><li>会改变原数组的排序</li></ol><h3 id="方法二：直接遍历，从前往后查找判断是否存在一样的"><a href="#方法二：直接遍历，从前往后查找判断是否存在一样的" class="headerlink" title="方法二：直接遍历，从前往后查找判断是否存在一样的"></a>方法二：直接遍历，从前往后查找判断是否存在一样的</h3><p><strong>步骤</strong>：</p><ol><li>直接对原数组进行遍历</li><li>从前往后查找，判断是否存在一样的数字<blockquote><p>如果存在，就删除。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">78</span>, <span class="number">34</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">56</span>, <span class="number">7</span>];</span><br><span class="line"><span class="comment">// 1.直接对原数组进行遍历</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="comment">// 如果找到就从该位置继续查找</span></span><br><span class="line">    <span class="keyword">var</span> index = arr.<span class="title function_">indexOf</span>(arr[i], i + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (index !== -<span class="number">1</span>) &#123;</span><br><span class="line">        arr.<span class="title function_">splice</span>(index, <span class="number">1</span>);</span><br><span class="line">        i--; <span class="comment">// 防止数组塌陷</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;去重后：&#x27;</span>, arr); <span class="comment">// 去重后：[1, 4, 7, 78, 34, 3, 56]</span></span><br></pre></td></tr></table></figure><strong>注</strong>：虽然该方法不会改变原数组的排序，但是会修改原数组。</li></ol><h3 id="方法三：创建新数组，判断原数组中的数据在新数组中是否存在"><a href="#方法三：创建新数组，判断原数组中的数据在新数组中是否存在" class="headerlink" title="方法三：创建新数组，判断原数组中的数据在新数组中是否存在"></a>方法三：创建新数组，判断原数组中的数据在新数组中是否存在</h3><p><strong>步骤</strong>：</p><ol><li>首先创建一个新的空数组</li><li>然后判断原数组中的数据在新数组中是否存在<blockquote><p>如果不存在，放入新数组中。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">78</span>, <span class="number">34</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">56</span>, <span class="number">7</span>];</span><br><span class="line"><span class="comment">// 1. 创建一个新的空数组</span></span><br><span class="line"><span class="keyword">var</span> newArr = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="comment">// 2.判断原数组中的数据在新数组中是否存在</span></span><br><span class="line">    <span class="keyword">if</span> (newArr.<span class="title function_">indexOf</span>(arr[i]) === -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 新数组中没有，放入</span></span><br><span class="line">        newArr.<span class="title function_">push</span>(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;原数组:&#x27;</span>, arr); <span class="comment">// 原数组: [1, 4, 4, 7, 78, 34, 3, 1, 56, 7]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;去重后:&#x27;</span>, newArr); <span class="comment">// 去重后: [1, 4, 7, 78, 34, 3, 56]</span></span><br></pre></td></tr></table></figure><strong>注</strong>：该方法创建了新数组，既没有改变原数组，也没有修改原数组的排序。</li></ol><h3 id="方法四：利用ES6-新特性-new-Set"><a href="#方法四：利用ES6-新特性-new-Set" class="headerlink" title="方法四：利用ES6 新特性 new Set()"></a>方法四：利用ES6 新特性 <code>new Set()</code></h3><p><strong>(1) 首先先简单介绍以下Set</strong><br><strong>1.Set 数据结构的特点</strong>：<br>    - 长得像数组<br>    - 天生不接受重复数据<br><strong>2.Set 数据结构的语法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Set</span>([数据<span class="number">1</span>,数据<span class="number">2</span>,数据<span class="number">3</span> ...]);</span><br></pre></td></tr></table></figure><p><strong>(2) 实现的数组去重的代码</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> <span class="title class_">Set</span>(arr);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// Set(7)&amp;nbsp;&#123;1, 4, 7, 78, 34,&amp;nbsp;…&#125;</span></span><br></pre></td></tr></table></figure><p><strong>注</strong>：以上两行代码输出的结果是Set格式的，如果想转换成数组格式方式有：</p><ol><li>利用Array.from()方法<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = <span class="title class_">Array</span>.<span class="title function_">from</span>(a);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;去重后：&#x27;</span>, result); <span class="comment">// 去重后: [1, 4, 7, 78, 34, 3, 56]</span></span><br></pre></td></tr></table></figure></li><li>利用扩展运算符<code>...</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = [...a];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;去重后：&#x27;</span>, result); <span class="comment">// 去重后: [1, 4, 7, 78, 34, 3, 56]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;原数组：&#x27;</span>, arr); <span class="comment">// 原数组: [1, 4, 4, 7, 78, 34, 3, 1, 56, 7]</span></span><br></pre></td></tr></table></figure><strong>注</strong>：此方法的特点：本身自带属性，方便简洁，不会影响原数组的顺序,不会改变原数组。</li></ol><h3 id="方法五：迭代方法【filter-indexOf-】"><a href="#方法五：迭代方法【filter-indexOf-】" class="headerlink" title="方法五：迭代方法【filter()+indexOf()】"></a>方法五：迭代方法【filter()+indexOf()】</h3><p><strong>步骤</strong>：</p><ol><li>使用filter()方法对原数组进行过滤</li><li>利用indexOf()方法判断原数组项对应的索引是否等于indexOf()寻找到的值的索引</li><li>将结果返回给新数组<blockquote><p>这里其实是利用到indexOf()方法的使用规则（indexOf()永远输出的是不同值的第一个被查找到的索引值）</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// indexOf()对应的查找结果：</span></span><br><span class="line"><span class="comment">// 0,0,0,0,0,5,6,7,5,7,10,0</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">34</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">1</span>];</span><br><span class="line"><span class="keyword">var</span> newArr = arr.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">value, index</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> arr.<span class="title function_">indexOf</span>(value) === index;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;去重后:&#x27;</span>, newArr); <span class="comment">// 去重后: [1, 4, 6, 34, 7, 2, 5]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;原数组:&#x27;</span>, arr); <span class="comment">// 原数组: [1, 4, 6, 34, 6, 7, 2, 2, 5, 6, 1]</span></span><br></pre></td></tr></table></figure><strong>注</strong>：该方法既没有改变原数组，也没有修改原数组的排序。</li></ol>]]></content>
    
    
    <summary type="html">数组也是一个对象，是一个用来存储数据的对象。和Object类似，但是它的存储效率比普通对象要高。</summary>
    
    
    
    <category term="前端" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://fanxing28.github.io/categories/%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
    <category term="前端" scheme="https://fanxing28.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://fanxing28.github.io/tags/JavaScript/"/>
    
  </entry>
  
</feed>
